{"version":3,"sources":["constants/chatConstants.ts","actions/chatActions.ts","constants/notificationConstants.ts","service/socket.ts","actions/notificationActions.ts","constants/userConstants.ts","actions/userActions.ts","img/twitter.svg","components/Sidebar/Sidebar.tsx","constants/postConstants.ts","actions/postActions.ts","timeFunction.ts","components/Modal/Modal.tsx","components/PostCard/PostCard.tsx","screens/HomeScreen/HomeScreen.tsx","screens/LoginScreen/LoginScreen.tsx","screens/SignupScreen/SignupScreen.tsx","screens/PostScreen/PostScreen.tsx","components/EditProfile/EditProfile.tsx","components/PinPost/PinPost.tsx","screens/ProfileScreen/ProfileScreen.tsx","screens/LoadingScreen/LoadingScreen.tsx","components/UserCard/UserCard.tsx","screens/FollowsScreen/FollowsScreen.tsx","components/UsersCard/UsersCard.tsx","components/RightBar/RightBar.tsx","constants/messageConstants.ts","actions/messageActions.ts","components/MessageCard/MessageCard.tsx","components/Message/Message.tsx","components/EditGroupInfo/EditGroupInfo.tsx","components/UserMessage/UserMessage.tsx","components/SelectedUser/SelectedUser.tsx","components/AddPeople/AddPeople.tsx","components/LeaveCard/LeaveCard.tsx","components/ChatInfo/ChatInfo.tsx","components/Participant/Participant.tsx","components/NewMessage/NewMessage.tsx","components/EmptyMessage/EmptyMessage.tsx","screens/SearchScreen/SearchScreen.tsx","components/ChatCard/ChatCard.tsx","screens/MessagesScreen/MessagesScreen.tsx","components/NotificationCard/NotificationCard.tsx","screens/NotificationScreen/NotificationScreen.tsx","App.tsx","store.ts","reducers/userReducers.ts","reducers/postReducers.ts","reducers/chatReducers.ts","reducers/messageReducers.ts","reducers/notificationReducers.ts","index.tsx"],"names":["CHAT_CREATE_REQUEST","CHAT_CREATE_SUCCESS","CHAT_CREATE_FAIL","CHAT_CREATE_RESET","CHAT_LIST_REQUEST","CHAT_LIST_SUCCESS","CHAT_LIST_FAIL","CHAT_DETAILS_REQUEST","CHAT_DETAILS_SUCCESS","CHAT_DETAILS_FAIL","CHAT_DETAILS_RESET","CHAT_GROUP_NAME_UPDATE_REQUEST","CHAT_GROUP_NAME_UPDATE_SUCCESS","CHAT_GROUP_NAME_UPDATE_FAIL","CHAT_GROUP_NAME_UPDATE_RESET","CHAT_LIST_READ_REQUEST","CHAT_LIST_READ_SUCCESS","CHAT_LIST_READ_FAIL","CHAT_GROUP_UPDATE_REQUEST","CHAT_GROUP_UPDATE_SUCCESS","CHAT_GROUP_UPDATE_FAIL","CHAT_GROUP_UPDATE_RESET","CHAT_GROUP_LEAVE_REQUEST","CHAT_GROUP_LEAVE_SUCCESS","CHAT_GROUP_LEAVE_FAIL","CHAT_GROUP_LEAVE_RESET","getChats","dispatch","getState","a","type","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","message","getChatsById","chatId","NOTIFICATION_LIST_REQUEST","NOTIFICATION_LIST_SUCCESS","NOTIFICATION_LIST_FAIL","NOTIFICATION_OPEN_REQUEST","NOTIFICATION_OPEN_SUCCESS","NOTIFICATION_OPEN_FAIL","NOTIFICATION_OPEN_ALL_REQUEST","NOTIFICATION_OPEN_ALL_SUCCESS","NOTIFICATION_OPEN_ALL_FAIL","NOTIFICATION_LATEST_REQUEST","NOTIFICATION_LATEST_SUCCESS","NOTIFICATION_LATEST_FAIL","socket","io","transports","emitNotification","userId","loggedInUserId","emit","getUnreadNotifications","params","unreadOnly","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_FOLLOW_REQUEST","USER_FOLLOW_SUCCESS","USER_FOLLOW_FAIL","USER_PROFILE_UPDATE_REQUEST","USER_PROFILE_UPDATE_SUCCESS","USER_PROFILE_UPDATE_FAIL","USER_PROFILE_UPDATE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_SELECT_ADD","USER_SELECT_REMOVE","USER_SELECT_RESET","login","usOrEmail","password","post","localStorage","setItem","JSON","stringify","detailsUser","id","followUser","put","_id","getUsers","keyword","selectUser","userSelect","selectedUser","deselectUser","Sidebar","ntf","userChats","match","useRouteMatch","useDispatch","path","url","useSelector","state","chats","chatList","notifications","notificationList","filter","notification","opened","chat","latestMessage","readBy","includes","useEffect","on","className","src","twitter","alt","to","width","height","viewBox","fill","xmlns","d","stroke","strokeOpacity","strokeWidth","fillRule","clipRule","fillOpacity","length","onClick","removeItem","document","location","href","profilePic","firstName","isVerified","username","POST_LIST_REQUEST","POST_LIST_SUCCESS","POST_LIST_FAIL","POST_LIST_RESET","POST_CREATE_REQUEST","POST_CREATE_SUCCESS","POST_CREATE_FAIL","POST_CREATE_RESET","POST_LIKE_REQUEST","POST_LIKE_SUCCESS","POST_LIKE_FAIL","POST_RETWEET_REQUEST","POST_RETWEET_SUCCESS","POST_RETWEET_FAIL","POST_REPLY_REQUEST","POST_REPLY_SUCCESS","POST_REPLY_FAIL","POST_DETAILS_REQUEST","POST_DETAILS_SUCCESS","POST_DETAILS_FAIL","POST_DELETE_REQUEST","POST_DELETE_SUCCESS","POST_DELETE_FAIL","POST_DELETE_RESET","POSTS_USER_REQUEST","POSTS_USER_SUCCESS","POSTS_USER_FAIL","POSTS_USER_RESET","POST_PIN_REQUEST","POST_PIN_SUCCESS","POST_PIN_FAIL","POST_PIN_RESET","listPosts","listAllPosts","likePost","postId","user","retweetPost","deletePost","delete","pinPost","timeDifference","current","previous","msPerMinute","msPerHour","msPerDay","msPerMonth","msPerYear","elapsed","Math","round","postDate","time","month","getMonth","day","getDate","year","getFullYear","postTime","hour","getHours","minute","getMinutes","userDate","Modal","showModal","setShowModal","textareaRef","useRef","modalRef","useState","content","setContent","error","setError","keyPress","useCallback","e","key","style","scrollHeight","addEventListener","removeEventListener","ref","target","Date","createdAt","retweetData","onSubmit","preventDefault","trim","replyToPost","name","value","placeholder","maxLength","onChange","disabled","PostCard","liked","retweeted","history","useHistory","open","setOpen","body","contains","refVar","replyTo","push","retweetUsers","likes","strokeLinecap","strokeLinejoin","pinned","HomeScreen","postList","posts","loading","success","postCreate","replySuccess","postReply","deleteSuccess","postDelete","createPost","color","map","LoginScreen","setUsOrEmail","setPassword","eyeOpen","setEyeOpen","loginError","toLowerCase","required","SignupScreen","eyeOpen1","setEyeOpen1","eyeOpen2","setEyeOpen2","setFirstName","lastName","setLastName","setUsername","email","setEmail","confirmPassword","setConfirmPassword","setMessage","userRegister","register","PostScreen","pathname","useLocation","postDetails","results","window","scrollTo","detailsPost","EditProfile","userProfileUpdate","setProfilePic","coverPic","setCoverPic","setName","bio","setBio","website","setWebsite","profileUpload","setProfileUpload","coverUpload","setCoverUpload","uploadProfilePicHandler","file","files","formData","FormData","append","uploadCoverPicHandler","updateProfile","accept","htmlFor","PinPost","ProfileScreen","toggleTab","setToggleTab","followButton","setFollowButton","userDetails","postsUser","postPin","chatCreate","createSuccess","tweets","replies","pinnedPost","following","follow","userPosts","users","onMouseOver","onMouseOut","rel","followers","LoadingScreen","UserCard","followYou","FollowsScreen","route","follows","followHandler","replace","index","UsersCard","followed","substring","RightBar","setKeyword","usersList","autoComplete","slice","MESSAGE_CREATE_REQUEST","MESSAGE_CREATE_SUCCESS","MESSAGE_CREATE_FAIL","MESSAGE_CREATE_RESET","MESSAGE_LIST_REQUEST","MESSAGE_LIST_SUCCESS","MESSAGE_LIST_FAIL","createMessage","getMessagesByChat","MessageCard","isGroupChat","messageRef","isMine","sender","scrollIntoView","behavior","block","inline","scrollToBottom","Message","typing","setTyping","getTime","lastTypingTime","setLastTypingTime","connected","setConnected","chatDetails","messageCreate","messages","messageList","allUsers","userIds","images","getChatName","chatName","otherChatUsers","getOtherChatUsers","join","typingHandler","setTimeout","messageHandler","off","markAllMessagesAsRead","shiftKey","image","EditGroupInfo","groupName","setGroupName","chatGroupName","updateGroupName","UserMessage","SelectedUser","AddPeople","newRef","chatUsers","chatGroupUpdateSuccess","chatGroupUpdate","userSelected","userDeselect","event","updateGroupChat","LeaveCard","leaveModal","setLeaveModal","chatGroupLeave","leaveGroupChat","ChatInfo","showEditModal","setShowEditModal","Participant","NewMessage","createGroupChat","EmptyMessage","SearchScreen","ChatCard","active","getChatImageElements","getChatUserId","updatedAt","MessagesScreen","chatNameSuccess","createChatSuccess","leaveGroupSuccess","NotificationCard","notificationType","entityId","userFrom","NotificationScreen","notificationOpen","openAllSuccess","notificationOpenAll","clickHandler","notificationId","openNotification","App","innerWidth","dimensions","setDimensions","handleResize","exact","reducer","combineReducers","userFollow","existUser","find","x","postLike","postRetweet","chatMessagesRead","notificationLatest","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e29ac857.chunk.js","sourcesContent":["export const CHAT_CREATE_REQUEST = \"CHAT_CREATE_REQUEST\";\r\nexport const CHAT_CREATE_SUCCESS = \"CHAT_CREATE_SUCCESS\";\r\nexport const CHAT_CREATE_FAIL = \"CHAT_CREATE_FAIL\";\r\nexport const CHAT_CREATE_RESET = \"CHAT_CREATE_RESET\";\r\n\r\nexport const CHAT_LIST_REQUEST = \"CHAT_LIST_REQUEST\";\r\nexport const CHAT_LIST_SUCCESS = \"CHAT_LIST_SUCCESS\";\r\nexport const CHAT_LIST_FAIL = \"CHAT_LIST_FAIL\";\r\n\r\nexport const CHAT_DETAILS_REQUEST = \"CHAT_DETAILS_REQUEST\";\r\nexport const CHAT_DETAILS_SUCCESS = \"CHAT_DETAILS_SUCCESS\";\r\nexport const CHAT_DETAILS_FAIL = \"CHAT_DETAILS_FAIL\";\r\nexport const CHAT_DETAILS_RESET = \"CHAT_DETAILS_RESET\";\r\n\r\nexport const CHAT_GROUP_NAME_UPDATE_REQUEST = \"CHAT_GROUP_NAME_UPDATE_REQUEST\";\r\nexport const CHAT_GROUP_NAME_UPDATE_SUCCESS = \"CHAT_GROUP_NAME_UPDATE_SUCCESS\";\r\nexport const CHAT_GROUP_NAME_UPDATE_FAIL = \"CHAT_GROUP_NAME_UPDATE_FAIL\";\r\nexport const CHAT_GROUP_NAME_UPDATE_RESET = \"CHAT_GROUP_NAME_UPDATE_RESET\";\r\n\r\nexport const CHAT_LIST_READ_REQUEST = \"CHAT_LIST_READ_REQUEST\";\r\nexport const CHAT_LIST_READ_SUCCESS = \"CHAT_LIST_READ_SUCCESS\";\r\nexport const CHAT_LIST_READ_FAIL = \"CHAT_LIST_READ_FAIL\";\r\n\r\nexport const CHAT_GROUP_UPDATE_REQUEST = \"CHAT_GROUP_UPDATE_REQUEST\";\r\nexport const CHAT_GROUP_UPDATE_SUCCESS = \"CHAT_GROUP_UPDATE_SUCCESS\";\r\nexport const CHAT_GROUP_UPDATE_FAIL = \"CHAT_GROUP_UPDATE_FAIL\";\r\nexport const CHAT_GROUP_UPDATE_RESET = \"CHAT_GROUP_UPDATE_RESET\";\r\n\r\nexport const CHAT_GROUP_LEAVE_REQUEST = \"CHAT_GROUP_LEAVE_REQUEST\";\r\nexport const CHAT_GROUP_LEAVE_SUCCESS = \"CHAT_GROUP_LEAVE_SUCCESS\";\r\nexport const CHAT_GROUP_LEAVE_FAIL = \"CHAT_GROUP_LEAVE_FAIL\";\r\nexport const CHAT_GROUP_LEAVE_RESET = \"CHAT_GROUP_LEAVE_RESET\";\r\n","import axios from \"axios\";\r\nimport {\r\n  CHAT_CREATE_FAIL,\r\n  CHAT_CREATE_REQUEST,\r\n  CHAT_CREATE_RESET,\r\n  CHAT_CREATE_SUCCESS,\r\n  CHAT_DETAILS_FAIL,\r\n  CHAT_DETAILS_REQUEST,\r\n  CHAT_DETAILS_SUCCESS,\r\n  CHAT_GROUP_LEAVE_FAIL,\r\n  CHAT_GROUP_LEAVE_REQUEST,\r\n  CHAT_GROUP_LEAVE_SUCCESS,\r\n  CHAT_GROUP_NAME_UPDATE_FAIL,\r\n  CHAT_GROUP_NAME_UPDATE_REQUEST,\r\n  CHAT_GROUP_NAME_UPDATE_RESET,\r\n  CHAT_GROUP_NAME_UPDATE_SUCCESS,\r\n  CHAT_GROUP_UPDATE_FAIL,\r\n  CHAT_GROUP_UPDATE_REQUEST,\r\n  CHAT_GROUP_UPDATE_SUCCESS,\r\n  CHAT_LIST_FAIL,\r\n  CHAT_LIST_READ_FAIL,\r\n  CHAT_LIST_READ_REQUEST,\r\n  CHAT_LIST_READ_SUCCESS,\r\n  CHAT_LIST_REQUEST,\r\n  CHAT_LIST_SUCCESS,\r\n} from \"../constants/chatConstants\";\r\n\r\nexport const createChat = (users: object[], username: string) => async (\r\n  dispatch: any,\r\n  getState: any\r\n) => {\r\n  try {\r\n    dispatch({ type: CHAT_CREATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/chats`, { users, username }, config);\r\n\r\n    dispatch({ type: CHAT_CREATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CHAT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createGroupChat = (users: object[]) => async (\r\n  dispatch: any,\r\n  getState: any\r\n) => {\r\n  try {\r\n    dispatch({ type: CHAT_CREATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/chats/group`, { users }, config);\r\n\r\n    dispatch({ type: CHAT_CREATE_SUCCESS, payload: data });\r\n    dispatch({ type: CHAT_CREATE_RESET });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CHAT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getChats = () => async (dispatch: any, getState: any) => {\r\n  try {\r\n    dispatch({ type: CHAT_LIST_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/chats`, config);\r\n\r\n    dispatch({ type: CHAT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CHAT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getChatsById = (chatId: string) => async (dispatch: any, getState: any) => {\r\n  try {\r\n    dispatch({ type: CHAT_DETAILS_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/chats/${chatId}`, config);\r\n\r\n    dispatch({ type: CHAT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CHAT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateGroupName = (chatId: string, groupName: string) => async (\r\n  dispatch: any,\r\n  getState: any\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: CHAT_GROUP_NAME_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.put(`/api/chats/${chatId}`, { groupName }, config);\r\n\r\n    dispatch({\r\n      type: CHAT_GROUP_NAME_UPDATE_SUCCESS,\r\n    });\r\n    dispatch({ type: CHAT_GROUP_NAME_UPDATE_RESET });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: CHAT_GROUP_NAME_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const unreadChats = () => async (dispatch: any, getState: any) => {\r\n  try {\r\n    dispatch({ type: CHAT_LIST_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n      params: {\r\n        unreadOnly: true,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/chats`, config);\r\n\r\n    dispatch({ type: CHAT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CHAT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const markAllMessagesAsRead = (chatId: string) => async (\r\n  dispatch: any,\r\n  getState: any\r\n) => {\r\n  try {\r\n    dispatch({ type: CHAT_LIST_READ_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.put(`/api/chats/${chatId}/messages/markAsRead`, { userInfo }, config);\r\n\r\n    dispatch({ type: CHAT_LIST_READ_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CHAT_LIST_READ_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateGroupChat = (chatId: string, users: object[]) => async (\r\n  dispatch: any,\r\n  getState: any\r\n) => {\r\n  try {\r\n    dispatch({ type: CHAT_GROUP_UPDATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/chats/group/${chatId}`, { users }, config);\r\n\r\n    dispatch({ type: CHAT_GROUP_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CHAT_GROUP_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const leaveGroupChat = (chatId: string) => async (\r\n  dispatch: any,\r\n  getState: any\r\n) => {\r\n  try {\r\n    dispatch({ type: CHAT_GROUP_LEAVE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/chats/${chatId}/leave`, {}, config);\r\n\r\n    dispatch({ type: CHAT_GROUP_LEAVE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CHAT_GROUP_LEAVE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","export const NOTIFICATION_LIST_REQUEST = \"NOTIFICATION_LIST_REQUEST\";\r\nexport const NOTIFICATION_LIST_SUCCESS = \"NOTIFICATION_LIST_SUCCESS\";\r\nexport const NOTIFICATION_LIST_FAIL = \"NOTIFICATION_LIST_FAIL\";\r\n\r\nexport const NOTIFICATION_OPEN_REQUEST = \"NOTIFICATION_OPEN_REQUEST\";\r\nexport const NOTIFICATION_OPEN_SUCCESS = \"NOTIFICATION_OPEN_SUCCESS\";\r\nexport const NOTIFICATION_OPEN_FAIL = \"NOTIFICATION_OPEN_FAIL\";\r\n\r\nexport const NOTIFICATION_OPEN_ALL_REQUEST = \"NOTIFICATION_OPEN_ALL_REQUEST\";\r\nexport const NOTIFICATION_OPEN_ALL_SUCCESS = \"NOTIFICATION_OPEN_ALL_SUCCESS\";\r\nexport const NOTIFICATION_OPEN_ALL_FAIL = \"NOTIFICATION_OPEN_ALL_FAIL\";\r\n\r\nexport const NOTIFICATION_LATEST_REQUEST = \"NOTIFICATION_LATEST_REQUEST\";\r\nexport const NOTIFICATION_LATEST_SUCCESS = \"NOTIFICATION_LATEST_SUCCESS\";\r\nexport const NOTIFICATION_LATEST_FAIL = \"NOTIFICATION_LATEST_FAIL\";\r\n","import io from \"socket.io-client\";\r\n\r\nconst ENDPOINT = \"localhost:5000\";\r\n\r\nexport const socket = io(ENDPOINT, { transports: [\"websocket\"] });\r\n\r\nexport const emitNotification = (userId: string, loggedInUserId: string) => {\r\n  if (userId === loggedInUserId) return;\r\n\r\n  socket.emit(\"notification received\", userId);\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  NOTIFICATION_LATEST_FAIL,\r\n  NOTIFICATION_LATEST_REQUEST,\r\n  NOTIFICATION_LATEST_SUCCESS,\r\n  NOTIFICATION_LIST_FAIL,\r\n  NOTIFICATION_LIST_REQUEST,\r\n  NOTIFICATION_LIST_SUCCESS,\r\n  NOTIFICATION_OPEN_ALL_FAIL,\r\n  NOTIFICATION_OPEN_ALL_REQUEST,\r\n  NOTIFICATION_OPEN_ALL_SUCCESS,\r\n  NOTIFICATION_OPEN_FAIL,\r\n  NOTIFICATION_OPEN_REQUEST,\r\n  NOTIFICATION_OPEN_SUCCESS,\r\n} from \"../constants/notificationConstants\";\r\nimport { emitNotification } from \"../service/socket\";\r\n\r\nexport const getNotifications = () => async (dispatch: any, getState: any) => {\r\n  try {\r\n    dispatch({ type: NOTIFICATION_LIST_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/notifications`, config);\r\n\r\n    dispatch({ type: NOTIFICATION_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NOTIFICATION_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const openNotification = (notificationId: string) => async (\r\n  dispatch: any,\r\n  getState: any\r\n) => {\r\n  try {\r\n    dispatch({ type: NOTIFICATION_OPEN_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.put(`/api/notifications/${notificationId}/markAsOpened`, config);\r\n\r\n    dispatch({ type: NOTIFICATION_OPEN_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NOTIFICATION_OPEN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const openAllNotifications = () => async (dispatch: any, getState: any) => {\r\n  try {\r\n    dispatch({ type: NOTIFICATION_OPEN_ALL_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.put(`/api/notifications/markAsOpened`, { userInfo }, config);\r\n\r\n    dispatch({ type: NOTIFICATION_OPEN_ALL_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NOTIFICATION_OPEN_ALL_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUnreadNotifications = () => async (dispatch: any, getState: any) => {\r\n  try {\r\n    dispatch({ type: NOTIFICATION_LIST_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n      params: {\r\n        unreadOnly: true,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/notifications`, config);\r\n\r\n    dispatch({ type: NOTIFICATION_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NOTIFICATION_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getLatestNotification = () => async (dispatch: any, getState: any) => {\r\n  try {\r\n    dispatch({ type: NOTIFICATION_LATEST_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/notifications/latest`, config);\r\n\r\n    emitNotification(data.userFrom._id, userInfo._id);\r\n\r\n    dispatch({ type: NOTIFICATION_LATEST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NOTIFICATION_LATEST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\n\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\nexport const USER_FOLLOW_REQUEST = \"USER_FOLLOW_REQUEST\";\r\nexport const USER_FOLLOW_SUCCESS = \"USER_FOLLOW_SUCCESS\";\r\nexport const USER_FOLLOW_FAIL = \"USER_FOLLOW_FAIL\";\r\n\r\nexport const USER_PROFILE_UPDATE_REQUEST = \"USER_PROFILE_UPDATE_REQUEST\";\r\nexport const USER_PROFILE_UPDATE_SUCCESS = \"USER_PROFILE_UPDATE_SUCCESS\";\r\nexport const USER_PROFILE_UPDATE_FAIL = \"USER_PROFILE_UPDATE_FAIL\";\r\nexport const USER_PROFILE_UPDATE_RESET = \"USER_PROFILE_UPDATE_RESET\";\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\r\n\r\nexport const USER_SELECT_ADD = \"USER_SELECT_ADD\";\r\nexport const USER_SELECT_REMOVE = \"USER_SELECT_REMOVE\";\r\nexport const USER_SELECT_RESET = \"USER_SELECT_RESET\";\r\n","import axios from \"axios\";\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_FOLLOW_REQUEST,\r\n  USER_FOLLOW_SUCCESS,\r\n  USER_FOLLOW_FAIL,\r\n  USER_PROFILE_UPDATE_REQUEST,\r\n  USER_PROFILE_UPDATE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_PROFILE_UPDATE_FAIL,\r\n  USER_PROFILE_UPDATE_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_SELECT_ADD,\r\n  USER_SELECT_REMOVE,\r\n} from \"../constants/userConstants\";\r\nimport { emitNotification } from \"../service/socket\";\r\n\r\nexport const login = (usOrEmail: string, password: string) => async (dispatch: any) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/signin\",\r\n      { usOrEmail, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch: any) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  document.location.href = \"/login\";\r\n};\r\n\r\nexport const register = (\r\n  firstName: string,\r\n  lastName: string,\r\n  username: string,\r\n  email: string,\r\n  password: string\r\n) => async (dispatch: any) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { firstName, lastName, username, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const detailsUser = (id: string) => async (dispatch: any, getState: any) => {\r\n  try {\r\n    dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/profile/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const followUser = (id: string, userId: string) => async (\r\n  dispatch: any,\r\n  getState: any\r\n) => {\r\n  try {\r\n    dispatch({ type: USER_FOLLOW_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${id}/follow`, { userId }, config);\r\n\r\n    emitNotification(id, userInfo._id);\r\n\r\n    dispatch({ type: USER_FOLLOW_SUCCESS });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_FOLLOW_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProfile = (user: object) => async (dispatch: any, getState: any) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_PROFILE_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_PROFILE_UPDATE_SUCCESS,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({ type: USER_DETAILS_RESET });\r\n    dispatch({ type: USER_PROFILE_UPDATE_RESET });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: USER_PROFILE_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUsers = (keyword: string = \"\") => async (dispatch: any) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users?keyword=${keyword}`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const selectUser = (id: string) => async (dispatch: any, getState: any) => {\r\n  const { data } = await axios.get(`/api/users/${id}`);\r\n\r\n  dispatch({\r\n    type: USER_SELECT_ADD,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem(\r\n    \"selectedUser\",\r\n    JSON.stringify(getState().userSelect.selectedUser)\r\n  );\r\n};\r\n\r\nexport const deselectUser = (id: string) => (dispatch: any, getState: any) => {\r\n  dispatch({\r\n    type: USER_SELECT_REMOVE,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem(\r\n    \"selectedUser\",\r\n    JSON.stringify(getState().userSelect.selectedUser)\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/twitter.8b513f1a.svg\";","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { getChats } from \"../../actions/chatActions\";\r\nimport { getUnreadNotifications } from \"../../actions/notificationActions\";\r\nimport { logout } from \"../../actions/userActions\";\r\nimport { socket } from \"../../service/socket\";\r\nimport { reducerState } from \"../../store\";\r\nimport { IChats, INotifications, IUserAuth } from \"../../types\";\r\nimport \"./sidebar.scss\";\r\nimport twitter from \"../../img/twitter.svg\";\r\n\r\ninterface IParams {\r\n  id: string;\r\n}\r\n\r\nconst Sidebar = () => {\r\n  const match = useRouteMatch<IParams>();\r\n  const dispatch = useDispatch();\r\n  let ntf;\r\n  const path = match.path;\r\n  const url = match.url;\r\n\r\n  const userLogin: IUserAuth = useSelector((state: reducerState) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const chatList: IChats = useSelector((state: reducerState) => state.chatList);\r\n  const { chats } = chatList;\r\n\r\n  const notificationList: INotifications = useSelector(\r\n    (state: reducerState) => state.notificationList\r\n  );\r\n  const { notifications } = notificationList;\r\n\r\n  if (notifications) {\r\n    ntf = notifications.filter((notification) => notification.opened === false);\r\n  }\r\n\r\n  let userChats;\r\n  if (userInfo && chats) {\r\n    userChats = chats?.filter((chat) => {\r\n      if (chat.latestMessage) {\r\n        return !chat.latestMessage.readBy.includes(userInfo._id);\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const eventHandler = () => {\r\n      dispatch(getUnreadNotifications());\r\n    };\r\n    const messageHandler = () => {\r\n      dispatch(getChats());\r\n    };\r\n\r\n    socket.on(\"notification received\", eventHandler);\r\n    socket.on(\"message received\", messageHandler);\r\n\r\n    dispatch(getUnreadNotifications());\r\n    dispatch(getChats());\r\n    //dispatch(unreadChats());\r\n  }, [dispatch]);\r\n\r\n  const logoutHandler = () => {\r\n    //dispatch logout\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sidebar\">\r\n        <div className=\"sidebarContainer\">\r\n          <div className=\"sidebarLogo\">\r\n            <img src={twitter} alt=\"twitter\" />\r\n          </div>\r\n          <ul className=\"sidebarLinks\">\r\n            <Link to=\"/home\" className={path === \"/home\" ? \"links active\" : \"links\"}>\r\n              <div className=\"icon\">\r\n                <svg\r\n                  width=\"31\"\r\n                  height=\"30\"\r\n                  viewBox=\"0 0 31 30\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M15.6622 5.33398L25.3839 15.2501H25.3137H24.3137V16.2501V26.2501C24.3137 26.4069 24.1942 26.5001 24.0882 26.5001H18.9608V18.7501V17.7501H17.9608H13.0588H12.0588V18.7501V26.5001H6.93135C6.82539 26.5001 6.70586 26.4069 6.70586 26.2501V16.2501V15.2501H5.70586H5.63569L15.3573 5.33398C15.3574 5.33395 15.3574 5.33391 15.3574 5.33388C15.4439 5.2458 15.5757 5.2458 15.6621 5.33388C15.6622 5.33391 15.6622 5.33395 15.6622 5.33398Z\"\r\n                    stroke=\"white\"\r\n                    strokeOpacity=\"0.9\"\r\n                    strokeWidth=\"2\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              <p className=\"label\">Home</p>\r\n            </Link>\r\n            <Link\r\n              to=\"/search/posts\"\r\n              className={\r\n                url === \"/search/posts\" || url === \"/search/users\"\r\n                  ? \"links active\"\r\n                  : \"links\"\r\n              }\r\n            >\r\n              <div className=\"icon\">\r\n                <svg\r\n                  width=\"31\"\r\n                  height=\"30\"\r\n                  viewBox=\"0 0 31 30\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    clipRule=\"evenodd\"\r\n                    d=\"M13.7667 1.5C7.38036 1.5 2.25488 6.82876 2.25488 13.3374C2.25488 19.8461 7.38036 25.1748 13.7667 25.1748C20.153 25.1748 25.2785 19.8461 25.2785 13.3374C25.2785 10.2076 24.0728 7.20009 21.9175 4.97796C19.7611 2.7548 16.8298 1.5 13.7667 1.5ZM4.25488 13.3374C4.25488 7.87538 8.542 3.5 13.7667 3.5C16.2794 3.5 18.6955 4.52879 20.4819 6.37045C22.2692 8.21314 23.2785 10.7187 23.2785 13.3374C23.2785 18.7994 18.9914 23.1748 13.7667 23.1748C8.542 23.1748 4.25488 18.7994 4.25488 13.3374ZM24.1046 22.0678L27.2353 24.6455H27.2896C27.923 25.2985 27.923 26.3572 27.2896 27.0102C26.6563 27.6632 25.6293 27.6632 24.996 27.0102L22.3979 23.9731C22.1523 23.7207 22.0142 23.378 22.0142 23.0205C22.0142 22.663 22.1523 22.3202 22.3979 22.0678C22.8716 21.588 23.6309 21.588 24.1046 22.0678Z\"\r\n                    fill=\"white\"\r\n                    fillOpacity=\"0.9\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              <p className=\"label\">Explore</p>\r\n            </Link>\r\n            <Link\r\n              to=\"/notifications\"\r\n              className={path === \"/notifications\" ? \"links active\" : \"links\"}\r\n            >\r\n              <div className=\"icon\">\r\n                <svg\r\n                  width=\"30\"\r\n                  height=\"30\"\r\n                  viewBox=\"0 0 30 30\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M14.0588 3.5H16.9608V5.225V6.01122L17.7248 6.19676C19.0525 6.51919 20.0565 7.25421 20.7473 8.3673C21.4513 9.50175 21.8627 11.0858 21.8627 13.125V20V20.6125L22.4084 20.8908L24.3137 21.8625V22.75H6.70587V21.8625L8.61118 20.8908L9.15685 20.6125V20V13.125V13.1067L9.15618 13.0884C9.09807 11.501 9.44833 9.92673 10.1708 8.52225C10.8374 7.32812 11.9676 6.48714 13.2724 6.20193L14.0588 6.03002V5.225V3.5ZM15.8766 26.45H15.8374L15.7346 26.4718C15.6579 26.4881 15.58 26.4975 15.5018 26.4999C15.0829 26.494 14.6979 26.3046 14.4293 26H16.582C16.3927 26.2148 16.1482 26.3712 15.8766 26.45Z\"\r\n                    stroke=\"white\"\r\n                    strokeOpacity=\"0.9\"\r\n                    strokeWidth=\"2\"\r\n                  />\r\n                </svg>\r\n                {ntf && ntf.length > 0 && (\r\n                  <div className=\"notificationCtn\">\r\n                    <span className=\"notification\">{ntf.length}</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <p className=\"label\">Notifications</p>\r\n            </Link>\r\n            <Link\r\n              to=\"/messages\"\r\n              className={\r\n                path === `/messages` ||\r\n                path === `/messages/:id` ||\r\n                path === `/messages/:id/info` ||\r\n                path === `/messages/:id/participants`\r\n                  ? \"links active\"\r\n                  : \"links\"\r\n              }\r\n            >\r\n              <div className=\"icon\">\r\n                <svg\r\n                  width=\"30\"\r\n                  height=\"30\"\r\n                  viewBox=\"0 0 30 30\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M25 25H5C3.61929 25 2.5 23.8807 2.5 22.5V7.39125C2.55826 6.05319 3.66067 4.99873 5 5H25C26.3807 5 27.5 6.11929 27.5 7.5V22.5C27.5 23.8807 26.3807 25 25 25ZM5 9.835V22.5H25V9.835L15 16.5L5 9.835ZM6 7.5L15 13.5L24 7.5H6Z\"\r\n                    fill=\"white\"\r\n                    fillOpacity=\"0.9\"\r\n                  />\r\n                </svg>\r\n                {userChats && userChats.length > 0 && (\r\n                  <div className=\"notificationCtn\">\r\n                    <span className=\"notification\">{userChats.length}</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <p className=\"label\">Messages</p>\r\n            </Link>\r\n            <Link\r\n              to={`/profile/${userInfo?._id}`}\r\n              className={\r\n                url === `/profile/${userInfo?._id}` ||\r\n                url === `/profile/${userInfo?._id}/following` ||\r\n                url === `/profile/${userInfo?._id}/followers`\r\n                  ? \"links active\"\r\n                  : \"links\"\r\n              }\r\n            >\r\n              <div className=\"icon\">\r\n                <svg\r\n                  width=\"31\"\r\n                  height=\"30\"\r\n                  viewBox=\"0 0 31 30\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    clipRule=\"evenodd\"\r\n                    d=\"M15.5098 1.5C11.3389 1.5 8.02206 4.90841 8.02206 9.11382C8.02206 13.319 11.3387 16.7289 15.5098 16.7289C19.6823 16.7289 22.9975 13.3188 22.9975 9.11382C22.9975 4.90853 19.682 1.5 15.5098 1.5ZM10.0221 9.11382C10.0221 5.97665 12.4794 3.5 15.5098 3.5C18.5412 3.5 20.9975 5.97652 20.9975 9.11382C20.9975 12.2514 18.541 14.7289 15.5098 14.7289C12.4797 14.7289 10.0221 12.2512 10.0221 9.11382ZM15.5098 17.9674C12.8429 17.9674 10.2485 18.1777 8.28944 18.8756C7.30269 19.2271 6.40803 19.7259 5.75342 20.4478C5.07873 21.1917 4.70587 22.1228 4.70587 23.2187C4.70587 24.3125 5.07562 25.2439 5.74636 25.9904C6.39764 26.7153 7.28898 27.2188 8.27471 27.5749C10.2314 28.2817 12.8269 28.5 15.5098 28.5C18.1767 28.5 20.7711 28.2897 22.7301 27.5919C23.7169 27.2403 24.6116 26.7415 25.2662 26.0197C25.9409 25.2757 26.3137 24.3446 26.3137 23.2487C26.3137 22.155 25.9441 21.2236 25.2735 20.4771C24.6223 19.7522 23.731 19.2486 22.7454 18.8925C20.7888 18.1857 18.1932 17.9674 15.5098 17.9674ZM6.70587 23.2187C6.70587 22.614 6.89757 22.1633 7.23493 21.7913C7.59239 21.3971 8.15729 21.0458 8.96058 20.7596C10.5816 20.1821 12.8892 19.9674 15.5098 19.9674C18.1433 19.9674 20.4497 20.1897 22.0658 20.7736C22.8665 21.0628 23.4294 21.417 23.7856 21.8136C24.1225 22.1886 24.3137 22.6424 24.3137 23.2487C24.3137 23.8534 24.122 24.3041 23.7847 24.6761C23.4272 25.0703 22.8623 25.4217 22.059 25.7078C20.438 26.2853 18.1304 26.5 15.5098 26.5C12.8769 26.5 10.5705 26.2777 8.95417 25.6938C8.15338 25.4046 7.59043 25.0503 7.23406 24.6537C6.89715 24.2787 6.70587 23.825 6.70587 23.2187Z\"\r\n                    fill=\"white\"\r\n                    fillOpacity=\"0.9\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              <p className=\"label\">Profile</p>\r\n            </Link>\r\n            <li className=\"links\" onClick={logoutHandler}>\r\n              <div className=\"icon\">\r\n                <svg\r\n                  width=\"30\"\r\n                  height=\"30\"\r\n                  viewBox=\"0 0 30 30\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M23.75 26.25H6.25C4.86929 26.25 3.75 25.1307 3.75 23.75V18.75H6.25V23.75H23.75V6.25H6.25V11.25H3.75V6.25C3.75 4.86929 4.86929 3.75 6.25 3.75H23.75C25.1307 3.75 26.25 4.86929 26.25 6.25V23.75C26.25 25.1307 25.1307 26.25 23.75 26.25ZM13.75 20V16.25H3.75V13.75H13.75V10L20 15L13.75 20Z\"\r\n                    fill=\"white\"\r\n                    fillOpacity=\"0.9\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              <p className=\"label\">Log out</p>\r\n            </li>\r\n            <Link to={`/profile/${userInfo?._id}`} className=\"lastLink\">\r\n              <div className=\"profile\">\r\n                <img src={userInfo?.profilePic} alt=\"profile\" />\r\n              </div>\r\n              <div className=\"label\">\r\n                <div className=\"profileDes\">\r\n                  <p>{userInfo?.firstName}</p>\r\n                  {userInfo?.isVerified && (\r\n                    <div className=\"icon\">\r\n                      <svg\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        viewBox=\"0 0 16 16\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M8 14.6667C4.31977 14.6626 1.33737 11.6802 1.33333 7.99999V7.86666C1.40662 4.20301 4.42305 1.2853 8.08711 1.33391C11.7512 1.38253 14.6891 4.37925 14.6652 8.04355C14.6412 11.7079 11.6644 14.6659 8 14.6667ZM4.93999 7.72666L3.99999 8.66666L6.66666 11.3333L12 5.99999L11.06 5.05332L6.66666 9.44666L4.93999 7.72666Z\"\r\n                          fill=\"white\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <p className=\"bottom\">@{userInfo?.username}</p>\r\n              </div>\r\n            </Link>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","export const POST_LIST_REQUEST = \"POST_LIST_REQUEST\";\r\nexport const POST_LIST_SUCCESS = \"POST_LIST_SUCCESS\";\r\nexport const POST_LIST_FAIL = \"POST_LIST_FAIL\";\r\nexport const POST_LIST_RESET = \"POST_LIST_RESET\";\r\n\r\nexport const POST_CREATE_REQUEST = \"POST_CREATE_REQUEST\";\r\nexport const POST_CREATE_SUCCESS = \"POST_CREATE_SUCCESS\";\r\nexport const POST_CREATE_FAIL = \"POST_CREATE_FAIL\";\r\nexport const POST_CREATE_RESET = \"POST_CREATE_RESET\";\r\n\r\nexport const POST_LIKE_REQUEST = \"POST_LIKE_REQUEST\";\r\nexport const POST_LIKE_SUCCESS = \"POST_LIKE_SUCCESS\";\r\nexport const POST_LIKE_FAIL = \"POST_LIKE_FAIL\";\r\n\r\nexport const POST_RETWEET_REQUEST = \"POST_RETWEET_REQUEST\";\r\nexport const POST_RETWEET_SUCCESS = \"POST_RETWEET_SUCCESS\";\r\nexport const POST_RETWEET_FAIL = \"POST_RETWEET_FAIL\";\r\n\r\nexport const POST_REPLY_REQUEST = \"POST_REPLY_REQUEST\";\r\nexport const POST_REPLY_SUCCESS = \"POST_REPLY_SUCCESS\";\r\nexport const POST_REPLY_FAIL = \"POST_REPLY_FAIL\";\r\n\r\nexport const POST_DETAILS_REQUEST = \"POST_DETAILS_REQUEST\";\r\nexport const POST_DETAILS_SUCCESS = \"POST_DETAILS_SUCCESS\";\r\nexport const POST_DETAILS_FAIL = \"POST_DETAILS_FAIL\";\r\n\r\nexport const POST_DELETE_REQUEST = \"POST_DELETE_REQUEST\";\r\nexport const POST_DELETE_SUCCESS = \"POST_DELETE_SUCCESS\";\r\nexport const POST_DELETE_FAIL = \"POST_DELETE_FAIL\";\r\nexport const POST_DELETE_RESET = \"POST_DELETE_RESET\";\r\n\r\nexport const POSTS_USER_REQUEST = \"POSTS_USER_REQUEST\";\r\nexport const POSTS_USER_SUCCESS = \"POSTS_USER_SUCCESS\";\r\nexport const POSTS_USER_FAIL = \"POSTS_USER_FAIL\";\r\nexport const POSTS_USER_RESET = \"POSTS_USER_RESET\";\r\n\r\nexport const POST_PIN_REQUEST = \"POST_PIN_REQUEST\";\r\nexport const POST_PIN_SUCCESS = \"POST_PIN_SUCCESS\";\r\nexport const POST_PIN_FAIL = \"POST_PIN_FAIL\";\r\nexport const POST_PIN_RESET = \"POST_PIN_RESET\";\r\n","import axios from \"axios\";\r\nimport {\r\n  POST_LIKE_FAIL,\r\n  POST_LIKE_REQUEST,\r\n  POST_LIKE_SUCCESS,\r\n  POST_CREATE_FAIL,\r\n  POST_CREATE_REQUEST,\r\n  POST_CREATE_SUCCESS,\r\n  POST_LIST_FAIL,\r\n  POST_LIST_REQUEST,\r\n  POST_LIST_SUCCESS,\r\n  POST_RETWEET_REQUEST,\r\n  POST_RETWEET_SUCCESS,\r\n  POST_RETWEET_FAIL,\r\n  POST_REPLY_REQUEST,\r\n  POST_REPLY_SUCCESS,\r\n  POST_REPLY_FAIL,\r\n  POST_DETAILS_REQUEST,\r\n  POST_DETAILS_SUCCESS,\r\n  POST_DETAILS_FAIL,\r\n  POST_DELETE_REQUEST,\r\n  POST_DELETE_SUCCESS,\r\n  POST_DELETE_FAIL,\r\n  POSTS_USER_REQUEST,\r\n  POSTS_USER_SUCCESS,\r\n  POSTS_USER_FAIL,\r\n  POST_PIN_REQUEST,\r\n  POST_PIN_SUCCESS,\r\n  POST_PIN_FAIL,\r\n} from \"../constants/postConstants\";\r\nimport { USER_LOGIN_SUCCESS } from \"../constants/userConstants\";\r\n\r\nexport const listPosts = () => async (dispatch: any, getState: any) => {\r\n  try {\r\n    dispatch({ type: POST_LIST_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/posts`, config);\r\n\r\n    dispatch({ type: POST_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listAllPosts = (keyword: string = \"\") => async (\r\n  dispatch: any,\r\n  getState: any\r\n) => {\r\n  try {\r\n    dispatch({ type: POST_LIST_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/posts/search?keyword=${keyword}`, config);\r\n\r\n    dispatch({ type: POST_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createPost = (content: string) => async (dispatch: any, getState: any) => {\r\n  try {\r\n    dispatch({ type: POST_CREATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.post(`/api/posts`, { content }, config);\r\n\r\n    dispatch({ type: POST_CREATE_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const likePost = (postId: string, user: object) => async (dispatch: any) => {\r\n  try {\r\n    dispatch({ type: POST_LIKE_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/posts/${postId}/like`, { user }, config);\r\n\r\n    dispatch({ type: POST_LIKE_SUCCESS });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_LIKE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const retweetPost = (postId: string, user: object) => async (dispatch: any) => {\r\n  try {\r\n    dispatch({ type: POST_RETWEET_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/posts/${postId}/retweet`, { user }, config);\r\n\r\n    // emitNotification(postId, userInfo._id);\r\n\r\n    dispatch({ type: POST_RETWEET_SUCCESS });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_RETWEET_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const replyToPost = (postId: string, content: string) => async (\r\n  dispatch: any,\r\n  getState: any\r\n) => {\r\n  try {\r\n    dispatch({ type: POST_REPLY_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.post(`/api/posts/${postId}/reply`, { content }, config);\r\n    dispatch({ type: POST_REPLY_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_REPLY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const detailsPost = (id: string) => async (dispatch: any) => {\r\n  try {\r\n    dispatch({ type: POST_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: POST_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deletePost = (id: string) => async (dispatch: any, getState: any) => {\r\n  try {\r\n    dispatch({ type: POST_DELETE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/posts/${id}`, config);\r\n\r\n    dispatch({ type: POST_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const userPosts = (id: string) => async (dispatch: any, getState: any) => {\r\n  try {\r\n    dispatch({ type: POSTS_USER_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/posts/profile/${id}`, config);\r\n\r\n    dispatch({\r\n      type: POSTS_USER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POSTS_USER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const pinPost = (id: string, post: object) => async (\r\n  dispatch: any,\r\n  getState: any\r\n) => {\r\n  try {\r\n    dispatch({ type: POST_PIN_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.put(`/api/posts/profile/${id}`, { post }, config);\r\n\r\n    dispatch({ type: POST_PIN_SUCCESS });\r\n    //dispatch({ type: POST_PIN_RESET });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_PIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","export const timeDifference = (current: any, previous: any) => {\r\n  const msPerMinute = 60 * 1000;\r\n  const msPerHour = msPerMinute * 60;\r\n  const msPerDay = msPerHour * 24;\r\n  const msPerMonth = msPerDay * 30;\r\n  const msPerYear = msPerDay * 365;\r\n\r\n  const elapsed = current - previous;\r\n\r\n  if (elapsed < msPerMinute) {\r\n    if (elapsed / 1000 < 30) return \"Just now\";\r\n\r\n    return Math.round(elapsed / 1000) + \" s\";\r\n  } else if (elapsed < msPerHour) {\r\n    return Math.round(elapsed / msPerMinute) + \" m\";\r\n  } else if (elapsed < msPerDay) {\r\n    return Math.round(elapsed / msPerHour) + \" h\";\r\n  } else if (elapsed < msPerMonth) {\r\n    return Math.round(elapsed / msPerDay) < 2\r\n      ? Math.round(elapsed / msPerDay) + \" day\"\r\n      : Math.round(elapsed / msPerDay) + \" days\";\r\n  } else if (elapsed < msPerYear) {\r\n    return Math.round(elapsed / msPerMonth) + \" months\";\r\n  } else {\r\n    return Math.round(elapsed / msPerYear) + \" years\";\r\n  }\r\n};\r\n\r\nexport const postDate = (time: Date) => {\r\n  const month = time.getMonth() + 1;\r\n  const day = time.getDate();\r\n  const year = time.getFullYear();\r\n\r\n  if (month === 1) {\r\n    return \"Jan \" + day + \", \" + year;\r\n  } else if (month === 2) {\r\n    return \"Feb \" + day + \", \" + year;\r\n  } else if (month === 3) {\r\n    return \"Mar \" + day + \", \" + year;\r\n  } else if (month === 4) {\r\n    return \"Apr \" + day + \", \" + year;\r\n  } else if (month === 5) {\r\n    return \"May \" + day + \", \" + year;\r\n  } else if (month === 6) {\r\n    return \"Jun \" + day + \", \" + year;\r\n  } else if (month === 7) {\r\n    return \"Jul \" + day + \", \" + year;\r\n  } else if (month === 8) {\r\n    return \"Aug \" + day + \", \" + year;\r\n  } else if (month === 9) {\r\n    return \"Sep \" + day + \", \" + year;\r\n  } else if (month === 10) {\r\n    return \"Oct \" + day + \", \" + year;\r\n  } else if (month === 11) {\r\n    return \"Nov \" + day + \", \" + year;\r\n  } else if (month === 12) {\r\n    return \"Dec \" + day + \", \" + year;\r\n  }\r\n};\r\n\r\nexport const postTime = (time: Date) => {\r\n  const hour = time.getHours();\r\n  const minute = time.getMinutes();\r\n\r\n  if (hour >= 12) {\r\n    if (minute < 10) {\r\n      return `${hour - 12}:0${minute} PM`;\r\n    } else {\r\n      return `${hour - 12}:${minute} PM`;\r\n    }\r\n  } else {\r\n    if (minute < 10) {\r\n      return `${hour}:0${minute} AM`;\r\n    } else {\r\n      return `${hour}:${minute} AM`;\r\n    }\r\n  }\r\n};\r\n\r\nexport const userDate = (time: Date) => {\r\n  const month = time.getMonth() + 1;\r\n  const year = time.getFullYear();\r\n\r\n  if (month === 1) {\r\n    return \"Jan \" + year;\r\n  } else if (month === 2) {\r\n    return \"Feb \" + year;\r\n  } else if (month === 3) {\r\n    return \"Mar \" + year;\r\n  } else if (month === 4) {\r\n    return \"Apr \" + year;\r\n  } else if (month === 5) {\r\n    return \"May \" + year;\r\n  } else if (month === 6) {\r\n    return \"Jun \" + year;\r\n  } else if (month === 7) {\r\n    return \"Jul \" + year;\r\n  } else if (month === 8) {\r\n    return \"Aug \" + year;\r\n  } else if (month === 9) {\r\n    return \"Sep \" + year;\r\n  } else if (month === 10) {\r\n    return \"Oct \" + year;\r\n  } else if (month === 11) {\r\n    return \"Nov \" + year;\r\n  } else if (month === 12) {\r\n    return \"Dec \" + year;\r\n  }\r\n};\r\n","import React, {\r\n  FunctionComponent,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { replyToPost } from \"../../actions/postActions\";\r\nimport { reducerState } from \"../../store\";\r\nimport { timeDifference } from \"../../timeFunction\";\r\nimport { IPost, IUserAuth } from \"../../types\";\r\nimport \"./modal.scss\";\r\n\r\nconst Modal: FunctionComponent<IPost> = ({ post, showModal, setShowModal }) => {\r\n  const textareaRef = useRef<any>(null);\r\n  const modalRef = useRef<HTMLDivElement | null>(null);\r\n  const [content, setContent] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const userLogin: IUserAuth = useSelector((state: reducerState) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const keyPress = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Escape\" && showModal) {\r\n        setShowModal(false);\r\n      }\r\n    },\r\n    [showModal, setShowModal]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showModal) {\r\n      textareaRef.current.style.height = \"0px\";\r\n      const scrollHeight = textareaRef.current.scrollHeight;\r\n      textareaRef.current.style.height = scrollHeight + \"px\";\r\n    }\r\n    document.addEventListener(\"keydown\", keyPress);\r\n    return () => document.removeEventListener(\"keydown\", keyPress);\r\n  }, [content, showModal, keyPress]);\r\n\r\n  const submitHandler = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (content.trim()) {\r\n      // Dispatch comment\r\n      dispatch(replyToPost(post._id, content));\r\n    } else {\r\n      setError(\"Make sure your tweet has a valid value.\");\r\n    }\r\n  };\r\n\r\n  const closeModal = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if (modalRef.current === e.target) {\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showModal && (\r\n        <div ref={modalRef} className=\"modalBackground\" onClick={closeModal}>\r\n          <div className=\"modal\">\r\n            <div className=\"modalTop\">\r\n              <svg\r\n                onClick={() => setShowModal(!showModal)}\r\n                width=\"24\"\r\n                height=\"24\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41L17.59 5Z\"\r\n                  fill=\"#1A91DA\"\r\n                  fillOpacity=\"0.9\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <div className=\"modalMiddle\">\r\n              <div className=\"left\">\r\n                <img src={post.user.profilePic} alt=\"profile\" />\r\n                <div className=\"line\"></div>\r\n              </div>\r\n              <div className=\"right\">\r\n                <div className=\"middleTop\">\r\n                  <p className=\"name\">{post.user.firstName}</p>\r\n                  <p className=\"at\">\r\n                    <span>@{post.user.username}</span>\r\n                    <span>.</span>\r\n                    <span>{timeDifference(new Date(), new Date(post.createdAt))}</span>\r\n                  </p>\r\n                </div>\r\n                <p className=\"middleBottom\">{post.content || post.retweetData.content}</p>\r\n                <p className=\"userProfile\">\r\n                  Replying to <span>@{post.user.username}</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"modalBottom\">\r\n              <div className=\"left\">\r\n                <img src={userInfo?.profilePic} alt=\"profile\" />\r\n              </div>\r\n              <div className=\"right\">\r\n                <form className=\"postForm\" onSubmit={submitHandler}>\r\n                  <textarea\r\n                    ref={textareaRef}\r\n                    name=\"post\"\r\n                    value={content}\r\n                    className=\"postTextarea\"\r\n                    placeholder=\"Tweet your reply\"\r\n                    maxLength={280}\r\n                    onChange={(e) => setContent(e.target.value)}\r\n                  />\r\n                  <div className=\"buttonWrap\">\r\n                    <button\r\n                      className={\r\n                        content.trim() ? \"submitButton\" : \"submitButton disabled\"\r\n                      }\r\n                      type=\"submit\"\r\n                      disabled={content.trim().length === 0}\r\n                    >\r\n                      Reply\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n                {error && <p className=\"errorMessage\">{error}</p>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { FunctionComponent, useEffect, useRef, useState } from \"react\";\r\nimport \"./postCard.scss\";\r\nimport { IPost, IUserAuth } from \"../../types\";\r\nimport { timeDifference } from \"../../timeFunction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { reducerState } from \"../../store\";\r\nimport { deletePost, likePost, pinPost, retweetPost } from \"../../actions/postActions\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport { useHistory, useRouteMatch } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface IParams {\r\n  id: string;\r\n}\r\n\r\nconst PostCard: FunctionComponent<IPost> = ({ post, liked, retweeted }) => {\r\n  const history = useHistory();\r\n  const match = useRouteMatch<IParams>();\r\n  const ref = useRef<HTMLDivElement | null>(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const userLogin: IUserAuth = useSelector((state: reducerState) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const id = match.params.id;\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener(\"click\", (e: any) => {\r\n      if (ref.current?.contains(e.target)) {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    });\r\n\r\n    let refVar = ref.current;\r\n\r\n    return () => {\r\n      document.body.removeEventListener(\"click\", (e: any) => {\r\n        if (refVar?.contains(e.target)) {\r\n          return;\r\n        }\r\n        setOpen(false);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  const likesHandler = () => {\r\n    if (userInfo) {\r\n      dispatch(likePost(post._id, userInfo));\r\n    }\r\n  };\r\n\r\n  const retweetHandler = () => {\r\n    if (userInfo) {\r\n      dispatch(retweetPost(post._id, userInfo));\r\n    }\r\n  };\r\n\r\n  const postLinkHandler = (e: any) => {\r\n    history.push(`/posts/${post._id}`);\r\n  };\r\n\r\n  const deleteHandler = () => {\r\n    //    DELETE Post\r\n    dispatch(deletePost(post._id));\r\n  };\r\n\r\n  const pinPostHandler = () => {\r\n    //    Pin Post\r\n    dispatch(pinPost(id, post));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"postCard\">\r\n        {retweeted ? (\r\n          <div className=\"postCardTop\">\r\n            <div className=\"icon\">\r\n              <svg\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M4.11111 16L1 12.8L4.11111 9.6V12H11.8889V8.8H13.4444V12.8C13.4444 13.2418 13.0962 13.6 12.6667 13.6H4.11111V16ZM4.11111 7.2H2.55556V3.2C2.55556 2.75817 2.90378 2.4 3.33333 2.4H11.8889V0L15 3.2L11.8889 6.4V4H4.11111V7.2Z\"\r\n                  fill=\"white\"\r\n                  fillOpacity=\"0.2\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <p className=\"userRePost\">\r\n              {post.user.username === userInfo?.username ? \"You\" : post.user.username}{\" \"}\r\n              Retweeted\r\n            </p>\r\n          </div>\r\n        ) : post.replyTo ? (\r\n          <div className=\"postCardTop\">\r\n            {post?.user._id === post?.replyTo.user._id ? null : post?.replyTo.user._id ===\r\n              userInfo?._id ? null : (\r\n              <p className=\"userRePost\">You replied to {post?.replyTo.user.firstName}</p>\r\n            )}\r\n          </div>\r\n        ) : null}\r\n        <div className=\"postCardBottom\">\r\n          <div className=\"left\">\r\n            <img src={post.user.profilePic} alt=\"profile\" />\r\n          </div>\r\n          <div className=\"middle\">\r\n            <Link to={`/profile/${post.user._id}`} className=\"middleTop\">\r\n              <p className=\"name\">{post.user.firstName}</p>\r\n              <p className=\"at\">\r\n                <span>@{post.user.username}</span>\r\n                <span>.</span>\r\n                <span>{timeDifference(new Date(), new Date(post.createdAt))}</span>\r\n              </p>\r\n            </Link>\r\n            <p onClick={postLinkHandler} className=\"middleBottom\">\r\n              {post?.content || post.retweetData?.content}\r\n            </p>\r\n            <div className=\"bottom\">\r\n              <div className=\"left-c\" onClick={() => setShowModal(!showModal)}>\r\n                <span className=\"icon\">\r\n                  <svg\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    viewBox=\"0 0 16 16\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M14.23 8.59468L14.2278 8.6053C13.9092 10.1178 12.8899 11.4163 11.4473 12.072L8.5 13.4117V11.8333H6.83333C4.53215 11.8333 2.66667 9.96785 2.66667 7.66667V6.83333C2.66667 4.53215 4.53215 2.66667 6.83333 2.66667H10.1667C12.4679 2.66667 14.3333 4.53215 14.3333 6.83333V7.66667C14.3333 7.98364 14.2982 8.29043 14.2324 8.58408L14.23 8.59468ZM6.83333 16L12.137 13.5893C14.0684 12.7113 15.4323 10.9731 15.8586 8.94882C15.9512 8.53625 16 8.10716 16 7.66667V6.83333C16 3.61167 13.3883 1 10.1667 1H6.83333C3.61167 1 1 3.61167 1 6.83333V7.66667C1 10.8883 3.61167 13.5 6.83333 13.5V16Z\"\r\n                      fill=\"white\"\r\n                      fillOpacity=\"0.2\"\r\n                    />\r\n                  </svg>\r\n                </span>\r\n                <span className=\"number\"></span>\r\n              </div>\r\n              <div\r\n                className={retweeted ? \"middle-c active\" : \"middle-c\"}\r\n                onClick={retweetHandler}\r\n              >\r\n                <span className=\"icon\">\r\n                  <svg\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    viewBox=\"0 0 16 16\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M4.11111 16L1 12.8L4.11111 9.6V12H11.8889V8.8H13.4444V12.8C13.4444 13.2418 13.0962 13.6 12.6667 13.6H4.11111V16ZM4.11111 7.2H2.55556V3.2C2.55556 2.75817 2.90378 2.4 3.33333 2.4H11.8889V0L15 3.2L11.8889 6.4V4H4.11111V7.2Z\"\r\n                      fill=\"white\"\r\n                      fillOpacity=\"0.2\"\r\n                    />\r\n                  </svg>\r\n                </span>\r\n                <span className=\"number\">\r\n                  {(post.retweetUsers.length > 0 && post.retweetUsers.length) ||\r\n                    (post.retweetData?.retweetUsers.length > 0 &&\r\n                      post.retweetData?.retweetUsers.length)}\r\n                </span>\r\n              </div>\r\n              <div\r\n                className={liked ? \"right-c active\" : \"right-c\"}\r\n                onClick={likesHandler}\r\n              >\r\n                <span className=\"icon\">\r\n                  <svg\r\n                    width=\"18\"\r\n                    height=\"18\"\r\n                    viewBox=\"0 0 18 18\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M9 14.9942C8.5485 14.5813 8.0382 14.1518 7.4985 13.6949H7.4915C5.59101 12.0924 3.43711 10.2791 2.48581 8.10627C2.17328 7.41454 2.00765 6.66193 2.00001 5.89884C1.99792 4.85177 2.40515 3.84803 3.12968 3.11447C3.8542 2.3809 4.83486 1.97944 5.85001 2.00081C6.67645 2.00216 7.48509 2.24847 8.1796 2.7104C8.48478 2.91466 8.7609 3.16174 9 3.44452C9.24044 3.16285 9.51663 2.91591 9.8211 2.7104C10.5153 2.24838 11.3238 2.00205 12.15 2.00081C13.1651 1.97944 14.1458 2.3809 14.8703 3.11447C15.5948 3.84803 16.0021 4.85177 16 5.89884C15.9928 6.66315 15.8272 7.41704 15.5142 8.10988C14.5629 10.2827 12.4097 12.0953 10.5092 13.6949L10.5022 13.7007C9.9618 14.1547 9.4522 14.5842 9.0007 15L9 14.9942ZM5.85001 3.44452C5.19797 3.43611 4.56906 3.69345 4.10001 4.16061C3.64808 4.61838 3.3955 5.24559 3.39995 5.89884C3.40794 6.45503 3.53009 7.00317 3.75841 7.50713C4.20747 8.44461 4.81339 9.29304 5.54831 10.0134C6.24201 10.7353 7.04 11.434 7.7302 12.0216C7.9213 12.184 8.1159 12.3479 8.3105 12.5118L8.433 12.615C8.6199 12.7724 8.8131 12.9355 9 13.0957L9.0091 13.0871L9.0133 13.0835H9.0175L9.0238 13.0784H9.0273H9.0308L9.0434 13.0676L9.0721 13.0438L9.077 13.0394L9.0847 13.0337H9.0889L9.0952 13.0279L9.56 12.6345L9.6818 12.5313C9.8785 12.3659 10.0731 12.2021 10.2642 12.0397C10.9544 11.4521 11.7531 10.754 12.4468 10.0286C13.1818 9.30857 13.7878 8.46035 14.2367 7.52301C14.4691 7.01468 14.593 6.46081 14.6 5.89884C14.6029 5.24761 14.3505 4.62281 13.9 4.16638C13.4318 3.69712 12.8028 3.43765 12.15 3.44452C11.3533 3.43754 10.5918 3.7819 10.057 4.39088L9 5.64691L7.943 4.39088C7.40825 3.7819 6.64666 3.43754 5.85001 3.44452Z\"\r\n                      fill=\"white\"\r\n                      fillOpacity=\"0.2\"\r\n                    />\r\n                  </svg>\r\n                </span>\r\n                <span className=\"number\">\r\n                  {(post.likes.length > 0 && post.likes.length) ||\r\n                    (post.retweetData?.likes.length > 0 &&\r\n                      post.retweetData?.likes.length)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div ref={ref} className=\"right\">\r\n            <div className=\"icon\" onClick={() => setOpen(!open)}>\r\n              <svg\r\n                width=\"18\"\r\n                height=\"18\"\r\n                viewBox=\"0 0 18 18\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M13.5 10.5C12.6716 10.5 12 9.82843 12 9C12 8.17157 12.6716 7.5 13.5 7.5C14.3284 7.5 15 8.17157 15 9C15 9.39782 14.842 9.77936 14.5607 10.0607C14.2794 10.342 13.8978 10.5 13.5 10.5ZM9 10.5C8.17157 10.5 7.5 9.82843 7.5 9C7.5 8.17157 8.17157 7.5 9 7.5C9.82843 7.5 10.5 8.17157 10.5 9C10.5 9.39782 10.342 9.77936 10.0607 10.0607C9.77935 10.342 9.39782 10.5 9 10.5ZM4.5 10.5C3.67157 10.5 3 9.82843 3 9C3 8.17157 3.67157 7.5 4.5 7.5C5.32843 7.5 6 8.17157 6 9C6 9.39782 5.84196 9.77936 5.56066 10.0607C5.27936 10.342 4.89782 10.5 4.5 10.5Z\"\r\n                  fill=\"white\"\r\n                  fillOpacity=\"0.3\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <ul className={open ? \"miniMenu open\" : \"miniMenu\"}>\r\n              {userInfo?._id === post.user._id && (\r\n                <>\r\n                  <li className=\"link\" onClick={deleteHandler}>\r\n                    <svg\r\n                      width=\"20\"\r\n                      height=\"20\"\r\n                      viewBox=\"0 0 20 20\"\r\n                      fill=\"none\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        d=\"M14.1667 18.3334H5.83333C4.91286 18.3334 4.16667 17.5872 4.16667 16.6667V5.83335H2.5V4.16669H5.83333V3.33335C5.83333 2.41288 6.57953 1.66669 7.5 1.66669H12.5C13.4205 1.66669 14.1667 2.41288 14.1667 3.33335V4.16669H17.5V5.83335H15.8333V16.6667C15.8333 17.5872 15.0871 18.3334 14.1667 18.3334ZM5.83333 5.83335V16.6667H14.1667V5.83335H5.83333ZM7.5 3.33335V4.16669H12.5V3.33335H7.5ZM12.5 15H10.8333V7.50002H12.5V15ZM9.16667 15H7.5V7.50002H9.16667V15Z\"\r\n                        fill=\"#FF003D\"\r\n                      />\r\n                    </svg>\r\n                    <p className=\"text\">Delete</p>\r\n                  </li>\r\n                  <li className=\"link\" onClick={pinPostHandler}>\r\n                    <svg\r\n                      width=\"20\"\r\n                      height=\"20\"\r\n                      viewBox=\"0 0 20 20\"\r\n                      fill=\"none\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        d=\"M13.4292 1.66669H6.57084C5.80834 1.66669 5.16667 2.14335 5.07167 2.77752L5.00001 3.33335C4.93334 3.78252 5.14501 4.15419 5.48668 4.46919C5.59084 4.56502 5.69584 4.66085 5.79918 4.75835C6.44584 5.36835 6.50751 6.30669 6.22251 7.14919L5.86501 8.20669C5.84446 8.29129 5.81942 8.37474 5.79001 8.45669C5.70751 8.68085 5.51501 9.17502 5.26501 9.60585C5.10667 9.87835 4.86668 10.0892 4.60418 10.2642C3.97418 10.6842 4.27084 11.6667 5.02917 11.6667H8.75001V13.4259C8.75001 14.4609 8.57501 15.4817 9.03751 16.4075L10 18.3334L10.9625 16.4084C11.4258 15.4817 11.25 14.4609 11.25 13.4259V11.6667H14.9708C15.7292 11.6667 16.0258 10.6834 15.3958 10.2634C15.1333 10.0884 14.8933 9.87835 14.735 9.60502C14.5291 9.23684 14.3535 8.85252 14.21 8.45585C14.1806 8.3739 14.1556 8.29045 14.135 8.20585L13.7775 7.14835C13.4942 6.30669 13.555 5.36835 14.2008 4.75835C14.3042 4.66085 14.4092 4.56502 14.5133 4.46919C14.855 4.15419 15.0667 3.78252 15 3.33335L14.9283 2.77752C14.8333 2.14335 14.1908 1.66669 13.4292 1.66669Z\"\r\n                        stroke=\"white\"\r\n                        strokeOpacity=\"0.9\"\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                      />\r\n                    </svg>\r\n                    {post.pinned ? (\r\n                      <p className=\"text\">Unpin from profile</p>\r\n                    ) : (\r\n                      <p className=\"text\">Pin to your profile</p>\r\n                    )}\r\n                  </li>\r\n                </>\r\n              )}\r\n              {userInfo?._id !== post.user._id && (\r\n                <li className=\"link\">\r\n                  <svg\r\n                    width=\"20\"\r\n                    height=\"20\"\r\n                    viewBox=\"0 0 20 20\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M3.33334 15.8333H1.66667C1.66667 13.0719 3.90525 10.8333 6.66667 10.8333C9.4281 10.8333 11.6667 13.0719 11.6667 15.8333H10C10 13.9924 8.50762 12.5 6.66667 12.5C4.82572 12.5 3.33334 13.9924 3.33334 15.8333ZM15.8333 13.3333H14.1667V10.8333H11.6667V9.16665H14.1667V6.66665H15.8333V9.16665H18.3333V10.8333H15.8333V13.3333ZM6.66667 9.99998C4.82572 9.99998 3.33334 8.5076 3.33334 6.66665C3.33334 4.8257 4.82572 3.33331 6.66667 3.33331C8.50762 3.33331 10 4.8257 10 6.66665C9.99771 8.50664 8.50667 9.99768 6.66667 9.99998ZM6.66667 4.99998C5.75617 5.0009 5.01491 5.73235 5.00186 6.64276C4.98882 7.55317 5.70881 8.30557 6.61891 8.33258C7.52902 8.35959 8.29237 7.65123 8.33334 6.74165V7.07498V6.66665C8.33334 5.74617 7.58715 4.99998 6.66667 4.99998Z\"\r\n                      fill=\"white\"\r\n                      fillOpacity=\"0.9\"\r\n                    />\r\n                  </svg>\r\n\r\n                  <p className=\"text\">Follow</p>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <Modal post={post} showModal={showModal} setShowModal={setShowModal} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { reducerState } from \"../../store\";\r\nimport { ICreatePost, IPostReply, IPosts, IUserAuth, IDelete } from \"../../types\";\r\nimport { useHistory } from \"react-router\";\r\nimport { createPost, listPosts } from \"../../actions/postActions\";\r\nimport { POST_CREATE_RESET } from \"../../constants/postConstants\";\r\nimport { socket } from \"../../service/socket\";\r\nimport PostCard from \"../../components/PostCard/PostCard\";\r\nimport \"./homeScreen.scss\";\r\n\r\nconst HomeScreen = () => {\r\n  const history = useHistory();\r\n  const textareaRef = useRef<any>(null);\r\n  const [content, setContent] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const userLogin: IUserAuth = useSelector((state: reducerState) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const postList: IPosts = useSelector((state: reducerState) => state.postList);\r\n  const { posts, loading } = postList;\r\n\r\n  const postCreate: ICreatePost = useSelector((state: reducerState) => state.postCreate);\r\n  const { success } = postCreate;\r\n\r\n  const postReply: IPostReply = useSelector((state: reducerState) => state.postReply);\r\n  const { success: replySuccess } = postReply;\r\n\r\n  const postDelete: IDelete = useSelector((state: reducerState) => state.postDelete);\r\n  const { success: deleteSuccess } = postDelete;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    //dispatch posts\r\n    dispatch(listPosts());\r\n  }, [history, userInfo, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      socket.emit(\"setup\", userInfo);\r\n    }\r\n  }, [userInfo]);\r\n\r\n  useEffect(() => {\r\n    textareaRef.current.style.height = \"0px\";\r\n    const scrollHeight = textareaRef.current.scrollHeight;\r\n    textareaRef.current.style.height = scrollHeight + \"px\";\r\n  }, [content]);\r\n\r\n  useEffect(() => {\r\n    if (success || replySuccess || deleteSuccess) {\r\n      dispatch({ type: POST_CREATE_RESET });\r\n      dispatch(listPosts());\r\n      setContent(\"\");\r\n    }\r\n  }, [success, dispatch, replySuccess, deleteSuccess]);\r\n\r\n  const submitHandler = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (content.trim()) {\r\n      // Dispatch create post\r\n      dispatch(createPost(content));\r\n    } else {\r\n      setError(\"Make sure your tweet has a valid value.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"homeScreen\">\r\n        <div className=\"homeContainer\">\r\n          <p className=\"homeTitle\">Home</p>\r\n          <div className=\"newPost\">\r\n            <div className=\"left\">\r\n              <img src={userInfo?.profilePic} alt=\"profile\" />\r\n            </div>\r\n            <div className=\"right\">\r\n              <form className=\"postForm\" onSubmit={submitHandler}>\r\n                <textarea\r\n                  ref={textareaRef}\r\n                  name=\"post\"\r\n                  value={content}\r\n                  className=\"postTextarea\"\r\n                  placeholder=\"What’s happening?\"\r\n                  maxLength={280}\r\n                  onChange={(e) => setContent(e.target.value)}\r\n                />\r\n                <div className=\"buttonWrap\">\r\n                  <button\r\n                    className={content.trim() ? \"submitButton\" : \"submitButton disabled\"}\r\n                    type=\"submit\"\r\n                    disabled={content.trim().length === 0}\r\n                  >\r\n                    Tweet\r\n                  </button>\r\n                </div>\r\n              </form>\r\n              {error && <p className=\"errorMessage\">{error}</p>}\r\n              {/* {postError && <p className=\"errorMessage\">{postError}</p>} */}\r\n            </div>\r\n          </div>\r\n          <div className=\"bar\"></div>\r\n          {loading ? (\r\n            <div className=\"loading\">\r\n              <i\r\n                className=\"fas fa-spinner fa-spin fa-2x\"\r\n                style={{ color: \"rgba(0, 238, 255, 0.9)\" }}\r\n              ></i>\r\n            </div>\r\n          ) : error ? (\r\n            <p className=\"errorMessage\">{error}</p>\r\n          ) : (\r\n            <>\r\n              {!posts?.length ? (\r\n                <p className=\"empty\">No Tweets were found</p>\r\n              ) : (\r\n                posts.map((post) => (\r\n                  <PostCard\r\n                    key={post._id}\r\n                    post={post}\r\n                    liked={\r\n                      post.likes.includes(userInfo?._id!) ||\r\n                      post.retweetData?.likes.includes(userInfo?._id!)\r\n                    }\r\n                    retweeted={\r\n                      post.retweetUsers.includes(userInfo?._id!) ||\r\n                      post.retweetData?.retweetUsers.includes(userInfo?._id!)\r\n                    }\r\n                  />\r\n                ))\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { reducerState } from \"../../store\";\r\nimport { IUserAuth } from \"../../types\";\r\nimport { login } from \"../../actions/userActions\";\r\nimport \"./loginScreen.scss\";\r\n\r\nconst LoginScreen = () => {\r\n  const history = useHistory();\r\n\r\n  const [usOrEmail, setUsOrEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [eyeOpen, setEyeOpen] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const userLogin: IUserAuth = useSelector((state: reducerState) => state.userLogin);\r\n  const { userInfo, loading, error: loginError } = userLogin;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/home\");\r\n    }\r\n  }, [userInfo, history]);\r\n\r\n  const handleEye = () => {\r\n    setEyeOpen(!eyeOpen);\r\n  };\r\n\r\n  const submitHandler = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (usOrEmail.trim()) {\r\n      //DISPATCH_LOGIN\r\n      dispatch(login(usOrEmail.toLowerCase(), password));\r\n    } else {\r\n      setError(\"Make sure each field has a valid value.\");\r\n    }\r\n  };\r\n\r\n  const testLoginHandler = () => {\r\n    dispatch(login(\"xfire@gmail.com\", \"12345\"));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"loginScreen\">\r\n        <div className=\"loginBackground\">\r\n          <div className=\"loginContainer\">\r\n            <div className=\"loginLogo\">\r\n              <svg\r\n                width=\"60\"\r\n                height=\"60\"\r\n                viewBox=\"0 0 60 60\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M49.9875 16.72C52.2286 15.3802 53.9055 13.2706 54.705 10.785C52.5992 12.0345 50.2951 12.9147 47.8925 13.3875C44.5615 9.86379 39.2838 9.00629 35.0085 11.2941C30.7333 13.5819 28.5188 18.4487 29.6025 23.175C20.9766 22.7419 12.94 18.6673 7.49254 11.965C4.64964 16.8685 6.10242 23.1369 10.8125 26.29C9.10931 26.2352 7.44386 25.7741 5.95504 24.945C5.95504 24.99 5.95504 25.035 5.95504 25.08C5.95602 30.1879 9.55597 34.5877 14.5625 35.6C12.9827 36.0298 11.3256 36.0931 9.71754 35.785C11.1255 40.1531 15.1514 43.1457 19.74 43.235C15.9396 46.2178 11.2462 47.8354 6.41504 47.8275C5.55872 47.8287 4.70306 47.7795 3.85254 47.68C8.75851 50.8325 14.4685 52.5059 20.3 52.5C28.4132 52.5557 36.2101 49.3572 41.9469 43.62C47.6836 37.8828 50.8814 30.0856 50.825 21.9725C50.825 21.5075 50.8142 21.045 50.7925 20.585C52.8937 19.0665 54.7071 17.1853 56.1475 15.03C54.1901 15.8976 52.1137 16.4673 49.9875 16.72Z\"\r\n                  fill=\"white\"\r\n                  fillOpacity=\"0.9\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <h1 className=\"loginTitle\">Log in to Twitter</h1>\r\n            <form className=\"loginForm\" onSubmit={submitHandler}>\r\n              <div className=\"loginFormGroup\">\r\n                <label className=\"formLabel\">Username or Email</label>\r\n                <div className=\"formInputWrap\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={usOrEmail}\r\n                    onChange={(e) => setUsOrEmail(e.target.value)}\r\n                    className=\"formInput\"\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"loginFormGroup\">\r\n                <label className=\"formLabel\">Password</label>\r\n                <div className=\"formInputWrap\">\r\n                  <input\r\n                    type={eyeOpen ? \"text\" : \"password\"}\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    className=\"formInput\"\r\n                    required\r\n                  />\r\n                  <div className=\"imageWrap\" onClick={handleEye}>\r\n                    {eyeOpen ? (\r\n                      <svg\r\n                        width=\"20\"\r\n                        height=\"20\"\r\n                        viewBox=\"0 0 20 20\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M10 4.40002C3.439 4.40002 0 9.23202 0 10C0 10.766 3.439 15.6 10 15.6C16.56 15.6 20 10.766 20 10C20 9.23202 16.56 4.40002 10 4.40002ZM10 14.307C7.545 14.307 5.555 12.379 5.555 10C5.555 7.62102 7.545 5.69102 10 5.69102C12.455 5.69102 14.444 7.62102 14.444 10C14.444 12.379 12.455 14.307 10 14.307ZM10 10C9.593 9.55302 10.663 7.84602 10 7.84602C8.772 7.84602 7.777 8.81102 7.777 10C7.777 11.189 8.772 12.154 10 12.154C11.227 12.154 12.223 11.189 12.223 10C12.223 9.45302 10.346 10.379 10 10Z\"\r\n                          fill=\"white\"\r\n                          fillOpacity=\"0.9\"\r\n                        />\r\n                      </svg>\r\n                    ) : (\r\n                      <svg\r\n                        width=\"20\"\r\n                        height=\"20\"\r\n                        viewBox=\"0 0 20 20\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M14.8417 11.1584C16.3087 9.9534 17.2597 8.23327 17.5 6.35008C17.5131 6.24064 17.5046 6.12969 17.4748 6.02356C17.4451 5.91743 17.3947 5.8182 17.3266 5.73153C17.2585 5.64487 17.174 5.57246 17.078 5.51845C16.9819 5.46444 16.8761 5.42988 16.7667 5.41675C16.6572 5.40361 16.5463 5.41216 16.4401 5.44191C16.334 5.47166 16.2348 5.52202 16.1481 5.59011C16.0615 5.65821 15.989 5.74271 15.935 5.83879C15.881 5.93487 15.8465 6.04064 15.8333 6.15008C15.6341 7.55532 14.9343 8.8414 13.8626 9.77189C12.7909 10.7024 11.4193 11.2147 10 11.2147C8.58071 11.2147 7.20912 10.7024 6.13741 9.77189C5.06569 8.8414 4.36589 7.55532 4.16666 6.15008C4.15353 6.04064 4.11897 5.93487 4.06496 5.83879C4.01095 5.74271 3.93854 5.65821 3.85188 5.59011C3.76521 5.52202 3.66598 5.47166 3.55985 5.44191C3.45372 5.41216 3.34277 5.40361 3.23333 5.41675C3.1239 5.42988 3.01812 5.46444 2.92204 5.51845C2.82596 5.57246 2.74146 5.64487 2.67336 5.73153C2.60527 5.8182 2.55491 5.91743 2.52516 6.02356C2.49542 6.12969 2.48686 6.24064 2.5 6.35008C2.73819 8.23203 3.6861 9.95198 5.15 11.1584L3.23333 13.0917C3.09681 13.2512 3.02547 13.4562 3.03357 13.666C3.04167 13.8757 3.12862 14.0746 3.27703 14.223C3.42544 14.3715 3.62439 14.4584 3.83412 14.4665C4.04385 14.4746 4.24891 14.4033 4.40833 14.2667L6.58333 12.1001C7.3915 12.5085 8.26655 12.7682 9.16666 12.8667V15.8334C9.16666 16.0544 9.25446 16.2664 9.41074 16.4227C9.56702 16.5789 9.77898 16.6667 10 16.6667C10.221 16.6667 10.433 16.5789 10.5893 16.4227C10.7455 16.2664 10.8333 16.0544 10.8333 15.8334V12.8667C11.7335 12.7682 12.6085 12.5085 13.4167 12.1001L15.5917 14.2667C15.7511 14.4033 15.9561 14.4746 16.1659 14.4665C16.3756 14.4584 16.5746 14.3715 16.723 14.223C16.8714 14.0746 16.9583 13.8757 16.9664 13.666C16.9745 13.4562 16.9032 13.2512 16.7667 13.0917L14.8417 11.1584Z\"\r\n                          fill=\"white\"\r\n                          fillOpacity=\"0.9\"\r\n                        />\r\n                      </svg>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <p className=\"errorMessage\">{error}</p>\r\n              {loginError && <p className=\"errorMessage\">{loginError}</p>}\r\n              {loading && (\r\n                <i\r\n                  className=\"fas fa-spinner fa-spin\"\r\n                  style={{ color: \"rgba(0, 238, 255, 0.9)\" }}\r\n                ></i>\r\n              )}\r\n              <button type=\"submit\" className=\"formSubmit\">\r\n                Log In\r\n              </button>\r\n            </form>\r\n            <button className=\"testLogin\" onClick={testLoginHandler}>\r\n              Test Log In\r\n            </button>\r\n            <p className=\"bottomLinks\">\r\n              <span className=\"link\">Forgot Password?</span>\r\n              <Link to=\"/signup\" className=\"link\">\r\n                Sign up for Twitter\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { register } from \"../../actions/userActions\";\r\nimport { reducerState } from \"../../store\";\r\nimport { IUserAuth } from \"../../types\";\r\nimport \"./signupScreen.scss\";\r\n\r\nconst SignupScreen = () => {\r\n  const history = useHistory();\r\n\r\n  const [eyeOpen1, setEyeOpen1] = useState(false);\r\n  const [eyeOpen2, setEyeOpen2] = useState(false);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister: IUserAuth = useSelector(\r\n    (state: reducerState) => state.userRegister\r\n  );\r\n  const { userInfo, loading, error } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/home\");\r\n    }\r\n  }, [userInfo, history]);\r\n\r\n  const handleEye1 = () => {\r\n    setEyeOpen1(!eyeOpen1);\r\n  };\r\n  const handleEye2 = () => {\r\n    setEyeOpen2(!eyeOpen2);\r\n  };\r\n\r\n  const submitHandler = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (email.trim() && firstName.trim() && lastName.trim() && username.trim()) {\r\n      if (password !== confirmPassword) {\r\n        setMessage(\"Passwords do not match\");\r\n      } else {\r\n        //DISPATCH_SIGNUP\r\n        dispatch(\r\n          register(\r\n            firstName,\r\n            lastName,\r\n            username.toLowerCase(),\r\n            email.toLowerCase(),\r\n            password\r\n          )\r\n        );\r\n      }\r\n    } else {\r\n      setMessage(\"Make sure each field has a valid value.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"signupScreen\">\r\n        <div className=\"signupBackground\">\r\n          <div className=\"signupContainer\">\r\n            <div className=\"signupLogo\">\r\n              <svg\r\n                width=\"60\"\r\n                height=\"60\"\r\n                viewBox=\"0 0 60 60\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M49.9875 16.72C52.2286 15.3802 53.9055 13.2706 54.705 10.785C52.5992 12.0345 50.2951 12.9147 47.8925 13.3875C44.5615 9.86379 39.2838 9.00629 35.0085 11.2941C30.7333 13.5819 28.5188 18.4487 29.6025 23.175C20.9766 22.7419 12.94 18.6673 7.49254 11.965C4.64964 16.8685 6.10242 23.1369 10.8125 26.29C9.10931 26.2352 7.44386 25.7741 5.95504 24.945C5.95504 24.99 5.95504 25.035 5.95504 25.08C5.95602 30.1879 9.55597 34.5877 14.5625 35.6C12.9827 36.0298 11.3256 36.0931 9.71754 35.785C11.1255 40.1531 15.1514 43.1457 19.74 43.235C15.9396 46.2178 11.2462 47.8354 6.41504 47.8275C5.55872 47.8287 4.70306 47.7795 3.85254 47.68C8.75851 50.8325 14.4685 52.5059 20.3 52.5C28.4132 52.5557 36.2101 49.3572 41.9469 43.62C47.6836 37.8828 50.8814 30.0856 50.825 21.9725C50.825 21.5075 50.8142 21.045 50.7925 20.585C52.8937 19.0665 54.7071 17.1853 56.1475 15.03C54.1901 15.8976 52.1137 16.4673 49.9875 16.72Z\"\r\n                  fill=\"white\"\r\n                  fillOpacity=\"0.9\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <h1 className=\"signupTitle\">Create your account</h1>\r\n            <form className=\"signupForm\" onSubmit={submitHandler}>\r\n              <div className=\"signupFormGroup\">\r\n                <label className=\"formLabel\">First name</label>\r\n                <div className=\"formInputWrap\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={firstName}\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                    className=\"formInput\"\r\n                    required\r\n                    maxLength={50}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"signupFormGroup\">\r\n                <label className=\"formLabel\">Last name</label>\r\n                <div className=\"formInputWrap\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={lastName}\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                    className=\"formInput\"\r\n                    required\r\n                    maxLength={50}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"signupFormGroup\">\r\n                <label className=\"formLabel\">Username</label>\r\n                <div className=\"formInputWrap\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    className=\"formInput\"\r\n                    required\r\n                    maxLength={50}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"signupFormGroup\">\r\n                <label className=\"formLabel\">Email</label>\r\n                <div className=\"formInputWrap\">\r\n                  <input\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    className=\"formInput\"\r\n                    required\r\n                    maxLength={50}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"signupFormGroup\">\r\n                <label className=\"formLabel\">Password</label>\r\n                <div className=\"formInputWrap\">\r\n                  <input\r\n                    type={eyeOpen1 ? \"text\" : \"password\"}\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    className=\"formInput\"\r\n                    required\r\n                  />\r\n                  <div className=\"imageWrap\" onClick={handleEye1}>\r\n                    {eyeOpen1 ? (\r\n                      <svg\r\n                        width=\"20\"\r\n                        height=\"20\"\r\n                        viewBox=\"0 0 20 20\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M10 4.40002C3.439 4.40002 0 9.23202 0 10C0 10.766 3.439 15.6 10 15.6C16.56 15.6 20 10.766 20 10C20 9.23202 16.56 4.40002 10 4.40002ZM10 14.307C7.545 14.307 5.555 12.379 5.555 10C5.555 7.62102 7.545 5.69102 10 5.69102C12.455 5.69102 14.444 7.62102 14.444 10C14.444 12.379 12.455 14.307 10 14.307ZM10 10C9.593 9.55302 10.663 7.84602 10 7.84602C8.772 7.84602 7.777 8.81102 7.777 10C7.777 11.189 8.772 12.154 10 12.154C11.227 12.154 12.223 11.189 12.223 10C12.223 9.45302 10.346 10.379 10 10Z\"\r\n                          fill=\"white\"\r\n                          fillOpacity=\"0.9\"\r\n                        />\r\n                      </svg>\r\n                    ) : (\r\n                      <svg\r\n                        width=\"20\"\r\n                        height=\"20\"\r\n                        viewBox=\"0 0 20 20\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M14.8417 11.1584C16.3087 9.9534 17.2597 8.23327 17.5 6.35008C17.5131 6.24064 17.5046 6.12969 17.4748 6.02356C17.4451 5.91743 17.3947 5.8182 17.3266 5.73153C17.2585 5.64487 17.174 5.57246 17.078 5.51845C16.9819 5.46444 16.8761 5.42988 16.7667 5.41675C16.6572 5.40361 16.5463 5.41216 16.4401 5.44191C16.334 5.47166 16.2348 5.52202 16.1481 5.59011C16.0615 5.65821 15.989 5.74271 15.935 5.83879C15.881 5.93487 15.8465 6.04064 15.8333 6.15008C15.6341 7.55532 14.9343 8.8414 13.8626 9.77189C12.7909 10.7024 11.4193 11.2147 10 11.2147C8.58071 11.2147 7.20912 10.7024 6.13741 9.77189C5.06569 8.8414 4.36589 7.55532 4.16666 6.15008C4.15353 6.04064 4.11897 5.93487 4.06496 5.83879C4.01095 5.74271 3.93854 5.65821 3.85188 5.59011C3.76521 5.52202 3.66598 5.47166 3.55985 5.44191C3.45372 5.41216 3.34277 5.40361 3.23333 5.41675C3.1239 5.42988 3.01812 5.46444 2.92204 5.51845C2.82596 5.57246 2.74146 5.64487 2.67336 5.73153C2.60527 5.8182 2.55491 5.91743 2.52516 6.02356C2.49542 6.12969 2.48686 6.24064 2.5 6.35008C2.73819 8.23203 3.6861 9.95198 5.15 11.1584L3.23333 13.0917C3.09681 13.2512 3.02547 13.4562 3.03357 13.666C3.04167 13.8757 3.12862 14.0746 3.27703 14.223C3.42544 14.3715 3.62439 14.4584 3.83412 14.4665C4.04385 14.4746 4.24891 14.4033 4.40833 14.2667L6.58333 12.1001C7.3915 12.5085 8.26655 12.7682 9.16666 12.8667V15.8334C9.16666 16.0544 9.25446 16.2664 9.41074 16.4227C9.56702 16.5789 9.77898 16.6667 10 16.6667C10.221 16.6667 10.433 16.5789 10.5893 16.4227C10.7455 16.2664 10.8333 16.0544 10.8333 15.8334V12.8667C11.7335 12.7682 12.6085 12.5085 13.4167 12.1001L15.5917 14.2667C15.7511 14.4033 15.9561 14.4746 16.1659 14.4665C16.3756 14.4584 16.5746 14.3715 16.723 14.223C16.8714 14.0746 16.9583 13.8757 16.9664 13.666C16.9745 13.4562 16.9032 13.2512 16.7667 13.0917L14.8417 11.1584Z\"\r\n                          fill=\"white\"\r\n                          fillOpacity=\"0.9\"\r\n                        />\r\n                      </svg>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"signupFormGroup\">\r\n                <label className=\"formLabel\">Confirm password</label>\r\n                <div className=\"formInputWrap\">\r\n                  <input\r\n                    type={eyeOpen2 ? \"text\" : \"password\"}\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    className=\"formInput\"\r\n                    required\r\n                  />\r\n                  <div className=\"imageWrap\" onClick={handleEye2}>\r\n                    {eyeOpen2 ? (\r\n                      <svg\r\n                        width=\"20\"\r\n                        height=\"20\"\r\n                        viewBox=\"0 0 20 20\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M10 4.40002C3.439 4.40002 0 9.23202 0 10C0 10.766 3.439 15.6 10 15.6C16.56 15.6 20 10.766 20 10C20 9.23202 16.56 4.40002 10 4.40002ZM10 14.307C7.545 14.307 5.555 12.379 5.555 10C5.555 7.62102 7.545 5.69102 10 5.69102C12.455 5.69102 14.444 7.62102 14.444 10C14.444 12.379 12.455 14.307 10 14.307ZM10 10C9.593 9.55302 10.663 7.84602 10 7.84602C8.772 7.84602 7.777 8.81102 7.777 10C7.777 11.189 8.772 12.154 10 12.154C11.227 12.154 12.223 11.189 12.223 10C12.223 9.45302 10.346 10.379 10 10Z\"\r\n                          fill=\"white\"\r\n                          fillOpacity=\"0.9\"\r\n                        />\r\n                      </svg>\r\n                    ) : (\r\n                      <svg\r\n                        width=\"20\"\r\n                        height=\"20\"\r\n                        viewBox=\"0 0 20 20\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M14.8417 11.1584C16.3087 9.9534 17.2597 8.23327 17.5 6.35008C17.5131 6.24064 17.5046 6.12969 17.4748 6.02356C17.4451 5.91743 17.3947 5.8182 17.3266 5.73153C17.2585 5.64487 17.174 5.57246 17.078 5.51845C16.9819 5.46444 16.8761 5.42988 16.7667 5.41675C16.6572 5.40361 16.5463 5.41216 16.4401 5.44191C16.334 5.47166 16.2348 5.52202 16.1481 5.59011C16.0615 5.65821 15.989 5.74271 15.935 5.83879C15.881 5.93487 15.8465 6.04064 15.8333 6.15008C15.6341 7.55532 14.9343 8.8414 13.8626 9.77189C12.7909 10.7024 11.4193 11.2147 10 11.2147C8.58071 11.2147 7.20912 10.7024 6.13741 9.77189C5.06569 8.8414 4.36589 7.55532 4.16666 6.15008C4.15353 6.04064 4.11897 5.93487 4.06496 5.83879C4.01095 5.74271 3.93854 5.65821 3.85188 5.59011C3.76521 5.52202 3.66598 5.47166 3.55985 5.44191C3.45372 5.41216 3.34277 5.40361 3.23333 5.41675C3.1239 5.42988 3.01812 5.46444 2.92204 5.51845C2.82596 5.57246 2.74146 5.64487 2.67336 5.73153C2.60527 5.8182 2.55491 5.91743 2.52516 6.02356C2.49542 6.12969 2.48686 6.24064 2.5 6.35008C2.73819 8.23203 3.6861 9.95198 5.15 11.1584L3.23333 13.0917C3.09681 13.2512 3.02547 13.4562 3.03357 13.666C3.04167 13.8757 3.12862 14.0746 3.27703 14.223C3.42544 14.3715 3.62439 14.4584 3.83412 14.4665C4.04385 14.4746 4.24891 14.4033 4.40833 14.2667L6.58333 12.1001C7.3915 12.5085 8.26655 12.7682 9.16666 12.8667V15.8334C9.16666 16.0544 9.25446 16.2664 9.41074 16.4227C9.56702 16.5789 9.77898 16.6667 10 16.6667C10.221 16.6667 10.433 16.5789 10.5893 16.4227C10.7455 16.2664 10.8333 16.0544 10.8333 15.8334V12.8667C11.7335 12.7682 12.6085 12.5085 13.4167 12.1001L15.5917 14.2667C15.7511 14.4033 15.9561 14.4746 16.1659 14.4665C16.3756 14.4584 16.5746 14.3715 16.723 14.223C16.8714 14.0746 16.9583 13.8757 16.9664 13.666C16.9745 13.4562 16.9032 13.2512 16.7667 13.0917L14.8417 11.1584Z\"\r\n                          fill=\"white\"\r\n                          fillOpacity=\"0.9\"\r\n                        />\r\n                      </svg>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {message && <p className=\"errorMessage\">{message}</p>}\r\n              {error && <p className=\"errorMessage\">{error}</p>}\r\n              {loading && (\r\n                <i\r\n                  className=\"fas fa-spinner fa-spin\"\r\n                  style={{ color: \"rgba(0, 238, 255, 0.9)\" }}\r\n                ></i>\r\n              )}\r\n              <button type=\"submit\" className=\"formSubmit\">\r\n                Sign up\r\n              </button>\r\n            </form>\r\n            <p className=\"bottomLinks\">\r\n              <span>Already have an account?</span>\r\n              <Link to=\"/login\" className=\"link\">\r\n                Log in here\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupScreen;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./postScreen.scss\";\r\nimport { useHistory, useLocation, useRouteMatch } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deletePost, detailsPost, listPosts } from \"../../actions/postActions\";\r\nimport { reducerState } from \"../../store\";\r\nimport {\r\n  IPostDetails,\r\n  IPosts,\r\n  IUserAuth,\r\n  ICreatePost,\r\n  IPostReply,\r\n  IDelete,\r\n} from \"../../types\";\r\nimport { postDate, postTime } from \"../../timeFunction\";\r\nimport PostCard from \"../../components/PostCard/PostCard\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\nimport { POST_DELETE_RESET } from \"../../constants/postConstants\";\r\n\r\ninterface RouteParams {\r\n  id: string;\r\n}\r\n\r\nconst PostScreen = () => {\r\n  const match = useRouteMatch<RouteParams>();\r\n  const history = useHistory();\r\n  const id = match.params.id;\r\n  const { pathname } = useLocation();\r\n  const ref = useRef<HTMLDivElement | null>(null);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const postList: IPosts = useSelector((state: reducerState) => state.postList);\r\n  const { posts } = postList;\r\n\r\n  const userLogin: IUserAuth = useSelector((state: reducerState) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const postCreate: ICreatePost = useSelector((state: reducerState) => state.postCreate);\r\n  const { success } = postCreate;\r\n\r\n  const postReply: IPostReply = useSelector((state: reducerState) => state.postReply);\r\n  const { success: replySuccess } = postReply;\r\n\r\n  const postDetails: IPostDetails = useSelector(\r\n    (state: reducerState) => state.postDetails\r\n  );\r\n  const { post, loading } = postDetails;\r\n\r\n  const postDelete: IDelete = useSelector((state: reducerState) => state.postDelete);\r\n  const { success: deleteSuccess } = postDelete;\r\n\r\n  const results = posts?.filter((post) => {\r\n    return post.replyTo?._id === id;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    document.body.addEventListener(\"click\", (e: any) => {\r\n      if (ref.current?.contains(e.target)) {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    });\r\n\r\n    dispatch(detailsPost(id));\r\n    dispatch(listPosts());\r\n    if (deleteSuccess) {\r\n      dispatch({ type: POST_DELETE_RESET });\r\n      history.push(\"/home\");\r\n    }\r\n  }, [dispatch, id, pathname, success, replySuccess, userInfo, deleteSuccess, history]);\r\n\r\n  const deleteHandler = () => {\r\n    //    DELETE Post\r\n    if (post) {\r\n      dispatch(deletePost(post._id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"postScreen\">\r\n        {loading ? (\r\n          <div className=\"loading\">\r\n            <i\r\n              className=\"fas fa-spinner fa-spin fa-2x\"\r\n              style={{ color: \"rgba(0, 238, 255, 0.9)\" }}\r\n            ></i>\r\n          </div>\r\n        ) : (\r\n          <div className=\"postContainer\">\r\n            <div className=\"topDetails\">\r\n              <div className=\"icon\" onClick={() => history.push(\"/home\")}>\r\n                <svg\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M7.83 11L11.41 7.41L10 6L4 12L10 18L11.41 16.59L7.83 13H20V11H7.83Z\"\r\n                    fill=\"#1A91DA\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              <p className=\"title\">Tweet</p>\r\n            </div>\r\n            <div className=\"postDetails\">\r\n              <div className=\"left\">\r\n                <div className=\"top\">\r\n                  <img src={post?.user.profilePic} alt=\"profile\" />\r\n                  <div className=\"label\">\r\n                    <p className=\"top\">{post?.user.firstName}</p>\r\n                    <p className=\"bottom\">@{post?.user.username}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"middle\">\r\n                  <p className=\"postText\">{post?.content || post?.retweetData.content}</p>\r\n                </div>\r\n                <div className=\"bottom\">\r\n                  <div className=\"bottomTop\">\r\n                    <p>\r\n                      <span>\r\n                        {post?.createdAt && postTime(new Date(post?.createdAt))}\r\n                      </span>\r\n                      <span>.</span>\r\n                      <span>\r\n                        {post?.createdAt && postDate(new Date(post?.createdAt))}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"bottomMiddle\">\r\n                    <p>\r\n                      <span className=\"number\">\r\n                        {post?.retweetUsers.length ||\r\n                          post?.retweetData?.retweetUsers.length}\r\n                      </span>\r\n                      <span className=\"label\">Retweets</span>\r\n                      <span className=\"number\">\r\n                        {post?.likes.length || post?.retweetData?.likes.length}\r\n                      </span>\r\n                      <span className=\"label\">Likes</span>\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"bottomBottom\">\r\n                    <div className=\"bLeft\" onClick={() => setShowModal(!showModal)}>\r\n                      <svg\r\n                        width=\"21\"\r\n                        height=\"21\"\r\n                        viewBox=\"0 0 21 21\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M15.876 12.1136L15.8733 12.1264C15.491 13.9413 14.2679 15.4995 12.5368 16.2864L9 17.894V16H7C4.23858 16 2 13.7614 2 11V10C2 7.23858 4.23858 5 7 5H11C13.7614 5 16 7.23858 16 10V11C16 11.3804 15.9579 11.7485 15.8789 12.1009L15.876 12.1136ZM7 21L13.3644 18.1071C15.6821 17.0536 17.3187 14.9677 17.8304 12.5386C17.9414 12.0435 18 11.5286 18 11V10C18 6.13401 14.866 3 11 3H7C3.13401 3 0 6.13401 0 10V11C0 14.866 3.13401 18 7 18V21Z\"\r\n                          fill=\"white\"\r\n                          fillOpacity=\"0.2\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                    <div className=\"bMiddle\">\r\n                      <svg\r\n                        width=\"21\"\r\n                        height=\"21\"\r\n                        viewBox=\"0 0 21 21\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M5.39583 21L1.3125 16.8L5.39583 12.6V15.75H15.6042V11.55H17.6458V16.8C17.6458 17.3799 17.1888 17.85 16.625 17.85H5.39583V21ZM5.39583 9.45H3.35417V4.2C3.35417 3.6201 3.81121 3.15 4.375 3.15H15.6042V0L19.6875 4.2L15.6042 8.4V5.25H5.39583V9.45Z\"\r\n                          fill=\"white\"\r\n                          fillOpacity=\"0.2\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                    <div className=\"bRight\">\r\n                      <svg\r\n                        width=\"21\"\r\n                        height=\"21\"\r\n                        viewBox=\"0 0 21 21\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M10.5 18.375C9.93563 17.8745 9.29775 17.3539 8.62313 16.8H8.61438C6.23876 14.8575 3.54638 12.6595 2.35725 10.0258C1.96658 9.18727 1.75955 8.27499 1.74999 7.35001C1.74739 6.08081 2.25643 4.86412 3.16209 3.97493C4.06774 3.08574 5.29357 2.5991 6.5625 2.62501C7.59555 2.62664 8.60636 2.9252 9.4745 3.48513C9.85598 3.73273 10.2011 4.03223 10.5 4.37501C10.8006 4.03358 11.1458 3.73425 11.5264 3.48513C12.3941 2.92509 13.4047 2.62651 14.4375 2.62501C15.7064 2.5991 16.9323 3.08574 17.8379 3.97493C18.7436 4.86412 19.2526 6.08081 19.25 7.35001C19.2411 8.27647 19.034 9.1903 18.6428 10.0301C17.4536 12.6639 14.7621 14.861 12.3865 16.8L12.3778 16.807C11.7023 17.3574 11.0653 17.878 10.5009 18.382L10.5 18.375ZM6.5625 4.37501C5.74745 4.36481 4.96132 4.67675 4.375 5.24301C3.81009 5.7979 3.49436 6.55817 3.49993 7.35001C3.50992 8.0242 3.6626 8.68863 3.948 9.29951C4.50933 10.4359 5.26673 11.4643 6.18538 12.3375C7.0525 13.2125 8.05 14.0595 8.91275 14.7718C9.15163 14.9686 9.39488 15.1673 9.63813 15.3659L9.79125 15.491C10.0249 15.6818 10.2664 15.8795 10.5 16.0738L10.5114 16.0633L10.5166 16.0589H10.5219L10.5298 16.0528H10.5341H10.5385L10.5543 16.0396L10.5901 16.0108L10.5963 16.0055L10.6059 15.9985H10.6111L10.619 15.9915L11.2 15.5146L11.3523 15.3895C11.5981 15.1891 11.8414 14.9905 12.0803 14.7936C12.943 14.0814 13.9414 13.2353 14.8085 12.3559C15.7273 11.4831 16.4847 10.455 17.0459 9.31876C17.3364 8.70258 17.4913 8.0312 17.5 7.35001C17.5036 6.56062 17.1881 5.80326 16.625 5.25001C16.0398 4.68119 15.2535 4.36668 14.4375 4.37501C13.4417 4.36654 12.4897 4.78396 11.8213 5.52213L10.5 7.04463L9.17875 5.52213C8.51031 4.78396 7.55832 4.36654 6.5625 4.37501Z\"\r\n                          fill=\"white\"\r\n                          fillOpacity=\"0.2\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div ref={ref} className=\"right\">\r\n                <div className=\"icon\" onClick={() => setOpen(!open)}>\r\n                  <svg\r\n                    width=\"18\"\r\n                    height=\"18\"\r\n                    viewBox=\"0 0 18 18\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M13.5 10.5C12.6716 10.5 12 9.82843 12 9C12 8.17157 12.6716 7.5 13.5 7.5C14.3284 7.5 15 8.17157 15 9C15 9.39782 14.842 9.77936 14.5607 10.0607C14.2794 10.342 13.8978 10.5 13.5 10.5ZM9 10.5C8.17157 10.5 7.5 9.82843 7.5 9C7.5 8.17157 8.17157 7.5 9 7.5C9.82843 7.5 10.5 8.17157 10.5 9C10.5 9.39782 10.342 9.77936 10.0607 10.0607C9.77935 10.342 9.39782 10.5 9 10.5ZM4.5 10.5C3.67157 10.5 3 9.82843 3 9C3 8.17157 3.67157 7.5 4.5 7.5C5.32843 7.5 6 8.17157 6 9C6 9.39782 5.84196 9.77936 5.56066 10.0607C5.27936 10.342 4.89782 10.5 4.5 10.5Z\"\r\n                      fill=\"white\"\r\n                      fillOpacity=\"0.3\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n                <ul className={open ? \"miniMenu open\" : \"miniMenu\"}>\r\n                  {userInfo?._id === post?.user._id && (\r\n                    <>\r\n                      <li className=\"link\" onClick={deleteHandler}>\r\n                        <svg\r\n                          width=\"20\"\r\n                          height=\"20\"\r\n                          viewBox=\"0 0 20 20\"\r\n                          fill=\"none\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                          <path\r\n                            d=\"M14.1667 18.3334H5.83333C4.91286 18.3334 4.16667 17.5872 4.16667 16.6667V5.83335H2.5V4.16669H5.83333V3.33335C5.83333 2.41288 6.57953 1.66669 7.5 1.66669H12.5C13.4205 1.66669 14.1667 2.41288 14.1667 3.33335V4.16669H17.5V5.83335H15.8333V16.6667C15.8333 17.5872 15.0871 18.3334 14.1667 18.3334ZM5.83333 5.83335V16.6667H14.1667V5.83335H5.83333ZM7.5 3.33335V4.16669H12.5V3.33335H7.5ZM12.5 15H10.8333V7.50002H12.5V15ZM9.16667 15H7.5V7.50002H9.16667V15Z\"\r\n                            fill=\"#FF003D\"\r\n                          />\r\n                        </svg>\r\n                        <p className=\"text\">Delete</p>\r\n                      </li>\r\n                      <li className=\"link\">\r\n                        <svg\r\n                          width=\"20\"\r\n                          height=\"20\"\r\n                          viewBox=\"0 0 20 20\"\r\n                          fill=\"none\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                          <path\r\n                            d=\"M13.4292 1.66669H6.57084C5.80834 1.66669 5.16667 2.14335 5.07167 2.77752L5.00001 3.33335C4.93334 3.78252 5.14501 4.15419 5.48668 4.46919C5.59084 4.56502 5.69584 4.66085 5.79918 4.75835C6.44584 5.36835 6.50751 6.30669 6.22251 7.14919L5.86501 8.20669C5.84446 8.29129 5.81942 8.37474 5.79001 8.45669C5.70751 8.68085 5.51501 9.17502 5.26501 9.60585C5.10667 9.87835 4.86668 10.0892 4.60418 10.2642C3.97418 10.6842 4.27084 11.6667 5.02917 11.6667H8.75001V13.4259C8.75001 14.4609 8.57501 15.4817 9.03751 16.4075L10 18.3334L10.9625 16.4084C11.4258 15.4817 11.25 14.4609 11.25 13.4259V11.6667H14.9708C15.7292 11.6667 16.0258 10.6834 15.3958 10.2634C15.1333 10.0884 14.8933 9.87835 14.735 9.60502C14.5291 9.23684 14.3535 8.85252 14.21 8.45585C14.1806 8.3739 14.1556 8.29045 14.135 8.20585L13.7775 7.14835C13.4942 6.30669 13.555 5.36835 14.2008 4.75835C14.3042 4.66085 14.4092 4.56502 14.5133 4.46919C14.855 4.15419 15.0667 3.78252 15 3.33335L14.9283 2.77752C14.8333 2.14335 14.1908 1.66669 13.4292 1.66669Z\"\r\n                            stroke=\"white\"\r\n                            strokeOpacity=\"0.9\"\r\n                            strokeWidth=\"2\"\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                          />\r\n                        </svg>\r\n\r\n                        <p className=\"text\">Pin to your profile</p>\r\n                      </li>\r\n                    </>\r\n                  )}\r\n\r\n                  <li className=\"link\">\r\n                    <svg\r\n                      width=\"20\"\r\n                      height=\"20\"\r\n                      viewBox=\"0 0 20 20\"\r\n                      fill=\"none\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        d=\"M3.33334 15.8333H1.66667C1.66667 13.0719 3.90525 10.8333 6.66667 10.8333C9.4281 10.8333 11.6667 13.0719 11.6667 15.8333H10C10 13.9924 8.50762 12.5 6.66667 12.5C4.82572 12.5 3.33334 13.9924 3.33334 15.8333ZM15.8333 13.3333H14.1667V10.8333H11.6667V9.16665H14.1667V6.66665H15.8333V9.16665H18.3333V10.8333H15.8333V13.3333ZM6.66667 9.99998C4.82572 9.99998 3.33334 8.5076 3.33334 6.66665C3.33334 4.8257 4.82572 3.33331 6.66667 3.33331C8.50762 3.33331 10 4.8257 10 6.66665C9.99771 8.50664 8.50667 9.99768 6.66667 9.99998ZM6.66667 4.99998C5.75617 5.0009 5.01491 5.73235 5.00186 6.64276C4.98882 7.55317 5.70881 8.30557 6.61891 8.33258C7.52902 8.35959 8.29237 7.65123 8.33334 6.74165V7.07498V6.66665C8.33334 5.74617 7.58715 4.99998 6.66667 4.99998Z\"\r\n                        fill=\"white\"\r\n                        fillOpacity=\"0.9\"\r\n                      />\r\n                    </svg>\r\n\r\n                    <p className=\"text\">Follow</p>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              {results?.map((post) => (\r\n                <PostCard\r\n                  key={post._id}\r\n                  post={post}\r\n                  liked={\r\n                    post.likes.includes(userInfo?._id!) ||\r\n                    post.retweetData?.likes.includes(userInfo?._id!)\r\n                  }\r\n                  retweeted={\r\n                    post.retweetUsers.includes(userInfo?._id!) ||\r\n                    post.retweetData?.retweetUsers.includes(userInfo?._id!)\r\n                  }\r\n                />\r\n              ))}\r\n            </div>\r\n            <Modal post={post!} showModal={showModal} setShowModal={setShowModal} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostScreen;\r\n","import React, {\r\n  FunctionComponent,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { reducerState } from \"../../store\";\r\nimport { IUserAuth, IUser, IProfileUpdate } from \"../../types\";\r\nimport \"./editProfile.scss\";\r\nimport { updateProfile } from \"../../actions/userActions\";\r\n\r\nconst EditProfile: FunctionComponent<IUser> = ({ user, showModal, setShowModal }) => {\r\n  const modalRef = useRef<HTMLDivElement | null>(null);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin: IUserAuth = useSelector((state: reducerState) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userProfileUpdate: IProfileUpdate = useSelector(\r\n    (state: reducerState) => state.userProfileUpdate\r\n  );\r\n  const { success } = userProfileUpdate;\r\n\r\n  const [profilePic, setProfilePic] = useState(\"\");\r\n  const [coverPic, setCoverPic] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [website, setWebsite] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [profileUpload, setProfileUpload] = useState(false);\r\n  const [coverUpload, setCoverUpload] = useState(false);\r\n\r\n  const keyPress = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Escape\" && showModal) {\r\n        setShowModal(false);\r\n      }\r\n    },\r\n    [showModal, setShowModal]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else if (user) {\r\n      setName(user?.firstName);\r\n      setProfilePic(user.profilePic);\r\n      setCoverPic(user.coverPic);\r\n      setBio(user.bio);\r\n      setWebsite(user.website);\r\n    }\r\n\r\n    if (success) {\r\n      setShowModal(false);\r\n    }\r\n\r\n    document.addEventListener(\"keydown\", keyPress);\r\n    return () => document.removeEventListener(\"keydown\", keyPress);\r\n  }, [keyPress, userInfo, history, user, success, setShowModal]);\r\n\r\n  const closeModal = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if (modalRef.current === e.target) {\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  const uploadProfilePicHandler = async (e: any) => {\r\n    const file = e.target.files[0];\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    setProfileUpload(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n      setProfilePic(data);\r\n      setProfileUpload(false);\r\n    } catch (error) {\r\n      setProfileUpload(false);\r\n    }\r\n  };\r\n\r\n  const uploadCoverPicHandler = async (e: any) => {\r\n    const file = e.target.files[0];\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    setCoverUpload(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n      setCoverPic(data);\r\n      setCoverUpload(false);\r\n    } catch (error) {\r\n      setCoverUpload(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (name.trim()) {\r\n      //DISPATCH_UPDATE PROFILE\r\n      dispatch(\r\n        updateProfile({ id: user?._id, name, bio, website, profilePic, coverPic })\r\n      );\r\n    } else {\r\n      setError(\"Make sure each field has a valid value.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showModal && (\r\n        <div ref={modalRef} className=\"editProfileBackground\" onClick={closeModal}>\r\n          <div className=\"modal\">\r\n            <form className=\"modalForm\" onSubmit={submitHandler}>\r\n              <div className=\"modalTop\">\r\n                <div className=\"left\">\r\n                  <svg\r\n                    onClick={() => setShowModal(!showModal)}\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41L17.59 5Z\"\r\n                      fill=\"#1A91DA\"\r\n                      fillOpacity=\"0.9\"\r\n                    />\r\n                  </svg>\r\n                  <p className=\"title\">Edit Profile</p>\r\n                </div>\r\n                <div className=\"right\">\r\n                  <button type=\"submit\" className=\"submitButton\">\r\n                    Save\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"modalBottom\">\r\n                <div className=\"userCover\">\r\n                  <img src={coverPic} alt=\"cover\" className=\"coverImg\" />\r\n                  <div className=\"coverPicWrapper\">\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"coverFile\"\r\n                      accept=\"image/*\"\r\n                      name=\"coverPic\"\r\n                      onChange={uploadCoverPicHandler}\r\n                    />\r\n                    {coverUpload ? (\r\n                      <i className=\"fas fa-spinner fa-spin fa-2x\"></i>\r\n                    ) : (\r\n                      <label htmlFor=\"coverFile\">\r\n                        <svg\r\n                          width=\"24\"\r\n                          height=\"24\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          fill=\"none\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                          <path\r\n                            d=\"M20 5H17.414L14.707 2.293C14.6143 2.19996 14.5041 2.12617 14.3828 2.07589C14.2614 2.0256 14.1313 1.99981 14 2H10C9.86866 1.99981 9.73857 2.0256 9.61724 2.07589C9.4959 2.12617 9.38571 2.19996 9.293 2.293L6.586 5H4C2.897 5 2 5.897 2 7V18C2 19.103 2.897 20 4 20H20C21.103 20 22 19.103 22 18V7C22 5.897 21.103 5 20 5ZM12 17C9.29 17 7 14.71 7 12C7 9.289 9.29 7 12 7C14.71 7 17 9.289 17 12C17 14.71 14.71 17 12 17Z\"\r\n                            fill=\"white\"\r\n                            fillOpacity=\"0.8\"\r\n                          />\r\n                          <path\r\n                            d=\"M13 9H11V11H9V13H11V15H13V13H15V11H13V9Z\"\r\n                            fill=\"white\"\r\n                            fillOpacity=\"0.8\"\r\n                          />\r\n                        </svg>\r\n                      </label>\r\n                    )}\r\n                  </div>\r\n                  <img src={profilePic} alt=\"profile\" className=\"profilePic\" />\r\n                  <div className=\"profilePicWrapper\">\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"file\"\r\n                      accept=\"image/*\"\r\n                      name=\"profilePic\"\r\n                      onChange={uploadProfilePicHandler}\r\n                    />\r\n                    {profileUpload ? (\r\n                      <i className=\"fas fa-spinner fa-spin fa-2x\"></i>\r\n                    ) : (\r\n                      <label htmlFor=\"file\">\r\n                        <svg\r\n                          width=\"24\"\r\n                          height=\"24\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          fill=\"none\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                          <path\r\n                            d=\"M20 5H17.414L14.707 2.293C14.6143 2.19996 14.5041 2.12617 14.3828 2.07589C14.2614 2.0256 14.1313 1.99981 14 2H10C9.86866 1.99981 9.73857 2.0256 9.61724 2.07589C9.4959 2.12617 9.38571 2.19996 9.293 2.293L6.586 5H4C2.897 5 2 5.897 2 7V18C2 19.103 2.897 20 4 20H20C21.103 20 22 19.103 22 18V7C22 5.897 21.103 5 20 5ZM12 17C9.29 17 7 14.71 7 12C7 9.289 9.29 7 12 7C14.71 7 17 9.289 17 12C17 14.71 14.71 17 12 17Z\"\r\n                            fill=\"white\"\r\n                            fillOpacity=\"0.8\"\r\n                          />\r\n                          <path\r\n                            d=\"M13 9H11V11H9V13H11V15H13V13H15V11H13V9Z\"\r\n                            fill=\"white\"\r\n                            fillOpacity=\"0.8\"\r\n                          />\r\n                        </svg>\r\n                      </label>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"form\">\r\n                  <div className=\"formGroup\">\r\n                    <label>Name</label>\r\n                    <input\r\n                      className=\"formInput\"\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      value={name}\r\n                      maxLength={50}\r\n                      required\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"formGroup textarea\">\r\n                    <label>Bio</label>\r\n                    <textarea\r\n                      className=\"formTextarea\"\r\n                      name=\"bio\"\r\n                      value={bio}\r\n                      maxLength={160}\r\n                      onChange={(e) => setBio(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"formGroup\">\r\n                    <label>Website</label>\r\n                    <input\r\n                      className=\"formInput\"\r\n                      type=\"text\"\r\n                      name=\"website\"\r\n                      value={website}\r\n                      maxLength={50}\r\n                      onChange={(e) => setWebsite(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <p className=\"errorMessage\">{error}</p>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","import React, { FunctionComponent, useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useRouteMatch } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deletePost, likePost, pinPost, retweetPost } from \"../../actions/postActions\";\r\nimport { reducerState } from \"../../store\";\r\nimport { timeDifference } from \"../../timeFunction\";\r\nimport { IPost, IUserAuth } from \"../../types\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport \"./pinPost.scss\";\r\n\r\ninterface IParams {\r\n  id: string;\r\n}\r\n\r\nconst PinPost: FunctionComponent<IPost> = ({ post, liked, retweeted }) => {\r\n  const history = useHistory();\r\n  const match = useRouteMatch<IParams>();\r\n  const ref = useRef<HTMLDivElement | null>(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const userLogin: IUserAuth = useSelector((state: reducerState) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const id = match.params.id;\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener(\"click\", (e: any) => {\r\n      if (ref.current?.contains(e.target)) {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    });\r\n  }, []);\r\n\r\n  const likesHandler = () => {\r\n    if (userInfo) {\r\n      dispatch(likePost(post._id, userInfo));\r\n    }\r\n  };\r\n\r\n  const retweetHandler = () => {\r\n    if (userInfo) {\r\n      dispatch(retweetPost(post._id, userInfo));\r\n    }\r\n  };\r\n\r\n  const postLinkHandler = (e: any) => {\r\n    history.push(`/posts/${post._id}`);\r\n  };\r\n\r\n  const deleteHandler = () => {\r\n    //    DELETE Post\r\n    dispatch(deletePost(post._id));\r\n  };\r\n\r\n  const pinPostHandler = () => {\r\n    //    Pin Post\r\n    dispatch(pinPost(id, post));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {post.pinned && (\r\n        <div className=\"pinPost\">\r\n          <div className=\"postCardTop\">\r\n            <svg\r\n              width=\"18\"\r\n              height=\"18\"\r\n              viewBox=\"0 0 18 18\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M12.0863 1.5H5.91379C5.22754 1.5 4.65004 1.929 4.56454 2.49975L4.50004 3C4.44004 3.40425 4.63054 3.73875 4.93804 4.02225C5.03179 4.1085 5.12629 4.19475 5.21929 4.2825C5.80129 4.8315 5.85679 5.676 5.60029 6.43425L5.27854 7.386C5.26005 7.46214 5.23752 7.53725 5.21104 7.611C5.13679 7.81275 4.96354 8.2575 4.73854 8.64525C4.59604 8.8905 4.38004 9.08025 4.14379 9.23775C3.57679 9.61575 3.84379 10.5 4.52629 10.5H7.87504V12.0833C7.87504 13.0148 7.71754 13.9335 8.13379 14.7668L9.00004 16.5L9.86629 14.7675C10.2833 13.9335 10.125 13.0148 10.125 12.0833V10.5H13.4738C14.1563 10.5 14.4233 9.615 13.8563 9.237C13.62 9.0795 13.404 8.8905 13.2615 8.6445C13.0762 8.31314 12.9182 7.96725 12.789 7.61025C12.7626 7.53649 12.7401 7.46139 12.7215 7.38525L12.3998 6.4335C12.1448 5.676 12.1995 4.8315 12.7808 4.2825C12.8738 4.19475 12.9683 4.1085 13.062 4.02225C13.3695 3.73875 13.56 3.40425 13.5 3L13.4355 2.49975C13.35 1.929 12.7718 1.5 12.0863 1.5Z\"\r\n                fill=\"white\"\r\n                fillOpacity=\"0.3\"\r\n              />\r\n            </svg>\r\n\r\n            <p>Pinned Tweet</p>\r\n          </div>\r\n          <div className=\"postCardBottom\">\r\n            <div className=\"left\">\r\n              <img src={post.user.profilePic} alt=\"profile\" />\r\n            </div>\r\n            <div className=\"middle\">\r\n              <Link to={`/profile/${post.user._id}`} className=\"middleTop\">\r\n                <p className=\"name\">{post.user.firstName}</p>\r\n                <p className=\"at\">\r\n                  <span>@{post.user.username}</span>\r\n                  <span>.</span>\r\n                  <span>{timeDifference(new Date(), new Date(post.createdAt))}</span>\r\n                </p>\r\n              </Link>\r\n              <p onClick={postLinkHandler} className=\"middleBottom\">\r\n                {post?.content || post.retweetData?.content}\r\n              </p>\r\n              <div className=\"bottom\">\r\n                <div className=\"left-c\" onClick={() => setShowModal(!showModal)}>\r\n                  <span className=\"icon\">\r\n                    <svg\r\n                      width=\"16\"\r\n                      height=\"16\"\r\n                      viewBox=\"0 0 16 16\"\r\n                      fill=\"none\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        d=\"M14.23 8.59468L14.2278 8.6053C13.9092 10.1178 12.8899 11.4163 11.4473 12.072L8.5 13.4117V11.8333H6.83333C4.53215 11.8333 2.66667 9.96785 2.66667 7.66667V6.83333C2.66667 4.53215 4.53215 2.66667 6.83333 2.66667H10.1667C12.4679 2.66667 14.3333 4.53215 14.3333 6.83333V7.66667C14.3333 7.98364 14.2982 8.29043 14.2324 8.58408L14.23 8.59468ZM6.83333 16L12.137 13.5893C14.0684 12.7113 15.4323 10.9731 15.8586 8.94882C15.9512 8.53625 16 8.10716 16 7.66667V6.83333C16 3.61167 13.3883 1 10.1667 1H6.83333C3.61167 1 1 3.61167 1 6.83333V7.66667C1 10.8883 3.61167 13.5 6.83333 13.5V16Z\"\r\n                        fill=\"white\"\r\n                        fillOpacity=\"0.2\"\r\n                      />\r\n                    </svg>\r\n                  </span>\r\n                  <span className=\"number\"></span>\r\n                </div>\r\n                <div\r\n                  className={retweeted ? \"middle-c active\" : \"middle-c\"}\r\n                  onClick={retweetHandler}\r\n                >\r\n                  <span className=\"icon\">\r\n                    <svg\r\n                      width=\"16\"\r\n                      height=\"16\"\r\n                      viewBox=\"0 0 16 16\"\r\n                      fill=\"none\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        d=\"M4.11111 16L1 12.8L4.11111 9.6V12H11.8889V8.8H13.4444V12.8C13.4444 13.2418 13.0962 13.6 12.6667 13.6H4.11111V16ZM4.11111 7.2H2.55556V3.2C2.55556 2.75817 2.90378 2.4 3.33333 2.4H11.8889V0L15 3.2L11.8889 6.4V4H4.11111V7.2Z\"\r\n                        fill=\"white\"\r\n                        fillOpacity=\"0.2\"\r\n                      />\r\n                    </svg>\r\n                  </span>\r\n                  <span className=\"number\">\r\n                    {(post.retweetUsers.length > 0 && post.retweetUsers.length) ||\r\n                      (post.retweetData?.retweetUsers.length > 0 &&\r\n                        post.retweetData?.retweetUsers.length)}\r\n                  </span>\r\n                </div>\r\n                <div\r\n                  className={liked ? \"right-c active\" : \"right-c\"}\r\n                  onClick={likesHandler}\r\n                >\r\n                  <span className=\"icon\">\r\n                    <svg\r\n                      width=\"18\"\r\n                      height=\"18\"\r\n                      viewBox=\"0 0 18 18\"\r\n                      fill=\"none\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        d=\"M9 14.9942C8.5485 14.5813 8.0382 14.1518 7.4985 13.6949H7.4915C5.59101 12.0924 3.43711 10.2791 2.48581 8.10627C2.17328 7.41454 2.00765 6.66193 2.00001 5.89884C1.99792 4.85177 2.40515 3.84803 3.12968 3.11447C3.8542 2.3809 4.83486 1.97944 5.85001 2.00081C6.67645 2.00216 7.48509 2.24847 8.1796 2.7104C8.48478 2.91466 8.7609 3.16174 9 3.44452C9.24044 3.16285 9.51663 2.91591 9.8211 2.7104C10.5153 2.24838 11.3238 2.00205 12.15 2.00081C13.1651 1.97944 14.1458 2.3809 14.8703 3.11447C15.5948 3.84803 16.0021 4.85177 16 5.89884C15.9928 6.66315 15.8272 7.41704 15.5142 8.10988C14.5629 10.2827 12.4097 12.0953 10.5092 13.6949L10.5022 13.7007C9.9618 14.1547 9.4522 14.5842 9.0007 15L9 14.9942ZM5.85001 3.44452C5.19797 3.43611 4.56906 3.69345 4.10001 4.16061C3.64808 4.61838 3.3955 5.24559 3.39995 5.89884C3.40794 6.45503 3.53009 7.00317 3.75841 7.50713C4.20747 8.44461 4.81339 9.29304 5.54831 10.0134C6.24201 10.7353 7.04 11.434 7.7302 12.0216C7.9213 12.184 8.1159 12.3479 8.3105 12.5118L8.433 12.615C8.6199 12.7724 8.8131 12.9355 9 13.0957L9.0091 13.0871L9.0133 13.0835H9.0175L9.0238 13.0784H9.0273H9.0308L9.0434 13.0676L9.0721 13.0438L9.077 13.0394L9.0847 13.0337H9.0889L9.0952 13.0279L9.56 12.6345L9.6818 12.5313C9.8785 12.3659 10.0731 12.2021 10.2642 12.0397C10.9544 11.4521 11.7531 10.754 12.4468 10.0286C13.1818 9.30857 13.7878 8.46035 14.2367 7.52301C14.4691 7.01468 14.593 6.46081 14.6 5.89884C14.6029 5.24761 14.3505 4.62281 13.9 4.16638C13.4318 3.69712 12.8028 3.43765 12.15 3.44452C11.3533 3.43754 10.5918 3.7819 10.057 4.39088L9 5.64691L7.943 4.39088C7.40825 3.7819 6.64666 3.43754 5.85001 3.44452Z\"\r\n                        fill=\"white\"\r\n                        fillOpacity=\"0.2\"\r\n                      />\r\n                    </svg>\r\n                  </span>\r\n                  <span className=\"number\">\r\n                    {(post.likes.length > 0 && post.likes.length) ||\r\n                      (post.retweetData?.likes.length > 0 &&\r\n                        post.retweetData?.likes.length)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div ref={ref} className=\"right\">\r\n              <div className=\"icon\" onClick={() => setOpen(!open)}>\r\n                <svg\r\n                  width=\"18\"\r\n                  height=\"18\"\r\n                  viewBox=\"0 0 18 18\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M13.5 10.5C12.6716 10.5 12 9.82843 12 9C12 8.17157 12.6716 7.5 13.5 7.5C14.3284 7.5 15 8.17157 15 9C15 9.39782 14.842 9.77936 14.5607 10.0607C14.2794 10.342 13.8978 10.5 13.5 10.5ZM9 10.5C8.17157 10.5 7.5 9.82843 7.5 9C7.5 8.17157 8.17157 7.5 9 7.5C9.82843 7.5 10.5 8.17157 10.5 9C10.5 9.39782 10.342 9.77936 10.0607 10.0607C9.77935 10.342 9.39782 10.5 9 10.5ZM4.5 10.5C3.67157 10.5 3 9.82843 3 9C3 8.17157 3.67157 7.5 4.5 7.5C5.32843 7.5 6 8.17157 6 9C6 9.39782 5.84196 9.77936 5.56066 10.0607C5.27936 10.342 4.89782 10.5 4.5 10.5Z\"\r\n                    fill=\"white\"\r\n                    fillOpacity=\"0.3\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              <ul className={open ? \"miniMenu open\" : \"miniMenu\"}>\r\n                {userInfo?._id === post.user._id && (\r\n                  <>\r\n                    <li className=\"link\" onClick={deleteHandler}>\r\n                      <svg\r\n                        width=\"20\"\r\n                        height=\"20\"\r\n                        viewBox=\"0 0 20 20\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M14.1667 18.3334H5.83333C4.91286 18.3334 4.16667 17.5872 4.16667 16.6667V5.83335H2.5V4.16669H5.83333V3.33335C5.83333 2.41288 6.57953 1.66669 7.5 1.66669H12.5C13.4205 1.66669 14.1667 2.41288 14.1667 3.33335V4.16669H17.5V5.83335H15.8333V16.6667C15.8333 17.5872 15.0871 18.3334 14.1667 18.3334ZM5.83333 5.83335V16.6667H14.1667V5.83335H5.83333ZM7.5 3.33335V4.16669H12.5V3.33335H7.5ZM12.5 15H10.8333V7.50002H12.5V15ZM9.16667 15H7.5V7.50002H9.16667V15Z\"\r\n                          fill=\"#FF003D\"\r\n                        />\r\n                      </svg>\r\n                      <p className=\"text\">Delete</p>\r\n                    </li>\r\n                    <li className=\"link\" onClick={pinPostHandler}>\r\n                      <svg\r\n                        width=\"20\"\r\n                        height=\"20\"\r\n                        viewBox=\"0 0 20 20\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M13.4292 1.66669H6.57084C5.80834 1.66669 5.16667 2.14335 5.07167 2.77752L5.00001 3.33335C4.93334 3.78252 5.14501 4.15419 5.48668 4.46919C5.59084 4.56502 5.69584 4.66085 5.79918 4.75835C6.44584 5.36835 6.50751 6.30669 6.22251 7.14919L5.86501 8.20669C5.84446 8.29129 5.81942 8.37474 5.79001 8.45669C5.70751 8.68085 5.51501 9.17502 5.26501 9.60585C5.10667 9.87835 4.86668 10.0892 4.60418 10.2642C3.97418 10.6842 4.27084 11.6667 5.02917 11.6667H8.75001V13.4259C8.75001 14.4609 8.57501 15.4817 9.03751 16.4075L10 18.3334L10.9625 16.4084C11.4258 15.4817 11.25 14.4609 11.25 13.4259V11.6667H14.9708C15.7292 11.6667 16.0258 10.6834 15.3958 10.2634C15.1333 10.0884 14.8933 9.87835 14.735 9.60502C14.5291 9.23684 14.3535 8.85252 14.21 8.45585C14.1806 8.3739 14.1556 8.29045 14.135 8.20585L13.7775 7.14835C13.4942 6.30669 13.555 5.36835 14.2008 4.75835C14.3042 4.66085 14.4092 4.56502 14.5133 4.46919C14.855 4.15419 15.0667 3.78252 15 3.33335L14.9283 2.77752C14.8333 2.14335 14.1908 1.66669 13.4292 1.66669Z\"\r\n                          stroke=\"white\"\r\n                          strokeOpacity=\"0.9\"\r\n                          strokeWidth=\"2\"\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                        />\r\n                      </svg>\r\n                      {post.pinned ? (\r\n                        <p className=\"text\">Unpin from profile</p>\r\n                      ) : (\r\n                        <p className=\"text\">Pin to your profile</p>\r\n                      )}\r\n                    </li>\r\n                  </>\r\n                )}\r\n                {userInfo?._id !== post.user._id && (\r\n                  <li className=\"link\">\r\n                    <svg\r\n                      width=\"20\"\r\n                      height=\"20\"\r\n                      viewBox=\"0 0 20 20\"\r\n                      fill=\"none\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        d=\"M3.33334 15.8333H1.66667C1.66667 13.0719 3.90525 10.8333 6.66667 10.8333C9.4281 10.8333 11.6667 13.0719 11.6667 15.8333H10C10 13.9924 8.50762 12.5 6.66667 12.5C4.82572 12.5 3.33334 13.9924 3.33334 15.8333ZM15.8333 13.3333H14.1667V10.8333H11.6667V9.16665H14.1667V6.66665H15.8333V9.16665H18.3333V10.8333H15.8333V13.3333ZM6.66667 9.99998C4.82572 9.99998 3.33334 8.5076 3.33334 6.66665C3.33334 4.8257 4.82572 3.33331 6.66667 3.33331C8.50762 3.33331 10 4.8257 10 6.66665C9.99771 8.50664 8.50667 9.99768 6.66667 9.99998ZM6.66667 4.99998C5.75617 5.0009 5.01491 5.73235 5.00186 6.64276C4.98882 7.55317 5.70881 8.30557 6.61891 8.33258C7.52902 8.35959 8.29237 7.65123 8.33334 6.74165V7.07498V6.66665C8.33334 5.74617 7.58715 4.99998 6.66667 4.99998Z\"\r\n                        fill=\"white\"\r\n                        fillOpacity=\"0.9\"\r\n                      />\r\n                    </svg>\r\n\r\n                    <p className=\"text\">Follow</p>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"bar\"></div>\r\n          <Modal post={post} showModal={showModal} setShowModal={setShowModal} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PinPost;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./profileScreen.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IChat, IPinPost, IPosts, IUser, IUserAuth } from \"../../types\";\r\nimport { reducerState } from \"../../store\";\r\nimport { detailsUser, followUser } from \"../../actions/userActions\";\r\nimport { userDate } from \"../../timeFunction\";\r\nimport { userPosts } from \"../../actions/postActions\";\r\nimport { POSTS_USER_RESET } from \"../../constants/postConstants\";\r\nimport PostCard from \"../../components/PostCard/PostCard\";\r\nimport EditProfile from \"../../components/EditProfile/EditProfile\";\r\nimport PinPost from \"../../components/PinPost/PinPost\";\r\nimport { createChat } from \"../../actions/chatActions\";\r\nimport { CHAT_CREATE_RESET } from \"../../constants/chatConstants\";\r\n\r\ninterface IParams {\r\n  id: string;\r\n}\r\n\r\nconst ProfileScreen = () => {\r\n  const history = useHistory();\r\n  const match = useRouteMatch<IParams>();\r\n\r\n  const [toggleTab, setToggleTab] = useState(1);\r\n  const [followButton, setFollowButton] = useState(\"Following\");\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin: IUserAuth = useSelector((state: reducerState) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails: IUser = useSelector((state: reducerState) => state.userDetails);\r\n  const { user, loading } = userDetails;\r\n\r\n  const postsUser: IPosts = useSelector((state: reducerState) => state.postsUser);\r\n  const { posts } = postsUser;\r\n\r\n  const postPin: IPinPost = useSelector((state: reducerState) => state.postPin);\r\n  const { success } = postPin;\r\n\r\n  const chatCreate: IChat = useSelector((state: reducerState) => state.chatCreate);\r\n  const { success: createSuccess, chat } = chatCreate;\r\n\r\n  const id = match.params.id;\r\n\r\n  const tweets = posts?.filter((post) => {\r\n    return !post.replyTo;\r\n  });\r\n\r\n  const replies = posts?.filter((post) => {\r\n    return post.replyTo;\r\n  });\r\n\r\n  const pinnedPost = posts?.filter((post) => {\r\n    return post.pinned === true;\r\n  });\r\n\r\n  const following = userInfo?.following.map((follow) => follow._id).includes(user?._id!);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    if (createSuccess) {\r\n      history.push(`/messages/${chat?._id}`);\r\n      dispatch({ type: CHAT_CREATE_RESET });\r\n    }\r\n\r\n    dispatch({ type: POSTS_USER_RESET });\r\n    dispatch(detailsUser(id));\r\n    dispatch(userPosts(id));\r\n  }, [dispatch, userInfo, history, id, success, createSuccess, chat]);\r\n\r\n  const followHandler = () => {\r\n    if (userInfo) {\r\n      dispatch(followUser(id, userInfo?._id));\r\n    }\r\n  };\r\n\r\n  const clickHandler = () => {\r\n    //Dispatch\r\n    if (user) {\r\n      dispatch(createChat([user], user.username));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"profileScreen\">\r\n        {loading ? (\r\n          <div className=\"loading\">\r\n            <i\r\n              className=\"fas fa-spinner fa-spin fa-2x\"\r\n              style={{ color: \"rgba(0, 238, 255, 0.9)\" }}\r\n            ></i>\r\n          </div>\r\n        ) : (\r\n          <div className=\"profileContainer\">\r\n            <div className=\"topDetails\">\r\n              <div className=\"icon\" onClick={() => history.push(\"/home\")}>\r\n                <svg\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M7.83 11L11.41 7.41L10 6L4 12L10 18L11.41 16.59L7.83 13H20V11H7.83Z\"\r\n                    fill=\"#1A91DA\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              <p className=\"title\">\r\n                <span className=\"username\">{user?.firstName}</span>\r\n                <span className=\"tweets\">\r\n                  {replies && tweets ? tweets.length + replies.length : 0} Tweets\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className=\"userDetails\">\r\n              <div className=\"userCover\">\r\n                <img src={user?.coverPic} alt=\"cover\" className=\"coverImg\" />\r\n                <img src={user?.profilePic} alt=\"profile\" className=\"profilePic\" />\r\n              </div>\r\n              <div className=\"userButtons\">\r\n                {userInfo?._id !== user?._id && (\r\n                  <div className=\"icon\" onClick={clickHandler}>\r\n                    <svg\r\n                      width=\"24\"\r\n                      height=\"24\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        d=\"M20 20H4C2.89543 20 2 19.1046 2 18V5.913C2.04661 4.84255 2.92853 3.99899 4 4H20C21.1046 4 22 4.89543 22 6V18C22 19.1046 21.1046 20 20 20ZM4 7.868V18H20V7.868L12 13.2L4 7.868ZM4.8 6L12 10.8L19.2 6H4.8Z\"\r\n                        fill=\"#1A91DA\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                )}\r\n                {userInfo?._id === user?._id ? (\r\n                  <button\r\n                    className=\"editProfile\"\r\n                    onClick={() => setShowModal(!showModal)}\r\n                  >\r\n                    Edit profile\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    className={following ? \"followButton active\" : \"followButton\"}\r\n                    onClick={followHandler}\r\n                    onMouseOver={() => setFollowButton(\"Unfollow\")}\r\n                    onMouseOut={() => setFollowButton(\"Following\")}\r\n                  >\r\n                    {following ? followButton : \"Follow\"}\r\n                  </button>\r\n                )}\r\n              </div>\r\n              <div className=\"profileDetails\">\r\n                <p className=\"firstName\">{user?.firstName}</p>\r\n                <p className=\"username\">@{user?.username}</p>\r\n                {user?.bio && <p className=\"bio\">{user?.bio}</p>}\r\n                <div className=\"detailsWrap\">\r\n                  <div className=\"wrap\">\r\n                    <svg\r\n                      width=\"18\"\r\n                      height=\"18\"\r\n                      viewBox=\"0 0 18 18\"\r\n                      fill=\"none\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        d=\"M14.25 16.5H3.75C2.92157 16.5 2.25 15.8284 2.25 15V4.5C2.25 3.67157 2.92157 3 3.75 3H5.25V1.5H6.75V3H11.25V1.5H12.75V3H14.25C15.0784 3 15.75 3.67157 15.75 4.5V15C15.75 15.8284 15.0784 16.5 14.25 16.5ZM3.75 7.5V15H14.25V7.5H3.75ZM3.75 4.5V6H14.25V4.5H3.75ZM12.75 13.5H11.25V12H12.75V13.5ZM9.75 13.5H8.25V12H9.75V13.5ZM6.75 13.5H5.25V12H6.75V13.5ZM12.75 10.5H11.25V9H12.75V10.5ZM9.75 10.5H8.25V9H9.75V10.5ZM6.75 10.5H5.25V9H6.75V10.5Z\"\r\n                        fill=\"white\"\r\n                        fillOpacity=\"0.3\"\r\n                      />\r\n                    </svg>\r\n                    {user?.createdAt && (\r\n                      <p>Joined {userDate(new Date(user?.createdAt))}</p>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"wrap\">\r\n                    {user?.website && (\r\n                      <>\r\n                        <svg\r\n                          width=\"18\"\r\n                          height=\"18\"\r\n                          viewBox=\"0 0 18 18\"\r\n                          fill=\"none\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                          <path\r\n                            d=\"M6.34869 15.4013C4.83207 15.4013 3.46477 14.4877 2.88429 13.0866C2.30381 11.6854 2.62444 10.0726 3.69669 9.00002L5.28819 7.40852L6.34869 8.46901L4.75794 10.0598C4.18949 10.6282 3.96748 11.4568 4.17555 12.2333C4.38362 13.0098 4.99015 13.6163 5.76667 13.8244C6.5432 14.0325 7.37174 13.8105 7.94019 13.242L9.53094 11.6513L10.5914 12.7125L9.00069 14.3033C8.29875 15.0087 7.34383 15.404 6.34869 15.4013ZM6.87894 12.1815L5.81844 11.121L11.1217 5.81776L12.1822 6.87827L6.87969 12.1808L6.87894 12.1815ZM12.7132 10.5908L11.6519 9.53026L13.2427 7.93951C13.8189 7.37276 14.0468 6.54051 13.8399 5.75925C13.6329 4.97799 13.0228 4.36775 12.2416 4.1606C11.4604 3.95345 10.6281 4.1812 10.0612 4.75726L8.46969 6.34802L7.40919 5.28752L9.00069 3.69602C10.467 2.24249 12.8324 2.24767 14.2924 3.7076C15.7523 5.16754 15.7575 7.53295 14.3039 8.99926L12.7132 10.59V10.5908Z\"\r\n                            fill=\"white\"\r\n                            fillOpacity=\"0.3\"\r\n                          />\r\n                        </svg>\r\n\r\n                        <a\r\n                          className=\"link\"\r\n                          href={`${user.website}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noreferrer\"\r\n                        >\r\n                          {user.website}\r\n                        </a>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"follows\">\r\n                  <p className=\"following\">\r\n                    <span className=\"numb\">{user?.following.length}</span>\r\n                    <Link to={`/profile/${id}/following`} className=\"link\">\r\n                      Following\r\n                    </Link>\r\n                  </p>\r\n                  <p className=\"followers\">\r\n                    <span className=\"numb\">{user?.followers.length}</span>\r\n                    <Link to={`/profile/${id}/followers`} className=\"link\">\r\n                      Followers\r\n                    </Link>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"blockTabs\">\r\n              <div\r\n                className={toggleTab === 1 ? \"tabLeft active\" : \"tabLeft\"}\r\n                onClick={() => setToggleTab(1)}\r\n              >\r\n                <p>Tweets</p>\r\n              </div>\r\n              <div\r\n                className={toggleTab === 2 ? \"tabRight active\" : \"tabRight\"}\r\n                onClick={() => setToggleTab(2)}\r\n              >\r\n                <p>Replies</p>\r\n              </div>\r\n            </div>\r\n            {pinnedPost && (\r\n              <div>\r\n                {pinnedPost?.map((post) => (\r\n                  <PinPost\r\n                    key={post._id}\r\n                    post={post}\r\n                    liked={\r\n                      post.likes.includes(userInfo?._id!) ||\r\n                      post.retweetData?.likes.includes(userInfo?._id!)\r\n                    }\r\n                    retweeted={\r\n                      post.retweetUsers.includes(userInfo?._id!) ||\r\n                      post.retweetData?.retweetUsers.includes(userInfo?._id!)\r\n                    }\r\n                  />\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"tabsContent\">\r\n              <div className={toggleTab === 1 ? \"content active\" : \"content\"}>\r\n                {tweets?.map((post) => (\r\n                  <PostCard\r\n                    key={post._id}\r\n                    post={post}\r\n                    liked={\r\n                      post.likes.includes(userInfo?._id!) ||\r\n                      post.retweetData?.likes.includes(userInfo?._id!)\r\n                    }\r\n                    retweeted={\r\n                      post.retweetUsers.includes(userInfo?._id!) ||\r\n                      post.retweetData?.retweetUsers.includes(userInfo?._id!)\r\n                    }\r\n                  />\r\n                ))}\r\n              </div>\r\n              <div className={toggleTab === 2 ? \"content active\" : \"content\"}>\r\n                {replies?.map((post) => (\r\n                  <PostCard\r\n                    key={post._id}\r\n                    post={post}\r\n                    liked={\r\n                      post.likes.includes(userInfo?._id!) ||\r\n                      post.retweetData?.likes.includes(userInfo?._id!)\r\n                    }\r\n                    retweeted={\r\n                      post.retweetUsers.includes(userInfo?._id!) ||\r\n                      post.retweetData?.retweetUsers.includes(userInfo?._id!)\r\n                    }\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <EditProfile user={user} showModal={showModal} setShowModal={setShowModal} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { reducerState } from \"../../store\";\r\nimport { IUserAuth } from \"../../types\";\r\nimport \"./loadingScreen.scss\";\r\n\r\nconst LoadingScreen = () => {\r\n  const history = useHistory();\r\n\r\n  const userLogin: IUserAuth = useSelector((state: reducerState) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/home\");\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userInfo, history]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"loadingScreen\">\r\n        <div className=\"loadingContainer\">\r\n          <div className=\"loading\">\r\n            <svg\r\n              width=\"100\"\r\n              height=\"100\"\r\n              viewBox=\"0 0 100 100\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M83.3126 27.8666C87.0477 25.6337 89.8425 22.1176 91.1751 17.975C87.6653 20.0575 83.8252 21.5245 79.8209 22.3125C74.2692 16.4397 65.473 15.0105 58.3476 18.8235C51.2221 22.6366 47.5313 30.7478 49.3376 38.625C34.9609 37.9032 21.5666 31.1121 12.4876 19.9416C7.7494 28.1142 10.1707 38.5616 18.0209 43.8166C15.1822 43.7254 12.4064 42.9568 9.92507 41.575C9.92507 41.65 9.92507 41.725 9.92507 41.8C9.92671 50.3131 15.9266 57.6461 24.2709 59.3333C21.6378 60.0497 18.8759 60.1551 16.1959 59.6416C18.5426 66.9219 25.2524 71.9095 32.9001 72.0583C26.566 77.0297 18.7437 79.7257 10.6917 79.7125C9.26453 79.7145 7.83844 79.6324 6.4209 79.4666C14.5975 84.7209 24.1141 87.5098 33.8334 87.5C47.3553 87.5929 60.3502 82.2621 69.9114 72.7001C79.4727 63.138 84.8024 50.1427 84.7084 36.6208C84.7084 35.8458 84.6903 35.075 84.6542 34.3083C88.1561 31.7775 91.1785 28.6423 93.5792 25.05C90.3168 26.4961 86.8562 27.4455 83.3126 27.8666Z\"\r\n                fill=\"white\"\r\n                fillOpacity=\"0.9\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadingScreen;\r\n","import React, { FunctionComponent, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { reducerState } from \"../../store\";\r\nimport { IFollow, IUserAuth } from \"../../types\";\r\nimport \"./userCard.scss\";\r\n\r\nconst UserCard: FunctionComponent<IFollow> = ({ follow, onClick }) => {\r\n  const [followButton, setFollowButton] = useState(\"Following\");\r\n\r\n  const userLogin: IUserAuth = useSelector((state: reducerState) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const following = userInfo?.following\r\n    .map((follow) => follow._id)\r\n    .includes(follow?._id!);\r\n\r\n  const followYou = userInfo?.followers.map((user) => user._id).includes(follow._id);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"userCard\">\r\n        <Link to={`/profile/${follow._id}`} className=\"left\">\r\n          <img className=\"profile\" src={follow?.profilePic} alt=\"profile\" />\r\n        </Link>\r\n        <Link to={`/profile/${follow._id}`} className=\"middle\">\r\n          <div className=\"user\">\r\n            <p className=\"name\">{follow?.firstName}</p>\r\n            {follow?.isVerified && (\r\n              <div className=\"icon\">\r\n                <svg\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  viewBox=\"0 0 16 16\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M8 14.6667C4.31977 14.6626 1.33737 11.6802 1.33333 7.99999V7.86666C1.40662 4.20301 4.42305 1.2853 8.08711 1.33391C11.7512 1.38253 14.6891 4.37925 14.6652 8.04355C14.6412 11.7079 11.6644 14.6659 8 14.6667ZM4.93999 7.72666L3.99999 8.66666L6.66666 11.3333L12 5.99999L11.06 5.05332L6.66666 9.44666L4.93999 7.72666Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <p className=\"bottom\">\r\n            <span>@{follow?.username} </span>\r\n            {followYou && <span className=\"followsYou\">Follows you</span>}\r\n          </p>\r\n          {follow?.bio && <p className=\"bio\">{follow?.bio}</p>}\r\n        </Link>\r\n        <div className=\"right\">\r\n          {userInfo?._id === follow?._id ? (\r\n            \"\"\r\n          ) : (\r\n            <button\r\n              className={following ? \"followButton active\" : \"followButton\"}\r\n              onClick={() => onClick(follow._id)}\r\n              onMouseOver={() => setFollowButton(\"Unfollow\")}\r\n              onMouseOut={() => setFollowButton(\"Following\")}\r\n            >\r\n              {following ? followButton : \"Follow\"}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useRouteMatch } from \"react-router\";\r\nimport { detailsUser, followUser } from \"../../actions/userActions\";\r\nimport UserCard from \"../../components/UserCard/UserCard\";\r\nimport { reducerState } from \"../../store\";\r\nimport { IUser, IUserAuth } from \"../../types\";\r\nimport \"./followsScreen.scss\";\r\n\r\ninterface IParams {\r\n  id: string;\r\n  follows: string;\r\n}\r\n\r\nconst FollowsScreen = () => {\r\n  const match = useRouteMatch<IParams>();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [toggleTab, setToggleTab] = useState(1);\r\n\r\n  const userLogin: IUserAuth = useSelector((state: reducerState) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails: IUser = useSelector((state: reducerState) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const id = match.params.id;\r\n  const route = match.params.follows;\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    if (route === \"followers\") {\r\n      setToggleTab(1);\r\n    } else {\r\n      setToggleTab(2);\r\n    }\r\n\r\n    dispatch(detailsUser(id));\r\n  }, [dispatch, userInfo, history, id, route]);\r\n\r\n  const followHandler = (userId: string) => {\r\n    if (userInfo) {\r\n      dispatch(followUser(userId, userInfo?._id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"followsScreen\">\r\n        <div className=\"followsContainer\">\r\n          <div className=\"topDetails\">\r\n            <div className=\"topTop\">\r\n              <div className=\"icon\" onClick={() => history.push(`/profile/${id}`)}>\r\n                <svg\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M7.83 11L11.41 7.41L10 6L4 12L10 18L11.41 16.59L7.83 13H20V11H7.83Z\"\r\n                    fill=\"#1A91DA\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              <p className=\"title\">\r\n                <span className=\"username\">{user?.firstName}</span>\r\n                <span className=\"tweets\">@{user?.username}</span>\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"blockTabs\">\r\n              <div\r\n                className={toggleTab === 1 ? \"tabLeft active\" : \"tabLeft\"}\r\n                onClick={() => history.replace(`/profile/${id}/followers`)}\r\n              >\r\n                <p>Followers</p>\r\n              </div>\r\n              <div\r\n                className={toggleTab === 2 ? \"tabRight active\" : \"tabRight\"}\r\n                onClick={() => history.replace(`/profile/${id}/following`)}\r\n              >\r\n                <p>Following</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"tabsContent\">\r\n            <div className={toggleTab === 1 ? \"content active\" : \"content\"}>\r\n              {user?.followers.map((follow, index) => (\r\n                <UserCard key={index} follow={follow} onClick={followHandler} />\r\n              ))}\r\n            </div>\r\n            <div className={toggleTab === 2 ? \"content active\" : \"content\"}>\r\n              {user?.following.map((follow, index) => (\r\n                <UserCard key={index} follow={follow} onClick={followHandler} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FollowsScreen;\r\n","import React, { FunctionComponent, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { reducerState } from \"../../store\";\r\nimport { IFollow, IUserAuth } from \"../../types\";\r\nimport \"./usersCard.scss\";\r\n\r\nconst UsersCard: FunctionComponent<IFollow> = ({ user, onClick }) => {\r\n  let following;\r\n  let followYou;\r\n  const [followButton, setFollowButton] = useState(\"Following\");\r\n\r\n  const userLogin: IUserAuth = useSelector((state: reducerState) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (userInfo) {\r\n    following = userInfo?.following.map((followed) => followed._id).includes(user?._id!);\r\n\r\n    followYou = userInfo?.followers.map((user) => user._id).includes(user._id);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!following && userInfo?._id !== user?._id && (\r\n        <div className=\"usersCard\">\r\n          <Link to={`/profile/${user?._id}`} className=\"left\">\r\n            <img className=\"profile\" src={user?.profilePic} alt=\"profile\" />\r\n          </Link>\r\n          <Link to={`/profile/${user?._id}`} className=\"middle\">\r\n            <div className=\"user\">\r\n              <p className=\"name\">{user?.firstName}</p>\r\n              {user?.isVerified && (\r\n                <div className=\"icon\">\r\n                  <svg\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    viewBox=\"0 0 16 16\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M8 14.6667C4.31977 14.6626 1.33737 11.6802 1.33333 7.99999V7.86666C1.40662 4.20301 4.42305 1.2853 8.08711 1.33391C11.7512 1.38253 14.6891 4.37925 14.6652 8.04355C14.6412 11.7079 11.6644 14.6659 8 14.6667ZM4.93999 7.72666L3.99999 8.66666L6.66666 11.3333L12 5.99999L11.06 5.05332L6.66666 9.44666L4.93999 7.72666Z\"\r\n                      fill=\"white\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <p className=\"bottom\">\r\n              <span>@{user?.username.substring(0, 4)} </span>\r\n              {followYou && <span className=\"followsYou\">Follows you</span>}\r\n            </p>\r\n          </Link>\r\n          <div className=\"right\">\r\n            <button\r\n              className={following ? \"followButton active\" : \"followButton\"}\r\n              onClick={() => onClick(user?._id)}\r\n              onMouseOver={() => setFollowButton(\"Unfollow\")}\r\n              onMouseOut={() => setFollowButton(\"Following\")}\r\n            >\r\n              {following ? followButton : \"Follow\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UsersCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { followUser, getUsers } from \"../../actions/userActions\";\r\nimport { reducerState } from \"../../store\";\r\nimport { IUserAuth, IUsers } from \"../../types\";\r\nimport UsersCard from \"../UsersCard/UsersCard\";\r\nimport \"./rightBar.scss\";\r\n\r\nconst RightBar = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const pathname = history.location.pathname;\r\n\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const userLogin: IUserAuth = useSelector((state: reducerState) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const usersList: IUsers = useSelector((state: reducerState) => state.usersList);\r\n  const { users } = usersList;\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n  }, [dispatch, pathname]);\r\n\r\n  const followHandler = (userId: string) => {\r\n    if (userInfo) {\r\n      dispatch(followUser(userId, userInfo?._id));\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}/posts`);\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"rightBar\">\r\n        <div className=\"rightBarContainer\">\r\n          {history.location.pathname !== `/search/${keyword}/posts` &&\r\n            history.location.pathname !== `/search/posts` &&\r\n            history.location.pathname !== `/search/${keyword}/users` &&\r\n            history.location.pathname !== `/search/users` && (\r\n              <form className=\"searchForm\" onSubmit={submitHandler}>\r\n                <div className=\"searchWrap\">\r\n                  <svg\r\n                    width=\"19\"\r\n                    height=\"20\"\r\n                    viewBox=\"0 0 19 20\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      fillRule=\"evenodd\"\r\n                      clipRule=\"evenodd\"\r\n                      d=\"M8.37398 0.666687C4.01383 0.666687 0.583344 4.40842 0.583344 8.89162C0.583344 13.3748 4.01383 17.1166 8.37398 17.1166C12.7341 17.1166 16.1646 13.3748 16.1646 8.89162C16.1646 6.72955 15.3579 4.64451 13.9043 3.09796C12.4488 1.5493 10.4609 0.666687 8.37398 0.666687ZM2.58334 8.89162C2.58334 5.39438 5.2334 2.66669 8.37398 2.66669C9.88904 2.66669 11.3556 3.30647 12.447 4.46769C13.5404 5.63101 14.1646 7.22135 14.1646 8.89162C14.1646 12.3889 11.5146 15.1166 8.37398 15.1166C5.2334 15.1166 2.58334 12.3889 2.58334 8.89162ZM15.0522 14.7119L17.0747 16.4304H17.1098C17.519 16.8657 17.519 17.5715 17.1098 18.0068C16.7006 18.4422 16.0372 18.4422 15.6281 18.0068L13.9497 15.9821C13.7911 15.8138 13.7019 15.5853 13.7019 15.347C13.7019 15.1087 13.7911 14.8801 13.9497 14.7119C14.2557 14.392 14.7462 14.392 15.0522 14.7119Z\"\r\n                      fill=\"white\"\r\n                      fillOpacity=\"0.3\"\r\n                    />\r\n                  </svg>\r\n                  <input\r\n                    className=\"inputForm\"\r\n                    type=\"text\"\r\n                    name=\"q\"\r\n                    placeholder=\"Search Twitter\"\r\n                    autoComplete=\"off\"\r\n                    maxLength={80}\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                  />\r\n                </div>\r\n              </form>\r\n            )}\r\n\r\n          <div className=\"usersWrap\">\r\n            <div className=\"title\">Who to follow</div>\r\n            <div>\r\n              {users?.length &&\r\n                users\r\n                  .slice(0, 4)\r\n                  .map((user, index) => (\r\n                    <UsersCard key={index} user={user} onClick={followHandler} />\r\n                  ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RightBar;\r\n","export const MESSAGE_CREATE_REQUEST = \"MESSAGE_CREATE_REQUEST\";\r\nexport const MESSAGE_CREATE_SUCCESS = \"MESSAGE_CREATE_SUCCESS\";\r\nexport const MESSAGE_CREATE_FAIL = \"MESSAGE_CREATE_FAIL\";\r\nexport const MESSAGE_CREATE_RESET = \"MESSAGE_CREATE_RESET\";\r\n\r\nexport const MESSAGE_LIST_REQUEST = \"MESSAGE_LIST_REQUEST\";\r\nexport const MESSAGE_LIST_SUCCESS = \"MESSAGE_LIST_SUCCESS\";\r\nexport const MESSAGE_LIST_FAIL = \"MESSAGE_LIST_FAIL\";\r\nexport const MESSAGE_LIST_RESET = \"MESSAGE_LIST_RESET\";\r\n","import axios from \"axios\";\r\nimport {\r\n  MESSAGE_CREATE_FAIL,\r\n  MESSAGE_CREATE_REQUEST,\r\n  MESSAGE_CREATE_SUCCESS,\r\n  MESSAGE_LIST_FAIL,\r\n  MESSAGE_LIST_REQUEST,\r\n  MESSAGE_LIST_SUCCESS,\r\n} from \"../constants/messageConstants\";\r\n\r\nexport const createMessage = (content: string, chatId: string) => async (\r\n  dispatch: any,\r\n  getState: any\r\n) => {\r\n  try {\r\n    dispatch({ type: MESSAGE_CREATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/messages`, { content, chatId }, config);\r\n\r\n    dispatch({ type: MESSAGE_CREATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MESSAGE_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getMessagesByChat = (chatId: string) => async (\r\n  dispatch: any,\r\n  getState: any\r\n) => {\r\n  try {\r\n    dispatch({ type: MESSAGE_LIST_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/messages/${chatId}`, config);\r\n\r\n    dispatch({ type: MESSAGE_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MESSAGE_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { FunctionComponent, useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { reducerState } from \"../../store\";\r\nimport { postDate, postTime } from \"../../timeFunction\";\r\nimport { IMessage, IUserAuth } from \"../../types\";\r\nimport \"./messageCard.scss\";\r\n\r\nconst MessageCard: FunctionComponent<IMessage> = ({ message, isGroupChat, index }) => {\r\n  const messageRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const userLogin: IUserAuth = useSelector((state: reducerState) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const isMine = message.sender._id === userInfo?._id;\r\n\r\n  const scrollToBottom = () => {\r\n    messageRef.current?.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"end\",\r\n      inline: \"nearest\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div ref={messageRef} className=\"messageCard\">\r\n        <div className={isMine ? \"messageCardCtn mine\" : \"messageCardCtn theirs\"}>\r\n          {!isMine && (\r\n            <Link to={`/profile/${message.sender._id}`} className=\"left\">\r\n              <img className=\"profile\" src={message.sender.profilePic} alt=\"profile\" />\r\n            </Link>\r\n          )}\r\n          <div className=\"middle\">\r\n            <div className=\"top\">\r\n              <p className=\"content\">{message.content}</p>\r\n            </div>\r\n\r\n            <div className=\"bottom\">\r\n              {!isMine && isGroupChat && (\r\n                <p className=\"date\">{message.sender.firstName}</p>\r\n              )}\r\n              {!isMine && isGroupChat && <p className=\"date\">.</p>}\r\n              <p className=\"date\">\r\n                {postDate(new Date(message.createdAt))},{\" \"}\r\n                {postTime(new Date(message.createdAt))}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MessageCard;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useRouteMatch, Link, useHistory } from \"react-router-dom\";\r\nimport { getChats, getChatsById, markAllMessagesAsRead } from \"../../actions/chatActions\";\r\nimport { createMessage, getMessagesByChat } from \"../../actions/messageActions\";\r\nimport { CHAT_DETAILS_RESET } from \"../../constants/chatConstants\";\r\nimport { MESSAGE_LIST_RESET } from \"../../constants/messageConstants\";\r\nimport { reducerState } from \"../../store\";\r\nimport { userDate } from \"../../timeFunction\";\r\nimport { IChat, IMessageCreate, IMessages, IUserAuth } from \"../../types\";\r\nimport { socket } from \"../../service/socket\";\r\nimport MessageCard from \"../MessageCard/MessageCard\";\r\nimport \"./message.scss\";\r\n\r\ninterface IParams {\r\n  id: string;\r\n}\r\n\r\nconst Message = () => {\r\n  const history = useHistory();\r\n  const match = useRouteMatch<IParams>();\r\n  const dispatch = useDispatch();\r\n  const chatId = match.params.id;\r\n  const textareaRef = useRef<any>(null);\r\n\r\n  const [content, setContent] = useState(\"\");\r\n  const [typing, setTyping] = useState(false);\r\n  const [lastTypingTime, setLastTypingTime] = useState<number>(new Date().getTime());\r\n  const [connected, setConnected] = useState(false);\r\n  //const [messageReceived, setMessageReceived] = useState(false);\r\n\r\n  const userLogin: IUserAuth = useSelector((state: reducerState) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const chatDetails: IChat = useSelector((state: reducerState) => state.chatDetails);\r\n  const { chat, error } = chatDetails;\r\n\r\n  const messageCreate: IMessageCreate = useSelector(\r\n    (state: reducerState) => state.messageCreate\r\n  );\r\n  const { success, message } = messageCreate;\r\n\r\n  const messageList: IMessages = useSelector((state: reducerState) => state.messageList);\r\n  const { messages } = messageList;\r\n\r\n  const users = chat?.users.filter((user) => user._id !== userInfo?._id);\r\n  const allUsers = chat?.users.map((user) => user);\r\n  const userIds = users?.map((user) => user._id);\r\n  const createdAt = users?.map((user) => user.createdAt);\r\n  const images = allUsers?.map((user) => user.profilePic);\r\n  const username = users?.map((user) => user.username);\r\n  const firstName = users?.map((user) => user.firstName);\r\n  const bio = users?.map((user) => user.bio);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      socket.emit(\"setup\", userInfo);\r\n    }\r\n\r\n    socket.emit(\"join_room\", chatId);\r\n\r\n    const typingHandler = () => {\r\n      setTyping(true);\r\n      setLastTypingTime(new Date().getTime());\r\n      const timerLength = 2000;\r\n      setTimeout(() => {\r\n        const timeNow = new Date().getTime();\r\n\r\n        const timeDiff = timeNow - lastTypingTime;\r\n        if (timeDiff >= timerLength && typing) {\r\n          setTyping(false);\r\n        }\r\n      }, timerLength);\r\n    };\r\n    const messageHandler = () => {\r\n      setTyping(false);\r\n      dispatch(getChats());\r\n      dispatch(getMessagesByChat(chatId));\r\n    };\r\n    socket.on(\"connected\", () => setConnected(true));\r\n    socket.on(\"typing\", typingHandler);\r\n    //socket.on(\"message received\", (newMessage: any) => console.log(newMessage));\r\n    socket.on(\"message received\", messageHandler);\r\n    return () => {\r\n      socket.off(\"typing\", typingHandler);\r\n      socket.off(\"connected\", () => setConnected(true));\r\n      socket.off(\"message received\", messageHandler);\r\n    };\r\n  }, [chatId, lastTypingTime, typing, setTyping, userInfo, dispatch]);\r\n\r\n  useEffect(() => {\r\n    textareaRef.current.style.height = \"32px\";\r\n    const scrollHeight = textareaRef.current.scrollHeight;\r\n    textareaRef.current.style.height = scrollHeight + \"px\";\r\n  }, [content]);\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      setContent(\"\");\r\n      setTyping(false);\r\n      dispatch({ type: MESSAGE_LIST_RESET });\r\n\r\n      if (connected) {\r\n        socket.emit(\"new message\", message);\r\n      }\r\n    }\r\n\r\n    dispatch(getChats());\r\n    dispatch(getMessagesByChat(chatId));\r\n    dispatch(markAllMessagesAsRead(chatId));\r\n  }, [dispatch, success, chatId, message, connected]);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: CHAT_DETAILS_RESET });\r\n\r\n    dispatch(getChatsById(chatId));\r\n  }, [dispatch, chatId]);\r\n\r\n  function getOtherChatUsers(users: any) {\r\n    if (users?.length === 1) return users;\r\n\r\n    return users?.filter((user: any) => user._id !== userInfo?._id);\r\n  }\r\n\r\n  function getChatName(chat: any) {\r\n    let chatName = chat?.chatName;\r\n    if (!chatName) {\r\n      const otherChatUsers = getOtherChatUsers(chat?.users!);\r\n      const nameArray = otherChatUsers?.map(\r\n        (user: any) => user?.firstName + \" \" + user?.lastName\r\n      );\r\n      chatName = nameArray.join(\", \");\r\n    }\r\n\r\n    return chatName;\r\n  }\r\n\r\n  const submitHandler = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    //Dispatch submit message\r\n    if (content.trim() && chat) {\r\n      setTyping(false);\r\n      dispatch(createMessage(content.trim(), chat._id));\r\n    }\r\n  };\r\n\r\n  const keyPress = useCallback(\r\n    (e: any) => {\r\n      if (textareaRef.current?.contains(e.target)) {\r\n        socket.emit(\"typing\", chatId);\r\n      }\r\n\r\n      if (e.key === \"Enter\" && !e.shiftKey) {\r\n        e.preventDefault();\r\n        //Dispatch submit message\r\n        if (content.trim() && chat) {\r\n          dispatch(createMessage(content.trim(), chat._id));\r\n        }\r\n      }\r\n    },\r\n    [content, dispatch, chat, chatId]\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener(\"keydown\", keyPress);\r\n    return () => document.body.removeEventListener(\"keydown\", keyPress);\r\n  }, [keyPress]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"message\">\r\n        <div className=\"messageCtn\">\r\n          <div className=\"messageTop\">\r\n            <div className=\"back\">\r\n              <svg\r\n                onClick={() => history.push(`/messages`)}\r\n                width=\"24\"\r\n                height=\"24\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M7.83 11L11.41 7.41L10 6L4 12L10 18L11.41 16.59L7.83 13H20V11H7.83Z\"\r\n                  fill=\"#1A91DA\"\r\n                />\r\n              </svg>\r\n            </div>\r\n\r\n            {chat && (\r\n              <>\r\n                <div className=\"left\">\r\n                  {images && images.length > 1 ? (\r\n                    images.slice(0, 3).map((image: any, index: number) => (\r\n                      <Link\r\n                        to={`/messages/${chat?._id}/participants`}\r\n                        key={index}\r\n                        className=\"linkCtn\"\r\n                      >\r\n                        <img src={image} alt=\"profile\" className=\"groupChat\" />\r\n                      </Link>\r\n                    ))\r\n                  ) : (\r\n                    <Link to={`/profile/${userIds}`}>\r\n                      <img className=\"profile\" src={images![0]} alt=\"profile\" />\r\n                    </Link>\r\n                  )}\r\n                </div>\r\n                {images && images?.length > 3 && (\r\n                  <div className=\"number\">\r\n                    <p className=\"rest\">+{images.length - 3}</p>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"middle\">\r\n                  <p className=\"top\">\r\n                    <span>{getChatName(chat).substring(0, 26)}</span>\r\n                    {getChatName(chat).length > 26 && <span>...</span>}\r\n                  </p>\r\n                  {users?.length === 1 && <p className=\"bottom\">@{username}</p>}\r\n                </div>\r\n                <Link to={`/messages/${chatId}/info`} className=\"right\">\r\n                  <svg\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M11.99 22C6.46846 21.9945 1.99632 17.5149 2 11.9933C2.00368 6.47179 6.48179 1.99816 12.0033 2C17.5249 2.00184 22 6.47845 22 12C21.9967 17.5254 17.5154 22.0022 11.99 22ZM4 12.172C4.04732 16.5732 7.64111 20.1095 12.0425 20.086C16.444 20.0622 19.9995 16.4875 19.9995 12.086C19.9995 7.6845 16.444 4.10977 12.0425 4.08599C7.64111 4.06245 4.04732 7.59876 4 12V12.172ZM13 17H11V15H13V17ZM13 13H11V7H13V13Z\"\r\n                      fill=\"#1A91DA\"\r\n                    />\r\n                  </svg>\r\n                </Link>\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"messagesWrapper\">\r\n            {chat && !chat.isGroupChat && (\r\n              <div className=\"userDescription\">\r\n                <div className=\"userCtn\">\r\n                  <div className=\"user\">\r\n                    <p className=\"firstName\">{firstName}</p>\r\n                    <p className=\"username\">@{username}</p>\r\n                  </div>\r\n                  <p className=\"description\">{bio}</p>\r\n                  <div className=\"join\">\r\n                    <svg\r\n                      width=\"18\"\r\n                      height=\"18\"\r\n                      viewBox=\"0 0 18 18\"\r\n                      fill=\"none\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        d=\"M14.25 16.5H3.75C2.92157 16.5 2.25 15.8284 2.25 15V4.5C2.25 3.67157 2.92157 3 3.75 3H5.25V1.5H6.75V3H11.25V1.5H12.75V3H14.25C15.0784 3 15.75 3.67157 15.75 4.5V15C15.75 15.8284 15.0784 16.5 14.25 16.5ZM3.75 7.5V15H14.25V7.5H3.75ZM3.75 4.5V6H14.25V4.5H3.75ZM12.75 13.5H11.25V12H12.75V13.5ZM9.75 13.5H8.25V12H9.75V13.5ZM6.75 13.5H5.25V12H6.75V13.5ZM12.75 10.5H11.25V9H12.75V10.5ZM9.75 10.5H8.25V9H9.75V10.5ZM6.75 10.5H5.25V9H6.75V10.5Z\"\r\n                        fill=\"white\"\r\n                        fillOpacity=\"0.3\"\r\n                      />\r\n                    </svg>\r\n                    {createdAt && (\r\n                      <p className=\"date\">Joined {userDate(new Date(createdAt[0]))}</p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {error && <p className=\"error\">{error}</p>}\r\n            <div className=\"messagesCtn\">\r\n              {messages &&\r\n                messages.map((message, index) => (\r\n                  <MessageCard\r\n                    key={message._id}\r\n                    message={message}\r\n                    isGroupChat={chat?.isGroupChat!}\r\n                    index={index + 1}\r\n                  />\r\n                ))}\r\n            </div>\r\n          </div>\r\n\r\n          {typing && (\r\n            <div className=\"typingWrap\">\r\n              <img src=\"/images/dots.gif\" alt=\"typing\" className=\"typing\" />\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"textInputCtn\">\r\n            <form className=\"textInput\" onSubmit={submitHandler}>\r\n              <div className=\"textareaWrap\">\r\n                <textarea\r\n                  ref={textareaRef}\r\n                  value={content}\r\n                  name=\"message\"\r\n                  placeholder=\"Start a new message\"\r\n                  className=\"messageTextarea\"\r\n                  onChange={(e) => setContent(e.target.value)}\r\n                />\r\n              </div>\r\n              <button type=\"submit\" className=\"icon\">\r\n                <svg\r\n                  width=\"22\"\r\n                  height=\"22\"\r\n                  viewBox=\"0 0 22 22\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M17.3361 10.9999H3.66675L1.8545 3.79036C1.8429 3.74846 1.83583 3.70544 1.83342 3.66203C1.81325 3.00111 2.54108 2.54278 3.17175 2.84528L20.1667 10.9999L3.17175 19.1546C2.54842 19.4544 1.82975 19.0089 1.83342 18.3599C1.83527 18.3019 1.84546 18.2444 1.86367 18.1894L4.12508 11.9166\"\r\n                    stroke=\"#1A91DA\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, {\r\n  FunctionComponent,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateGroupName } from \"../../actions/chatActions\";\r\nimport { reducerState } from \"../../store\";\r\nimport { IChat, IChatGroupName } from \"../../types\";\r\nimport \"./editGroupInfo.scss\";\r\n\r\nconst EditGroupInfo: FunctionComponent<IChat> = ({\r\n  chat,\r\n  showModal,\r\n  setShowModal,\r\n  name,\r\n}) => {\r\n  const modalRef = useRef<HTMLDivElement | null>(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const [groupName, setGroupName] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const chatGroupName: IChatGroupName = useSelector(\r\n    (state: reducerState) => state.chatGroupName\r\n  );\r\n  const { success } = chatGroupName;\r\n\r\n  const keyPress = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Escape\" && showModal) {\r\n        setShowModal(false);\r\n      }\r\n    },\r\n    [showModal, setShowModal]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      setShowModal(false);\r\n    }\r\n\r\n    document.addEventListener(\"keydown\", keyPress);\r\n    return () => document.removeEventListener(\"keydown\", keyPress);\r\n  }, [keyPress, setShowModal, dispatch, success]);\r\n\r\n  useEffect(() => {\r\n    if (!chat?.chatName && name) {\r\n      setGroupName(name);\r\n    } else if (chat?.chatName) {\r\n      setGroupName(chat.chatName);\r\n    }\r\n  }, [chat, name]);\r\n\r\n  const closeModal = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if (modalRef.current === e.target) {\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (groupName.trim() && chat) {\r\n      //DISPATCH_UPDATE Chat name\r\n      dispatch(updateGroupName(chat._id, groupName));\r\n    } else {\r\n      setError(\"Enter a valid name.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showModal && (\r\n        <div ref={modalRef} className=\"editGroupInfo\" onClick={closeModal}>\r\n          <div className=\"modal\">\r\n            <form className=\"modalForm\" onSubmit={submitHandler}>\r\n              <div className=\"modalTop\">\r\n                <div className=\"left\">\r\n                  <svg\r\n                    onClick={() => setShowModal(!showModal)}\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41L17.59 5Z\"\r\n                      fill=\"#1A91DA\"\r\n                      fillOpacity=\"0.9\"\r\n                    />\r\n                  </svg>\r\n                  <p className=\"title\">Edit</p>\r\n                </div>\r\n                <div className=\"right\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className={\r\n                      groupName.trim() ? \"submitButton\" : \"submitButton disabled\"\r\n                    }\r\n                    disabled={groupName.trim().length === 0}\r\n                  >\r\n                    Save\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"modalBottom\">\r\n                <div className=\"form\">\r\n                  <div className=\"formGroup\">\r\n                    <label>Group name</label>\r\n                    <input\r\n                      className=\"formInput\"\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      value={groupName}\r\n                      maxLength={50}\r\n                      autoComplete=\"off\"\r\n                      required\r\n                      onChange={(e) => setGroupName(e.target.value)}\r\n                    />\r\n                  </div>\r\n\r\n                  <p className=\"errorMessage\">{error}</p>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditGroupInfo;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { reducerState } from \"../../store\";\r\nimport { IUserMessage, IUserAuth } from \"../../types\";\r\nimport \"./userMessage.scss\";\r\n\r\nconst UserMessage: FunctionComponent<IUserMessage> = ({ user, onClick }) => {\r\n  const userLogin: IUserAuth = useSelector((state: reducerState) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const following = userInfo?.following.map((user) => user._id).includes(user._id);\r\n\r\n  return (\r\n    <>\r\n      {userInfo?._id !== user?._id && (\r\n        <div className=\"userMessageCard\" onClick={() => onClick(user?._id)}>\r\n          <div className=\"left\">\r\n            <img className=\"profile\" src={user?.profilePic} alt=\"profile\" />\r\n          </div>\r\n          <div className=\"middle\">\r\n            {following && (\r\n              <div className=\"following\">\r\n                <svg\r\n                  width=\"12\"\r\n                  height=\"12\"\r\n                  viewBox=\"0 0 12 12\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    clipRule=\"evenodd\"\r\n                    d=\"M8.64697 3.64553C8.64697 5.11404 7.46953 6.29155 5.99998 6.29155C4.53093 6.29155 3.35299 5.11404 3.35299 3.64553C3.35299 2.17701 4.53093 1 5.99998 1C7.46953 1 8.64697 2.17701 8.64697 3.64553ZM6 11C3.83119 11 2 10.6475 2 9.28747C2 7.92696 3.84269 7.58696 6 7.58696C8.16931 7.58696 10 7.93946 10 9.29947C10 10.66 8.15731 11 6 11Z\"\r\n                    fill=\"white\"\r\n                    fillOpacity=\"0.4\"\r\n                  />\r\n                </svg>\r\n                <p className=\"desc\">Following</p>\r\n              </div>\r\n            )}\r\n            <div className=\"user\">\r\n              <p className=\"name\">{user?.firstName}</p>\r\n              {user?.isVerified && (\r\n                <div className=\"icon\">\r\n                  <svg\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    viewBox=\"0 0 16 16\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M8 14.6667C4.31977 14.6626 1.33737 11.6802 1.33333 7.99999V7.86666C1.40662 4.20301 4.42305 1.2853 8.08711 1.33391C11.7512 1.38253 14.6891 4.37925 14.6652 8.04355C14.6412 11.7079 11.6644 14.6659 8 14.6667ZM4.93999 7.72666L3.99999 8.66666L6.66666 11.3333L12 5.99999L11.06 5.05332L6.66666 9.44666L4.93999 7.72666Z\"\r\n                      fill=\"white\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <p className=\"bottom\">\r\n              <span>@{user?.username.substring(0, 4)} </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserMessage;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport \"./selectedUser.scss\";\r\n\r\ninterface ISelect {\r\n  user?: any;\r\n  onClick(event: any): void;\r\n}\r\n\r\nconst SelectedUser: FunctionComponent<ISelect> = ({ user, onClick }) => {\r\n  return (\r\n    <>\r\n      <div className=\"selectedUser\" onClick={() => onClick(user?._id)}>\r\n        <img src={user?.profilePic} alt={user?.firstName} className=\"left\" />\r\n\r\n        <p className=\"middle\">{user?.firstName}</p>\r\n\r\n        <svg\r\n          className=\"right\"\r\n          width=\"20\"\r\n          height=\"20\"\r\n          viewBox=\"0 0 20 20\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M14.6582 4.16669L9.99984 8.82502L5.3415 4.16669L4.1665 5.34169L8.82484 10L4.1665 14.6584L5.3415 15.8334L9.99984 11.175L14.6582 15.8334L15.8332 14.6584L11.1748 10L15.8332 5.34169L14.6582 4.16669Z\"\r\n            fill=\"#1A91DA\"\r\n            fillOpacity=\"0.9\"\r\n          />\r\n        </svg>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectedUser;\r\n","import React, {\r\n  FunctionComponent,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { updateGroupChat } from \"../../actions/chatActions\";\r\nimport { deselectUser, getUsers, selectUser } from \"../../actions/userActions\";\r\nimport { USER_SELECT_RESET } from \"../../constants/userConstants\";\r\nimport { reducerState } from \"../../store\";\r\nimport { IMessageCreate, ISelectedUser, IUsers } from \"../../types\";\r\nimport UserMessage from \"../../components/UserMessage/UserMessage\";\r\nimport SelectedUser from \"../../components/SelectedUser/SelectedUser\";\r\nimport \"./addPeople.scss\";\r\nimport { CHAT_GROUP_UPDATE_RESET } from \"../../constants/chatConstants\";\r\n\r\ninterface IModal {\r\n  showModal?: boolean;\r\n  setShowModal?: any;\r\n  chatId: string;\r\n  chatUsers: any;\r\n}\r\n\r\nconst AddPeople: FunctionComponent<IModal> = ({\r\n  showModal,\r\n  setShowModal,\r\n  chatId,\r\n  chatUsers,\r\n}) => {\r\n  const newRef = useRef<HTMLDivElement | null>(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  const usersList: IUsers = useSelector((state: reducerState) => state.usersList);\r\n  const { users } = usersList;\r\n\r\n  const userSelect: ISelectedUser = useSelector(\r\n    (state: reducerState) => state.userSelect\r\n  );\r\n  const { selectedUser } = userSelect;\r\n\r\n  const chatGroupUpdate: IMessageCreate = useSelector(\r\n    (state: reducerState) => state.chatGroupUpdate\r\n  );\r\n  const { success: chatGroupUpdateSuccess } = chatGroupUpdate;\r\n\r\n  const keyPress = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Escape\" && showModal) {\r\n        setShowModal(false);\r\n      }\r\n    },\r\n    [showModal, setShowModal]\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: USER_SELECT_RESET });\r\n    dispatch(getUsers());\r\n\r\n    if (chatGroupUpdateSuccess) {\r\n      setShowModal(false);\r\n      dispatch({ type: CHAT_GROUP_UPDATE_RESET });\r\n      history.push(`/messages/${chatId}/info`);\r\n    }\r\n\r\n    document.addEventListener(\"keydown\", keyPress);\r\n    return () => document.removeEventListener(\"keydown\", keyPress);\r\n  }, [keyPress, dispatch, setShowModal, history, chatGroupUpdateSuccess, chatId]);\r\n\r\n  const closeModal = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    if (newRef.current === event.target) {\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  const inputHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value.trim();\r\n    setUsername(value);\r\n\r\n    setTimeout(() => {\r\n      if (value) {\r\n        dispatch(getUsers(value));\r\n      }\r\n    }, 800);\r\n  };\r\n\r\n  const submitHandler = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (username.trim()) {\r\n      dispatch(getUsers(username));\r\n    }\r\n  };\r\n\r\n  const userSelected = (userId: string) => {\r\n    //Dispatch\r\n    dispatch(selectUser(userId));\r\n  };\r\n\r\n  const userDeselect = (userId: string) => {\r\n    //Dispatch\r\n    dispatch(deselectUser(userId));\r\n  };\r\n\r\n  const clickHandler = () => {\r\n    //Dispatch\r\n    if (selectedUser) {\r\n      dispatch(updateGroupChat(chatId, selectedUser));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showModal && (\r\n        <div ref={newRef} className=\"appPeople\" onClick={closeModal}>\r\n          <div className=\"modal\">\r\n            <form className=\"modalForm\" onSubmit={submitHandler}>\r\n              <div className=\"modalTop\">\r\n                <div className=\"left\">\r\n                  <svg\r\n                    onClick={() => setShowModal(!showModal)}\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41L17.59 5Z\"\r\n                      fill=\"#1A91DA\"\r\n                      fillOpacity=\"0.9\"\r\n                    />\r\n                  </svg>\r\n                  <p className=\"title\">Add people</p>\r\n                </div>\r\n                <div className=\"right\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={clickHandler}\r\n                    className={\r\n                      username.trim().length === 0 && !selectedUser?.length\r\n                        ? \"submitButton disabled\"\r\n                        : \"submitButton\"\r\n                    }\r\n                    disabled={username.trim().length === 0 && !selectedUser?.length}\r\n                  >\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"modalSearch\">\r\n                <svg\r\n                  width=\"19\"\r\n                  height=\"20\"\r\n                  viewBox=\"0 0 19 20\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    clipRule=\"evenodd\"\r\n                    d=\"M8.37413 0.666687C4.01398 0.666687 0.583496 4.40842 0.583496 8.89162C0.583496 13.3748 4.01398 17.1166 8.37413 17.1166C12.7343 17.1166 16.1648 13.3748 16.1648 8.89162C16.1648 6.72955 15.3581 4.64451 13.9045 3.09796C12.4489 1.5493 10.461 0.666687 8.37413 0.666687ZM2.5835 8.89162C2.5835 5.39438 5.23355 2.66669 8.37413 2.66669C9.88919 2.66669 11.3557 3.30647 12.4472 4.46769C13.5406 5.63101 14.1648 7.22135 14.1648 8.89162C14.1648 12.3889 11.5147 15.1166 8.37413 15.1166C5.23355 15.1166 2.5835 12.3889 2.5835 8.89162ZM15.0524 14.7119L17.0748 16.4304H17.11C17.5191 16.8657 17.5191 17.5715 17.11 18.0068C16.7008 18.4422 16.0374 18.4422 15.6282 18.0068L13.9499 15.9821C13.7912 15.8138 13.702 15.5853 13.702 15.347C13.702 15.1087 13.7912 14.8801 13.9499 14.7119C14.2559 14.392 14.7464 14.392 15.0524 14.7119Z\"\r\n                    fill=\"#1A85C7\"\r\n                  />\r\n                </svg>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search people\"\r\n                  className=\"textInput\"\r\n                  autoComplete=\"off\"\r\n                  maxLength={80}\r\n                  onChange={inputHandler}\r\n                />\r\n              </div>\r\n            </form>\r\n            {selectedUser && (\r\n              <div className=\"selectedUserCard\">\r\n                {selectedUser?.map((user) => (\r\n                  <SelectedUser key={user?._id} user={user} onClick={userDeselect} />\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"line\"></div>\r\n            <div className=\"usersWrap\">\r\n              <div>\r\n                {users?.length &&\r\n                  users.map((user, index) => (\r\n                    <UserMessage key={index} user={user} onClick={userSelected} />\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddPeople;\r\n","import React, { FunctionComponent, useCallback, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { leaveGroupChat } from \"../../actions/chatActions\";\r\nimport { CHAT_GROUP_LEAVE_RESET } from \"../../constants/chatConstants\";\r\nimport { reducerState } from \"../../store\";\r\nimport { IMessageCreate } from \"../../types\";\r\nimport \"./leaveCard.scss\";\r\n\r\ninterface IModal {\r\n  leaveModal?: boolean;\r\n  setLeaveModal?: any;\r\n  chatId: string;\r\n}\r\n\r\nconst LeaveCard: FunctionComponent<IModal> = ({ leaveModal, setLeaveModal, chatId }) => {\r\n  const newRef = useRef<HTMLDivElement | null>(null);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const chatGroupLeave: IMessageCreate = useSelector(\r\n    (state: reducerState) => state.chatGroupLeave\r\n  );\r\n  const { success } = chatGroupLeave;\r\n\r\n  const keyPress = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Escape\" && leaveModal) {\r\n        setLeaveModal(false);\r\n      }\r\n    },\r\n    [leaveModal, setLeaveModal]\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", keyPress);\r\n    return () => document.removeEventListener(\"keydown\", keyPress);\r\n  }, [keyPress]);\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      setLeaveModal(false);\r\n      dispatch({ type: CHAT_GROUP_LEAVE_RESET });\r\n      history.push(`/messages`);\r\n    }\r\n  }, [success, history, setLeaveModal, dispatch]);\r\n\r\n  const closeModal = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    if (newRef.current === event.target) {\r\n      setLeaveModal(false);\r\n    }\r\n  };\r\n\r\n  const clickHandler = () => {\r\n    //Dispatch\r\n\r\n    dispatch(leaveGroupChat(chatId));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {leaveModal && (\r\n        <div ref={newRef} className=\"leaveConversation\" onClick={closeModal}>\r\n          <div className=\"modal\">\r\n            <div className=\"title\">Leave conversation?</div>\r\n            <p className=\"desc\">\r\n              This conversation will be deleted from your inbox. Other people in the\r\n              conversation will still be able to see it.\r\n            </p>\r\n            <div className=\"buttons\">\r\n              <button className=\"cancel\" onClick={() => setLeaveModal(false)}>\r\n                Cancel\r\n              </button>\r\n              <button className=\"leave\" onClick={clickHandler}>\r\n                Leave\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeaveCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useRouteMatch, Link } from \"react-router-dom\";\r\nimport { getChatsById } from \"../../actions/chatActions\";\r\nimport { followUser } from \"../../actions/userActions\";\r\nimport { reducerState } from \"../../store\";\r\nimport { IChat, IChatGroupName, IMessageCreate, IUserAuth } from \"../../types\";\r\nimport UserCard from \"../UserCard/UserCard\";\r\nimport EditGroupInfo from \"../EditGroupInfo/EditGroupInfo\";\r\nimport AddPeople from \"../AddPeople/AddPeople\";\r\nimport LeaveCard from \"../LeaveCard/LeaveCard\";\r\nimport \"./chatInfo.scss\";\r\n\r\ninterface IParams {\r\n  id: string;\r\n}\r\n\r\nconst ChatInfo = () => {\r\n  const match = useRouteMatch<IParams>();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const chatId = match.params.id;\r\n\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [leaveModal, setLeaveModal] = useState(false);\r\n\r\n  const userLogin: IUserAuth = useSelector((state: reducerState) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const chatDetails: IChat = useSelector((state: reducerState) => state.chatDetails);\r\n  const { chat } = chatDetails;\r\n\r\n  const chatGroupName: IChatGroupName = useSelector(\r\n    (state: reducerState) => state.chatGroupName\r\n  );\r\n  const { success } = chatGroupName;\r\n\r\n  const chatGroupUpdate: IMessageCreate = useSelector(\r\n    (state: reducerState) => state.chatGroupUpdate\r\n  );\r\n  const { success: chatGroupUpdateSuccess } = chatGroupUpdate;\r\n\r\n  const users = chat?.users.filter((user) => user._id !== userInfo?._id);\r\n  const allUsers = chat?.users.map((user) => user);\r\n  const userIds = users?.map((user) => user._id);\r\n  const images = allUsers?.map((user) => user.profilePic);\r\n  const username = users?.map((user) => user.username);\r\n\r\n  useEffect(() => {\r\n    dispatch(getChatsById(chatId));\r\n  }, [dispatch, chatId, success, chatGroupUpdateSuccess]);\r\n\r\n  function getOtherChatUsers(users: any) {\r\n    if (users?.length === 1) return users;\r\n\r\n    return users?.filter((user: any) => user._id !== userInfo?._id);\r\n  }\r\n\r\n  function getChatName(chat: any) {\r\n    let chatName = chat?.chatName;\r\n    if (!chatName) {\r\n      const otherChatUsers = getOtherChatUsers(chat?.users!);\r\n      const nameArray = otherChatUsers?.map(\r\n        (user: any) => user?.firstName + \" \" + user?.lastName\r\n      );\r\n      chatName = nameArray.join(\", \");\r\n    }\r\n\r\n    return chatName;\r\n  }\r\n\r\n  const followHandler = (userId: string) => {\r\n    if (userInfo) {\r\n      dispatch(followUser(userId, userInfo?._id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chatInfo\">\r\n        <div className=\"chatInfoCtn\">\r\n          <div className=\"chatInfoTop\">\r\n            <svg\r\n              onClick={() => history.push(`/messages/${chatId}`)}\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M7.83 11L11.41 7.41L10 6L4 12L10 18L11.41 16.59L7.83 13H20V11H7.83Z\"\r\n                fill=\"#1A91DA\"\r\n              />\r\n            </svg>\r\n            <p className=\"title\">\r\n              {chat?.isGroupChat ? \"Group info\" : \"Conversation info\"}\r\n            </p>\r\n          </div>\r\n          <div className=\"chatInfoName\">\r\n            {chat && chat.isGroupChat ? (\r\n              <>\r\n                <div className=\"left\">\r\n                  {images && images.length > 1 ? (\r\n                    images.slice(0, 3).map((image: any, index: number) => (\r\n                      <Link\r\n                        to={`/messages/${chat?._id}/participants`}\r\n                        key={index}\r\n                        className=\"linkCtn\"\r\n                      >\r\n                        <img src={image} alt=\"profile\" className=\"groupChat\" />\r\n                      </Link>\r\n                    ))\r\n                  ) : (\r\n                    <Link to={`/profile/${userIds}`}>\r\n                      <img className=\"profile\" src={images![0]} alt=\"profile\" />\r\n                    </Link>\r\n                  )}\r\n                </div>\r\n                {images && images?.length > 3 && (\r\n                  <div className=\"number\">\r\n                    <p className=\"rest\">+{images.length - 3}</p>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"middle\">\r\n                  <p className=\"top\">\r\n                    <span>{getChatName(chat).substring(0, 26)}</span>\r\n                    {getChatName(chat).length > 26 && <span>...</span>}\r\n                  </p>\r\n                </div>\r\n                <p className=\"right\" onClick={() => setShowEditModal(!showEditModal)}>\r\n                  Edit\r\n                </p>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div className=\"left\">\r\n                  <Link to={`/profile/${userIds}`}>\r\n                    <img className=\"profile\" src={images![0]} alt=\"profile\" />\r\n                  </Link>\r\n                </div>\r\n\r\n                <Link to={`/profile/${userIds}`} className=\"middle single\">\r\n                  <p className=\"top\">\r\n                    <span>{getChatName(chat).substring(0, 26)}</span>\r\n                    {getChatName(chat).length > 26 && <span>...</span>}\r\n                  </p>\r\n                  <p className=\"bottom\">@{username}</p>\r\n                </Link>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"bar\"></div>\r\n          {chat?.isGroupChat && (\r\n            <>\r\n              <div className=\"peoplesInfo\">\r\n                <p className=\"title\">People</p>\r\n                <div className=\"peoples\">\r\n                  {users?.map((user) => (\r\n                    <UserCard key={user._id} follow={user} onClick={followHandler} />\r\n                  ))}\r\n                </div>\r\n                <div className=\"addPeople\" onClick={() => setShowModal(!showModal)}>\r\n                  <p className=\"button\">Add people</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"bar\"></div>\r\n            </>\r\n          )}\r\n          <div className=\"leave\" onClick={() => setLeaveModal(!leaveModal)}>\r\n            <p>Leave conversation</p>\r\n          </div>\r\n        </div>\r\n        <LeaveCard\r\n          chatId={chatId}\r\n          leaveModal={leaveModal}\r\n          setLeaveModal={setLeaveModal}\r\n        />\r\n        <AddPeople\r\n          chatId={chatId}\r\n          chatUsers={users}\r\n          showModal={showModal}\r\n          setShowModal={setShowModal}\r\n        />\r\n        {chat && (\r\n          <EditGroupInfo\r\n            chat={chat}\r\n            name={getChatName(chat)}\r\n            showModal={showEditModal}\r\n            setShowModal={setShowEditModal}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatInfo;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { getChatsById } from \"../../actions/chatActions\";\r\nimport { followUser } from \"../../actions/userActions\";\r\nimport { reducerState } from \"../../store\";\r\nimport { IChat, IUserAuth } from \"../../types\";\r\nimport UserCard from \"../UserCard/UserCard\";\r\nimport \"./participant.scss\";\r\n\r\ninterface IParams {\r\n  id: string;\r\n}\r\n\r\nconst Participant = () => {\r\n  const match = useRouteMatch<IParams>();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const chatId = match.params.id;\r\n\r\n  const userLogin: IUserAuth = useSelector((state: reducerState) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const chatDetails: IChat = useSelector((state: reducerState) => state.chatDetails);\r\n  const { chat } = chatDetails;\r\n\r\n  //const users = chat?.users.filter((user) => user._id !== userInfo?._id);\r\n\r\n  useEffect(() => {\r\n    dispatch(getChatsById(chatId));\r\n  }, [dispatch, chatId]);\r\n\r\n  const followHandler = (userId: string) => {\r\n    if (userInfo) {\r\n      dispatch(followUser(userId, userInfo?._id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"participant\">\r\n        <div className=\"participantCtn\">\r\n          <div className=\"participantTop\">\r\n            <svg\r\n              onClick={() => history.push(`/messages/${chatId}`)}\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M7.83 11L11.41 7.41L10 6L4 12L10 18L11.41 16.59L7.83 13H20V11H7.83Z\"\r\n                fill=\"#1A91DA\"\r\n              />\r\n            </svg>\r\n            <p className=\"title\">People</p>\r\n          </div>\r\n          <div className=\"participantBottom\">\r\n            {chat &&\r\n              chat.users?.map((user) => (\r\n                <UserCard key={user._id} follow={user} onClick={followHandler} />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Participant;\r\n","import React, {\r\n  FunctionComponent,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deselectUser, getUsers, selectUser } from \"../../actions/userActions\";\r\nimport { reducerState } from \"../../store\";\r\nimport { IChat, ISelectedUser, IUsers } from \"../../types\";\r\nimport UserMessage from \"../../components/UserMessage/UserMessage\";\r\nimport SelectedUser from \"../../components/SelectedUser/SelectedUser\";\r\nimport \"./newMessage.scss\";\r\nimport { USER_SELECT_RESET } from \"../../constants/userConstants\";\r\nimport { createGroupChat } from \"../../actions/chatActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface IModal {\r\n  showModal?: boolean;\r\n  setShowModal?: any;\r\n}\r\n\r\nconst NewMessage: FunctionComponent<IModal> = ({ showModal, setShowModal }) => {\r\n  const newRef = useRef<HTMLDivElement | null>(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  const usersList: IUsers = useSelector((state: reducerState) => state.usersList);\r\n  const { users } = usersList;\r\n\r\n  const userSelect: ISelectedUser = useSelector(\r\n    (state: reducerState) => state.userSelect\r\n  );\r\n  const { selectedUser } = userSelect;\r\n\r\n  const chatCreate: IChat = useSelector((state: reducerState) => state.chatCreate);\r\n  const { success, chat } = chatCreate;\r\n\r\n  const keyPress = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Escape\" && showModal) {\r\n        setShowModal(false);\r\n      }\r\n    },\r\n    [showModal, setShowModal]\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: USER_SELECT_RESET });\r\n    dispatch(getUsers());\r\n\r\n    if (success) {\r\n      setShowModal(false);\r\n      history.push(`/messages/${chat?._id}`);\r\n    }\r\n\r\n    document.addEventListener(\"keydown\", keyPress);\r\n    return () => document.removeEventListener(\"keydown\", keyPress);\r\n  }, [keyPress, dispatch, success, setShowModal, history, chat]);\r\n\r\n  const closeModal = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    if (newRef.current === event.target) {\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  const inputHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value.trim();\r\n    setUsername(value);\r\n\r\n    setTimeout(() => {\r\n      if (value) {\r\n        dispatch(getUsers(value));\r\n      }\r\n    }, 800);\r\n  };\r\n\r\n  const submitHandler = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (username.trim()) {\r\n      dispatch(getUsers(username));\r\n    }\r\n  };\r\n\r\n  const userSelected = (userId: string) => {\r\n    //Dispatch\r\n    dispatch(selectUser(userId));\r\n  };\r\n\r\n  const userDeselect = (userId: string) => {\r\n    //Dispatch\r\n    dispatch(deselectUser(userId));\r\n  };\r\n\r\n  const clickHandler = () => {\r\n    //Dispatch\r\n    if (selectedUser) {\r\n      dispatch(createGroupChat(selectedUser));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showModal && (\r\n        <div ref={newRef} className=\"newMessageBg\" onClick={closeModal}>\r\n          <div className=\"modal\">\r\n            <form className=\"modalForm\" onSubmit={submitHandler}>\r\n              <div className=\"modalTop\">\r\n                <div className=\"left\">\r\n                  <svg\r\n                    onClick={() => setShowModal(!showModal)}\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41L17.59 5Z\"\r\n                      fill=\"#1A91DA\"\r\n                      fillOpacity=\"0.9\"\r\n                    />\r\n                  </svg>\r\n                  <p className=\"title\">New message</p>\r\n                </div>\r\n                <div className=\"right\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={clickHandler}\r\n                    className={\r\n                      username.trim().length === 0 && !selectedUser?.length\r\n                        ? \"submitButton disabled\"\r\n                        : \"submitButton\"\r\n                    }\r\n                    disabled={username.trim().length === 0 && !selectedUser?.length}\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"modalSearch\">\r\n                <svg\r\n                  width=\"19\"\r\n                  height=\"20\"\r\n                  viewBox=\"0 0 19 20\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    clipRule=\"evenodd\"\r\n                    d=\"M8.37413 0.666687C4.01398 0.666687 0.583496 4.40842 0.583496 8.89162C0.583496 13.3748 4.01398 17.1166 8.37413 17.1166C12.7343 17.1166 16.1648 13.3748 16.1648 8.89162C16.1648 6.72955 15.3581 4.64451 13.9045 3.09796C12.4489 1.5493 10.461 0.666687 8.37413 0.666687ZM2.5835 8.89162C2.5835 5.39438 5.23355 2.66669 8.37413 2.66669C9.88919 2.66669 11.3557 3.30647 12.4472 4.46769C13.5406 5.63101 14.1648 7.22135 14.1648 8.89162C14.1648 12.3889 11.5147 15.1166 8.37413 15.1166C5.23355 15.1166 2.5835 12.3889 2.5835 8.89162ZM15.0524 14.7119L17.0748 16.4304H17.11C17.5191 16.8657 17.5191 17.5715 17.11 18.0068C16.7008 18.4422 16.0374 18.4422 15.6282 18.0068L13.9499 15.9821C13.7912 15.8138 13.702 15.5853 13.702 15.347C13.702 15.1087 13.7912 14.8801 13.9499 14.7119C14.2559 14.392 14.7464 14.392 15.0524 14.7119Z\"\r\n                    fill=\"#1A85C7\"\r\n                  />\r\n                </svg>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search people\"\r\n                  className=\"textInput\"\r\n                  autoComplete=\"off\"\r\n                  maxLength={80}\r\n                  onChange={inputHandler}\r\n                />\r\n              </div>\r\n            </form>\r\n            {selectedUser && (\r\n              <div className=\"selectedUserCard\">\r\n                {selectedUser?.map((user) => (\r\n                  <SelectedUser key={user?._id} user={user} onClick={userDeselect} />\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"line\"></div>\r\n            <div className=\"usersWrap\">\r\n              <div>\r\n                {users?.length &&\r\n                  users.map((user, index) => (\r\n                    <UserMessage key={index} user={user} onClick={userSelected} />\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewMessage;\r\n","import React, { useState } from \"react\";\r\nimport NewMessage from \"../NewMessage/NewMessage\";\r\nimport \"./emptyMessage.scss\";\r\n\r\nconst EmptyMessage = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"emptyMessage\">\r\n        <div className=\"emptyMessageCtn\">\r\n          <p className=\"top\">You don’t have a message selected</p>\r\n          <p className=\"middle\">\r\n            Choose one from your existing messages, or start a new one.\r\n          </p>\r\n          <button className=\"bottom\" onClick={() => setShowModal(!showModal)}>\r\n            New message\r\n          </button>\r\n        </div>\r\n        <NewMessage showModal={showModal} setShowModal={setShowModal} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmptyMessage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useRouteMatch } from \"react-router\";\r\nimport { listAllPosts } from \"../../actions/postActions\";\r\nimport { followUser, getUsers } from \"../../actions/userActions\";\r\nimport PostCard from \"../../components/PostCard/PostCard\";\r\nimport UserCard from \"../../components/UserCard/UserCard\";\r\nimport { POST_LIST_RESET } from \"../../constants/postConstants\";\r\nimport { reducerState } from \"../../store\";\r\nimport { IPosts, IUserAuth, IUsers } from \"../../types\";\r\nimport \"./searchScreen.scss\";\r\n\r\ninterface IParams {\r\n  posts: string;\r\n  keyword: string;\r\n}\r\n\r\nconst SearchScreen = () => {\r\n  const history = useHistory();\r\n  const match = useRouteMatch<IParams>();\r\n  const dispatch = useDispatch();\r\n\r\n  const [toggleTab, setToggleTab] = useState(1);\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const userLogin: IUserAuth = useSelector((state: reducerState) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const postList: IPosts = useSelector((state: reducerState) => state.postList);\r\n  const { posts } = postList;\r\n\r\n  const usersList: IUsers = useSelector((state: reducerState) => state.usersList);\r\n  const { users } = usersList;\r\n\r\n  const route = match.params.posts;\r\n  const pathname = history.location.pathname;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    dispatch({ type: POST_LIST_RESET });\r\n    if (match.params.keyword) {\r\n      setKeyword(match.params.keyword);\r\n      dispatch(listAllPosts(match.params.keyword));\r\n    }\r\n\r\n    if (route === \"posts\") {\r\n      setToggleTab(1);\r\n    } else {\r\n      setToggleTab(2);\r\n    }\r\n  }, [dispatch, userInfo, history, route, match]);\r\n\r\n  const followHandler = (userId: string) => {\r\n    if (userInfo) {\r\n      dispatch(followUser(userId, userInfo?._id));\r\n    }\r\n  };\r\n\r\n  const inputHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value.trim();\r\n    setKeyword(value);\r\n\r\n    setTimeout(() => {\r\n      if (value) {\r\n        if (pathname === \"/search/posts\") {\r\n          dispatch(listAllPosts(value));\r\n        } else {\r\n          dispatch(getUsers(value));\r\n        }\r\n      }\r\n    }, 800);\r\n  };\r\n\r\n  const submitHandler = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (keyword.trim()) {\r\n      if (pathname === \"/search/posts\") {\r\n        dispatch(listAllPosts(keyword));\r\n      } else {\r\n        dispatch(getUsers(keyword));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"searchScreen\">\r\n        <div className=\"searchContainer\">\r\n          <div className=\"searchTop\">\r\n            <form className=\"searchForm\" onSubmit={submitHandler}>\r\n              <div className=\"searchWrap\">\r\n                <svg\r\n                  width=\"19\"\r\n                  height=\"20\"\r\n                  viewBox=\"0 0 19 20\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    clipRule=\"evenodd\"\r\n                    d=\"M8.37398 0.666687C4.01383 0.666687 0.583344 4.40842 0.583344 8.89162C0.583344 13.3748 4.01383 17.1166 8.37398 17.1166C12.7341 17.1166 16.1646 13.3748 16.1646 8.89162C16.1646 6.72955 15.3579 4.64451 13.9043 3.09796C12.4488 1.5493 10.4609 0.666687 8.37398 0.666687ZM2.58334 8.89162C2.58334 5.39438 5.2334 2.66669 8.37398 2.66669C9.88904 2.66669 11.3556 3.30647 12.447 4.46769C13.5404 5.63101 14.1646 7.22135 14.1646 8.89162C14.1646 12.3889 11.5146 15.1166 8.37398 15.1166C5.2334 15.1166 2.58334 12.3889 2.58334 8.89162ZM15.0522 14.7119L17.0747 16.4304H17.1098C17.519 16.8657 17.519 17.5715 17.1098 18.0068C16.7006 18.4422 16.0372 18.4422 15.6281 18.0068L13.9497 15.9821C13.7911 15.8138 13.7019 15.5853 13.7019 15.347C13.7019 15.1087 13.7911 14.8801 13.9497 14.7119C14.2557 14.392 14.7462 14.392 15.0522 14.7119Z\"\r\n                    fill=\"white\"\r\n                    fillOpacity=\"0.3\"\r\n                  />\r\n                </svg>\r\n                <input\r\n                  className=\"inputForm\"\r\n                  type=\"text\"\r\n                  name=\"q\"\r\n                  placeholder=\"Search Twitter\"\r\n                  autoComplete=\"off\"\r\n                  maxLength={80}\r\n                  onChange={inputHandler}\r\n                />\r\n              </div>\r\n            </form>\r\n            <div className=\"blockTabs\">\r\n              <div\r\n                className={toggleTab === 1 ? \"tabLeft active\" : \"tabLeft\"}\r\n                onClick={() => history.replace(`/search/posts`)}\r\n              >\r\n                <p>Tweets</p>\r\n              </div>\r\n              <div\r\n                className={toggleTab === 2 ? \"tabRight active\" : \"tabRight\"}\r\n                onClick={() => history.replace(`/search/users`)}\r\n              >\r\n                <p>Users</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"tabsContent\">\r\n            <div className={toggleTab === 1 ? \"content active\" : \"content\"}>\r\n              {posts?.map((post) => (\r\n                <PostCard\r\n                  key={post._id}\r\n                  post={post}\r\n                  liked={\r\n                    post.likes.includes(userInfo?._id!) ||\r\n                    post.retweetData?.likes.includes(userInfo?._id!)\r\n                  }\r\n                  retweeted={\r\n                    post.retweetUsers.includes(userInfo?._id!) ||\r\n                    post.retweetData?.retweetUsers.includes(userInfo?._id!)\r\n                  }\r\n                />\r\n              ))}\r\n            </div>\r\n            <div className={toggleTab === 2 ? \"content active\" : \"content\"}>\r\n              {users?.map((user) => (\r\n                <UserCard key={user._id} follow={user} onClick={followHandler} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchScreen;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { reducerState } from \"../../store\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { postDate } from \"../../timeFunction\";\r\nimport { IChat, IUserAuth } from \"../../types\";\r\nimport \"./chatCard.scss\";\r\n\r\nconst ChatCard: FunctionComponent<IChat> = ({ chat }) => {\r\n  const userLogin: IUserAuth = useSelector((state: reducerState) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  let active;\r\n  if (chat && chat.latestMessage && userInfo) {\r\n    active = !chat.latestMessage.readBy.includes(userInfo._id);\r\n  }\r\n\r\n  function getChatName(chat: any) {\r\n    let chatName = chat?.chatName;\r\n    if (!chatName) {\r\n      const otherChatUsers = getOtherChatUsers(chat?.users!);\r\n      const nameArray = otherChatUsers.map(\r\n        (user: any) => user.firstName + \" \" + user.lastName\r\n      );\r\n      chatName = nameArray.join(\", \");\r\n    }\r\n\r\n    return chatName;\r\n  }\r\n\r\n  function getOtherChatUsers(users: any) {\r\n    if (users.length === 1) return users;\r\n\r\n    return users.filter((user: any) => user._id !== userInfo?._id);\r\n  }\r\n\r\n  function getChatImageElements(chat: any) {\r\n    const otherChatUsers = getOtherChatUsers(chat?.users!);\r\n    const usersImage = otherChatUsers.map((user: any) => user.profilePic);\r\n    return usersImage;\r\n  }\r\n\r\n  function getChatUserId(chat: any) {\r\n    const otherChatUsers = getOtherChatUsers(chat?.users!);\r\n    const usersId = otherChatUsers.map((user: any) => user._id);\r\n    return usersId;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {chat && (\r\n        <div className={active ? \"chatCard active\" : \"chatCard\"}>\r\n          <div className=\"left\">\r\n            {getChatImageElements(chat).length > 1 ? (\r\n              getChatImageElements(chat)\r\n                .slice(0, 2)\r\n                .map((image: any, index: number) => (\r\n                  <Link\r\n                    to={`/messages/${chat?._id}/participants`}\r\n                    key={index}\r\n                    className=\"linkCtn\"\r\n                  >\r\n                    <img src={image} alt=\"profile\" className=\"groupChat\" />\r\n                  </Link>\r\n                ))\r\n            ) : (\r\n              <Link to={`/profile/${getChatUserId(chat)}`}>\r\n                <img className=\"profile\" src={getChatImageElements(chat)} alt=\"profile\" />\r\n              </Link>\r\n            )}\r\n          </div>\r\n          <Link to={`/messages/${chat?._id}`} className=\"middle\">\r\n            <p className=\"chatName\">\r\n              <span>{getChatName(chat).substring(0, 26)}</span>\r\n              {getChatName(chat).length > 26 && <span>...</span>}\r\n            </p>\r\n            {chat.latestMessage && (\r\n              <p className=\"lastMessage\">\r\n                {chat.latestMessage.sender.firstName}:{\" \"}\r\n                {chat.latestMessage.content.substring(0, 22)}\r\n                {chat.latestMessage.content.length > 22 && \"...\"}\r\n              </p>\r\n            )}\r\n          </Link>\r\n          <Link to={`/messages/${chat?._id}`} className=\"right\">\r\n            <p className=\"date\">\r\n              {chat?.createdAt && postDate(new Date(chat?.updatedAt))}\r\n            </p>\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatCard;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { reducerState } from \"../../store\";\r\nimport { IChat, IChatGroupName, IChats, IMessageCreate, IUserAuth } from \"../../types\";\r\nimport NewMessage from \"../../components/NewMessage/NewMessage\";\r\nimport ChatCard from \"../../components/ChatCard/ChatCard\";\r\nimport \"./messagesScreen.scss\";\r\nimport { getChats } from \"../../actions/chatActions\";\r\n\r\nconst MessagesScreen = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const ref = useRef<HTMLDivElement | null>(null);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const userLogin: IUserAuth = useSelector((state: reducerState) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const chatList: IChats = useSelector((state: reducerState) => state.chatList);\r\n  const { chats } = chatList;\r\n\r\n  const chatCreate: IChat = useSelector((state: reducerState) => state.chatCreate);\r\n  const { success } = chatCreate;\r\n\r\n  const chatGroupName: IChatGroupName = useSelector(\r\n    (state: reducerState) => state.chatGroupName\r\n  );\r\n  const { success: chatNameSuccess } = chatGroupName;\r\n\r\n  const messageCreate: IMessageCreate = useSelector(\r\n    (state: reducerState) => state.messageCreate\r\n  );\r\n  const { success: createChatSuccess } = messageCreate;\r\n\r\n  const chatGroupLeave: IMessageCreate = useSelector(\r\n    (state: reducerState) => state.chatGroupLeave\r\n  );\r\n  const { success: leaveGroupSuccess } = chatGroupLeave;\r\n\r\n  const chatGroupUpdate: IMessageCreate = useSelector(\r\n    (state: reducerState) => state.chatGroupUpdate\r\n  );\r\n  const { success: chatGroupUpdateSuccess } = chatGroupUpdate;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    dispatch(getChats());\r\n  }, [\r\n    userInfo,\r\n    history,\r\n    dispatch,\r\n    success,\r\n    chatNameSuccess,\r\n    createChatSuccess,\r\n    leaveGroupSuccess,\r\n    chatGroupUpdateSuccess,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"messagesScreen\">\r\n        <div className=\"messagesContainer\">\r\n          <div className=\"messageTop\">\r\n            <p className=\"title\">Messages</p>\r\n            <svg\r\n              onClick={() => setShowModal(!showModal)}\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M19 10H17V7H14V5H17V2H19V5H22V7H19V10Z\"\r\n                fill=\"white\"\r\n                fillOpacity=\"0.9\"\r\n              />\r\n              <path\r\n                d=\"M21 12H19V15H8.334C7.90107 14.9988 7.47964 15.1393 7.134 15.4L5 17V5H12V3H5C3.89543 3 3 3.89543 3 5V21L7.8 17.4C8.14582 17.1396 8.56713 16.9992 9 17H19C20.1046 17 21 16.1046 21 15V12Z\"\r\n                fill=\"white\"\r\n                fillOpacity=\"0.9\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <div ref={ref} className=\"messageBottom\">\r\n            {chats?.map((chat) => (\r\n              <ChatCard key={chat._id} chat={chat} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <NewMessage showModal={showModal} setShowModal={setShowModal} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MessagesScreen;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { INotification } from \"../../types\";\r\nimport \"./notificationCard.scss\";\r\n\r\nconst NotificationCard: FunctionComponent<INotification> = ({\r\n  notification,\r\n  onClick,\r\n}) => {\r\n  const notificationType = (type: string) => {\r\n    if (type === \"follow\") {\r\n      return \"followed you\";\r\n    } else if (type === \"reply\") {\r\n      return \"replied to your tweet\";\r\n    } else if (type === \"retweet\") {\r\n      return \"retweeted your tweet\";\r\n    } else if (type === \"tweetLike\") {\r\n      return \"liked your tweet\";\r\n    }\r\n  };\r\n\r\n  const linkTo = (data: any) => {\r\n    if (data.notificationType === \"follow\") {\r\n      return `/profile/${data.entityId}`;\r\n    } else if (\r\n      data.notificationType === \"reply\" ||\r\n      data.notificationType === \"retweet\" ||\r\n      data.notificationType === \"tweetLike\"\r\n    ) {\r\n      return `/posts/${data.entityId}`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link\r\n        to={`${linkTo(notification)}`}\r\n        className={notification.opened ? \"notificationCard opened\" : \"notificationCard\"}\r\n        onClick={() => onClick(notification._id)}\r\n      >\r\n        <img className=\"profile\" src={notification.userFrom.profilePic} alt=\"profile\" />\r\n\r\n        <p className=\"text\">\r\n          {notification.userFrom.firstName} {notification.userFrom.lastName}{\" \"}\r\n          {notificationType(notification.notificationType)}\r\n        </p>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotificationCard;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getNotifications,\r\n  openAllNotifications,\r\n  openNotification,\r\n} from \"../../actions/notificationActions\";\r\nimport { reducerState } from \"../../store\";\r\nimport { INotifications, IReadNotification } from \"../../types\";\r\nimport NotificationCard from \"../../components/NotificationCard/NotificationCard\";\r\nimport \"./notificationScreen.scss\";\r\n\r\nconst NotificationScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const notificationOpen: IReadNotification = useSelector(\r\n    (state: reducerState) => state.notificationOpen\r\n  );\r\n  const { success } = notificationOpen;\r\n\r\n  const notificationOpenAll: IReadNotification = useSelector(\r\n    (state: reducerState) => state.notificationOpenAll\r\n  );\r\n  const { success: openAllSuccess } = notificationOpenAll;\r\n\r\n  const notificationList: INotifications = useSelector(\r\n    (state: reducerState) => state.notificationList\r\n  );\r\n  const { notifications, loading } = notificationList;\r\n\r\n  useEffect(() => {\r\n    dispatch(getNotifications());\r\n  }, [dispatch, success, openAllSuccess]);\r\n\r\n  const clickHandler = (notificationId: string) => {\r\n    if (notificationId) {\r\n      dispatch(openNotification(notificationId));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"notificationScreen\">\r\n        {loading ? (\r\n          <div className=\"loading\">\r\n            <i\r\n              className=\"fas fa-spinner fa-spin fa-2x\"\r\n              style={{ color: \"rgba(0, 238, 255, 0.9)\" }}\r\n            ></i>\r\n          </div>\r\n        ) : (\r\n          <div className=\"notificationCtn\">\r\n            <div className=\"notificationTop\">\r\n              <div className=\"title\">Notifications</div>\r\n              <div className=\"icon\" onClick={() => dispatch(openAllNotifications())}>\r\n                <svg\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M0.33252 13.0651L5.98779 18.7204L7.39779 17.3004L1.7475 11.6501L0.33252 13.0651ZM22.247 5.28112L11.6478 15.8904L7.41094 11.6435L5.98094 13.0535L11.6478 18.7204L23.667 6.70112L22.247 5.28112ZM18.0086 6.69954L16.5986 5.27954L10.2278 11.6504L11.6478 13.0604L18.0086 6.69954Z\"\r\n                    fill=\"#1A85C7\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            <div className=\"notificationBottom\">\r\n              {notifications &&\r\n                notifications.map((notification) => (\r\n                  <NotificationCard\r\n                    key={notification._id}\r\n                    notification={notification}\r\n                    onClick={clickHandler}\r\n                  />\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotificationScreen;\r\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport HomeScreen from \"./screens/HomeScreen/HomeScreen\";\nimport LoginScreen from \"./screens/LoginScreen/LoginScreen\";\nimport SignupScreen from \"./screens/SignupScreen/SignupScreen\";\nimport \"./app.scss\";\nimport PostScreen from \"./screens/PostScreen/PostScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen/ProfileScreen\";\nimport LoadingScreen from \"./screens/LoadingScreen/LoadingScreen\";\nimport FollowsScreen from \"./screens/FollowsScreen/FollowsScreen\";\nimport RightBar from \"./components/RightBar/RightBar\";\nimport Message from \"./components/Message/Message\";\nimport ChatInfo from \"./components/ChatInfo/ChatInfo\";\nimport Participant from \"./components/Participant/Participant\";\nimport EmptyMessage from \"./components/EmptyMessage/EmptyMessage\";\n//import NotificationBadge from \"./components/NotificationBadge/NotificationBadge\";\nimport SearchScreen from \"./screens/SearchScreen/SearchScreen\";\nimport MessagesScreen from \"./screens/MessagesScreen/MessagesScreen\";\nimport NotificationScreen from \"./screens/NotificationScreen/NotificationScreen\";\n\nfunction App() {\n  const [dimensions, setDimensions] = useState({\n    width: window.innerWidth,\n  });\n\n  useEffect(() => {\n    function handleResize() {\n      setDimensions({\n        width: window.innerWidth,\n      });\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  return (\n    <>\n      {dimensions.width <= 988 ? (\n        <>\n          <Router>\n            <Switch>\n              <Route path=\"/login\" exact>\n                <LoginScreen />\n              </Route>\n\n              <Route path=\"/signup\" exact>\n                <SignupScreen />\n              </Route>\n\n              <Route path=\"/messages/:id/info\" exact>\n                <div className=\"app\">\n                  {dimensions.width >= 499 && <Sidebar />}\n                  <ChatInfo />\n                </div>\n              </Route>\n\n              <Route path=\"/messages/:id/participants\" exact>\n                <div className=\"app\">\n                  {dimensions.width >= 499 && <Sidebar />}\n                  <Participant />\n                </div>\n              </Route>\n\n              <Route path=\"/messages/:id\" exact>\n                <div className=\"app\">\n                  {dimensions.width >= 499 && <Sidebar />}\n                  <Message />\n                </div>\n              </Route>\n\n              <Route path=\"/messages\" exact>\n                <div className=\"app\">\n                  <Sidebar />\n                  <MessagesScreen />\n                </div>\n              </Route>\n\n              <Route path=\"/notifications\" exact>\n                <div className=\"app\">\n                  <Sidebar />\n                  <NotificationScreen />\n                  <RightBar />\n                </div>\n              </Route>\n\n              <Route path=\"/posts/:id\" exact>\n                <div className=\"app\">\n                  <Sidebar />\n                  <PostScreen />\n                  <RightBar />\n                </div>\n              </Route>\n\n              <Route path=\"/search/:keyword?/:posts\" exact>\n                <div className=\"app\">\n                  <Sidebar />\n                  <SearchScreen />\n                  <RightBar />\n                </div>\n              </Route>\n\n              <Route path=\"/profile/:id/:follows\" exact>\n                <div className=\"app\">\n                  <Sidebar />\n                  <FollowsScreen />\n                  <RightBar />\n                </div>\n              </Route>\n\n              <Route path=\"/profile/:id\" exact>\n                <div className=\"app\">\n                  <Sidebar />\n                  <ProfileScreen />\n                  <RightBar />\n                </div>\n              </Route>\n\n              <Route path=\"/home\" exact>\n                <div className=\"app\">\n                  <Sidebar />\n                  <HomeScreen />\n                  <RightBar />\n                </div>\n              </Route>\n\n              <Route path=\"/\" exact>\n                <div className=\"app\">\n                  <LoadingScreen />\n                </div>\n              </Route>\n            </Switch>\n          </Router>\n        </>\n      ) : (\n        <>\n          <Router>\n            <Switch>\n              <Route path=\"/login\" exact>\n                <LoginScreen />\n              </Route>\n\n              <Route path=\"/signup\" exact>\n                <SignupScreen />\n              </Route>\n\n              <Route path=\"/messages/:id/info\" exact>\n                <div className=\"app\">\n                  <Sidebar />\n                  <MessagesScreen />\n                  {/* <NotificationBadge /> */}\n                  <ChatInfo />\n                </div>\n              </Route>\n\n              <Route path=\"/messages/:id/participants\" exact>\n                <div className=\"app\">\n                  <Sidebar />\n                  <MessagesScreen />\n                  {/* <NotificationBadge /> */}\n                  <Participant />\n                </div>\n              </Route>\n\n              <Route path=\"/messages/:id\" exact>\n                <div className=\"app\">\n                  <Sidebar />\n                  <MessagesScreen />\n                  {/* <NotificationBadge /> */}\n                  <Message />\n                </div>\n              </Route>\n\n              <Route path=\"/messages\" exact>\n                <div className=\"app\">\n                  <Sidebar />\n                  <MessagesScreen />\n                  {/* <NotificationBadge /> */}\n                  <EmptyMessage />\n                </div>\n              </Route>\n\n              <Route path=\"/notifications\" exact>\n                <div className=\"app\">\n                  <Sidebar />\n                  <NotificationScreen />\n                  {/* <NotificationBadge /> */}\n                  <RightBar />\n                </div>\n              </Route>\n\n              <Route path=\"/posts/:id\" exact>\n                <div className=\"app\">\n                  <Sidebar />\n                  <PostScreen />\n                  {/* <NotificationBadge /> */}\n                  <RightBar />\n                </div>\n              </Route>\n\n              <Route path=\"/search/:keyword?/:posts\" exact>\n                <div className=\"app\">\n                  <Sidebar />\n                  <SearchScreen />\n                  {/* <NotificationBadge /> */}\n                  <RightBar />\n                </div>\n              </Route>\n\n              <Route path=\"/profile/:id/:follows\" exact>\n                <div className=\"app\">\n                  <Sidebar />\n                  <FollowsScreen />\n                  {/* <NotificationBadge /> */}\n                  <RightBar />\n                </div>\n              </Route>\n\n              <Route path=\"/profile/:id\" exact>\n                <div className=\"app\">\n                  <Sidebar />\n                  <ProfileScreen />\n                  {/* <NotificationBadge /> */}\n                  <RightBar />\n                </div>\n              </Route>\n\n              <Route path=\"/home\" exact>\n                <div className=\"app\">\n                  <Sidebar />\n                  <HomeScreen />\n                  {/* <NotificationBadge /> */}\n                  <RightBar />\n                </div>\n              </Route>\n\n              <Route path=\"/\" exact>\n                <div className=\"app\">\n                  <LoadingScreen />\n                </div>\n              </Route>\n            </Switch>\n          </Router>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  selectUserReducer,\r\n  userDetailsReducer,\r\n  userFollowReducer,\r\n  userLoginReducer,\r\n  userProfileUpdateReducer,\r\n  userRegisterReducer,\r\n  usersListReducer,\r\n} from \"./reducers/userReducers\";\r\nimport {\r\n  postLikeReducer,\r\n  postCreateReducer,\r\n  postListReducer,\r\n  postRetweetReducer,\r\n  postReplyReducer,\r\n  postDetailsReducer,\r\n  postDeleteReducer,\r\n  postsUserReducer,\r\n  postPinReducer,\r\n} from \"./reducers/postReducers\";\r\nimport {\r\n  chatCreateReducer,\r\n  chatDetailsReducer,\r\n  chatGroupeLeaveReducer,\r\n  chatGroupeNameUpdateReducer,\r\n  chatGroupeUpdateReducer,\r\n  chatListReducer,\r\n  markAllMessagesReadReducer,\r\n} from \"./reducers/chatReducers\";\r\nimport { messageCreateReducer, messageListReducer } from \"./reducers/messageReducers\";\r\nimport {\r\n  notificationLatestReducer,\r\n  notificationListReducer,\r\n  notificationOpenAllReducer,\r\n  notificationOpenReducer,\r\n} from \"./reducers/notificationReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userFollow: userFollowReducer,\r\n  userProfileUpdate: userProfileUpdateReducer,\r\n  usersList: usersListReducer,\r\n  userSelect: selectUserReducer,\r\n  postList: postListReducer,\r\n  postCreate: postCreateReducer,\r\n  postLike: postLikeReducer,\r\n  postRetweet: postRetweetReducer,\r\n  postReply: postReplyReducer,\r\n  postDetails: postDetailsReducer,\r\n  postDelete: postDeleteReducer,\r\n  postsUser: postsUserReducer,\r\n  postPin: postPinReducer,\r\n  chatCreate: chatCreateReducer,\r\n  chatList: chatListReducer,\r\n  chatDetails: chatDetailsReducer,\r\n  chatMessagesRead: markAllMessagesReadReducer,\r\n  chatGroupName: chatGroupeNameUpdateReducer,\r\n  chatGroupUpdate: chatGroupeUpdateReducer,\r\n  chatGroupLeave: chatGroupeLeaveReducer,\r\n  messageCreate: messageCreateReducer,\r\n  messageList: messageListReducer,\r\n  notificationList: notificationListReducer,\r\n  notificationOpen: notificationOpenReducer,\r\n  notificationOpenAll: notificationOpenAllReducer,\r\n  notificationLatest: notificationLatestReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\")!)\r\n  : null;\r\n\r\nconst userSelectFromStorage = localStorage.getItem(\"selectedUser\")\r\n  ? JSON.parse(localStorage.getItem(\"selectedUser\")!)\r\n  : [];\r\n\r\nconst initialState: any = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n  userSelect: { selectedUser: userSelectFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nexport const store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport type reducerState = ReturnType<typeof reducer>;\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_FOLLOW_FAIL,\r\n  USER_FOLLOW_REQUEST,\r\n  USER_FOLLOW_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_PROFILE_UPDATE_FAIL,\r\n  USER_PROFILE_UPDATE_REQUEST,\r\n  USER_PROFILE_UPDATE_RESET,\r\n  USER_PROFILE_UPDATE_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_SELECT_ADD,\r\n  USER_SELECT_REMOVE,\r\n  USER_SELECT_RESET,\r\n} from \"../constants/userConstants\";\r\nimport { IAction } from \"../types\";\r\n\r\nexport const userLoginReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: payload };\r\n\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userFollowReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case USER_FOLLOW_REQUEST:\r\n      return { loading: true, success: false };\r\n\r\n    case USER_FOLLOW_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case USER_FOLLOW_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userProfileUpdateReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case USER_PROFILE_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_PROFILE_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_PROFILE_UPDATE_FAIL:\r\n      return { loading: false, error: payload };\r\n    case USER_PROFILE_UPDATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const usersListReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: payload };\r\n\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const selectUserReducer = (\r\n  state = { selectedUser: [] },\r\n  { type, payload }: IAction\r\n) => {\r\n  switch (type) {\r\n    case USER_SELECT_ADD:\r\n      const user = payload;\r\n      const existUser: any = state.selectedUser.find((x: any) => x._id === user._id);\r\n\r\n      if (existUser) {\r\n        return {\r\n          ...state,\r\n          selectedUser: state.selectedUser.map((x: any) =>\r\n            x._id === existUser._id ? user : x\r\n          ),\r\n        };\r\n      } else {\r\n        return { ...state, selectedUser: [...state.selectedUser, user] };\r\n      }\r\n\r\n    case USER_SELECT_REMOVE:\r\n      return {\r\n        ...state,\r\n        selectedUser: state.selectedUser.filter((x: any) => x._id !== payload),\r\n      };\r\n\r\n    case USER_SELECT_RESET:\r\n      return {\r\n        selectedUser: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  POST_CREATE_FAIL,\r\n  POST_CREATE_REQUEST,\r\n  POST_CREATE_SUCCESS,\r\n  POST_CREATE_RESET,\r\n  POST_LIST_REQUEST,\r\n  POST_LIST_SUCCESS,\r\n  POST_LIST_FAIL,\r\n  POST_LIKE_REQUEST,\r\n  POST_LIKE_SUCCESS,\r\n  POST_LIKE_FAIL,\r\n  POST_RETWEET_REQUEST,\r\n  POST_RETWEET_SUCCESS,\r\n  POST_RETWEET_FAIL,\r\n  POST_REPLY_REQUEST,\r\n  POST_REPLY_SUCCESS,\r\n  POST_REPLY_FAIL,\r\n  POST_DETAILS_REQUEST,\r\n  POST_DETAILS_SUCCESS,\r\n  POST_DETAILS_FAIL,\r\n  POST_DELETE_REQUEST,\r\n  POST_DELETE_SUCCESS,\r\n  POST_DELETE_FAIL,\r\n  POST_DELETE_RESET,\r\n  POSTS_USER_REQUEST,\r\n  POSTS_USER_SUCCESS,\r\n  POSTS_USER_FAIL,\r\n  POSTS_USER_RESET,\r\n  POST_PIN_REQUEST,\r\n  POST_PIN_SUCCESS,\r\n  POST_PIN_FAIL,\r\n  POST_PIN_RESET,\r\n  POST_LIST_RESET,\r\n} from \"../constants/postConstants\";\r\nimport { IAction } from \"../types\";\r\n\r\nexport const postListReducer = (state = { posts: [] }, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case POST_LIST_REQUEST:\r\n      return { ...state, loading: true, posts: [] };\r\n\r\n    case POST_LIST_SUCCESS:\r\n      return { ...state, loading: false, posts: payload.posts };\r\n\r\n    case POST_LIST_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    case POST_LIST_RESET:\r\n      return { posts: [] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const postCreateReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case POST_CREATE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case POST_CREATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case POST_CREATE_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    case POST_CREATE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const postLikeReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case POST_LIKE_REQUEST:\r\n      return { ...state, loading: true };\r\n\r\n    case POST_LIKE_SUCCESS:\r\n      return { ...state, loading: false, success: true };\r\n\r\n    case POST_LIKE_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const postRetweetReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case POST_RETWEET_REQUEST:\r\n      return { ...state, loading: true };\r\n\r\n    case POST_RETWEET_SUCCESS:\r\n      return { ...state, loading: false, success: true };\r\n\r\n    case POST_RETWEET_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const postReplyReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case POST_REPLY_REQUEST:\r\n      return { loading: true };\r\n\r\n    case POST_REPLY_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case POST_REPLY_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const postDetailsReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case POST_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n\r\n    case POST_DETAILS_SUCCESS:\r\n      return { loading: false, post: payload };\r\n\r\n    case POST_DETAILS_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const postDeleteReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case POST_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case POST_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case POST_DELETE_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    case POST_DELETE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const postsUserReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case POSTS_USER_REQUEST:\r\n      return { loading: true };\r\n\r\n    case POSTS_USER_SUCCESS:\r\n      return { loading: false, posts: payload };\r\n\r\n    case POSTS_USER_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    case POSTS_USER_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const postPinReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case POST_PIN_REQUEST:\r\n      return { loading: true };\r\n    case POST_PIN_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case POST_PIN_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    case POST_PIN_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CHAT_CREATE_FAIL,\r\n  CHAT_CREATE_REQUEST,\r\n  CHAT_CREATE_RESET,\r\n  CHAT_CREATE_SUCCESS,\r\n  CHAT_DETAILS_FAIL,\r\n  CHAT_DETAILS_REQUEST,\r\n  CHAT_DETAILS_RESET,\r\n  CHAT_DETAILS_SUCCESS,\r\n  CHAT_GROUP_LEAVE_FAIL,\r\n  CHAT_GROUP_LEAVE_REQUEST,\r\n  CHAT_GROUP_LEAVE_RESET,\r\n  CHAT_GROUP_LEAVE_SUCCESS,\r\n  CHAT_GROUP_NAME_UPDATE_FAIL,\r\n  CHAT_GROUP_NAME_UPDATE_REQUEST,\r\n  CHAT_GROUP_NAME_UPDATE_RESET,\r\n  CHAT_GROUP_NAME_UPDATE_SUCCESS,\r\n  CHAT_GROUP_UPDATE_FAIL,\r\n  CHAT_GROUP_UPDATE_REQUEST,\r\n  CHAT_GROUP_UPDATE_RESET,\r\n  CHAT_GROUP_UPDATE_SUCCESS,\r\n  CHAT_LIST_FAIL,\r\n  CHAT_LIST_READ_FAIL,\r\n  CHAT_LIST_READ_REQUEST,\r\n  CHAT_LIST_READ_SUCCESS,\r\n  CHAT_LIST_REQUEST,\r\n  CHAT_LIST_SUCCESS,\r\n} from \"../constants/chatConstants\";\r\nimport { IAction } from \"../types\";\r\n\r\nexport const chatCreateReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case CHAT_CREATE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case CHAT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, chat: payload };\r\n\r\n    case CHAT_CREATE_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    case CHAT_CREATE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const chatListReducer = (state = { chats: [] }, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case CHAT_LIST_REQUEST:\r\n      return { ...state, loading: true };\r\n\r\n    case CHAT_LIST_SUCCESS:\r\n      return { ...state, loading: false, chats: payload };\r\n\r\n    case CHAT_LIST_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const chatDetailsReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case CHAT_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n\r\n    case CHAT_DETAILS_SUCCESS:\r\n      return { loading: false, chat: payload, success: true };\r\n\r\n    case CHAT_DETAILS_FAIL:\r\n      return { loading: false, error: payload, success: false };\r\n\r\n    case CHAT_DETAILS_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const chatGroupeNameUpdateReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case CHAT_GROUP_NAME_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case CHAT_GROUP_NAME_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case CHAT_GROUP_NAME_UPDATE_FAIL:\r\n      return { loading: false, error: payload };\r\n    case CHAT_GROUP_NAME_UPDATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const markAllMessagesReadReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case CHAT_LIST_READ_REQUEST:\r\n      return { loading: true, success: false };\r\n\r\n    case CHAT_LIST_READ_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case CHAT_LIST_READ_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const chatGroupeUpdateReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case CHAT_GROUP_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case CHAT_GROUP_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case CHAT_GROUP_UPDATE_FAIL:\r\n      return { loading: false, error: payload };\r\n    case CHAT_GROUP_UPDATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const chatGroupeLeaveReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case CHAT_GROUP_LEAVE_REQUEST:\r\n      return { loading: true };\r\n    case CHAT_GROUP_LEAVE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case CHAT_GROUP_LEAVE_FAIL:\r\n      return { loading: false, error: payload };\r\n    case CHAT_GROUP_LEAVE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  MESSAGE_CREATE_FAIL,\r\n  MESSAGE_CREATE_REQUEST,\r\n  MESSAGE_CREATE_RESET,\r\n  MESSAGE_CREATE_SUCCESS,\r\n  MESSAGE_LIST_FAIL,\r\n  MESSAGE_LIST_REQUEST,\r\n  MESSAGE_LIST_SUCCESS,\r\n} from \"../constants/messageConstants\";\r\nimport { IAction } from \"../types\";\r\n\r\nexport const messageCreateReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case MESSAGE_CREATE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case MESSAGE_CREATE_SUCCESS:\r\n      return { loading: false, success: true, message: payload };\r\n\r\n    case MESSAGE_CREATE_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    case MESSAGE_CREATE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const messageListReducer = (\r\n  state = { messages: [] },\r\n  { type, payload }: IAction\r\n) => {\r\n  switch (type) {\r\n    case MESSAGE_LIST_REQUEST:\r\n      return { ...state, loading: true };\r\n\r\n    case MESSAGE_LIST_SUCCESS:\r\n      return { ...state, loading: false, messages: payload };\r\n\r\n    case MESSAGE_LIST_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  NOTIFICATION_LATEST_FAIL,\r\n  NOTIFICATION_LATEST_REQUEST,\r\n  NOTIFICATION_LATEST_SUCCESS,\r\n  NOTIFICATION_LIST_FAIL,\r\n  NOTIFICATION_LIST_REQUEST,\r\n  NOTIFICATION_LIST_SUCCESS,\r\n  NOTIFICATION_OPEN_ALL_FAIL,\r\n  NOTIFICATION_OPEN_ALL_REQUEST,\r\n  NOTIFICATION_OPEN_ALL_SUCCESS,\r\n  NOTIFICATION_OPEN_FAIL,\r\n  NOTIFICATION_OPEN_REQUEST,\r\n  NOTIFICATION_OPEN_SUCCESS,\r\n} from \"../constants/notificationConstants\";\r\nimport { IAction } from \"../types\";\r\n\r\nexport const notificationListReducer = (\r\n  state = { notifications: [] },\r\n  { type, payload }: IAction\r\n) => {\r\n  switch (type) {\r\n    case NOTIFICATION_LIST_REQUEST:\r\n      return { ...state, loading: true, success: false };\r\n\r\n    case NOTIFICATION_LIST_SUCCESS:\r\n      return { ...state, loading: false, success: true, notifications: payload };\r\n\r\n    case NOTIFICATION_LIST_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const notificationOpenReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case NOTIFICATION_OPEN_REQUEST:\r\n      return { loading: true, success: false };\r\n\r\n    case NOTIFICATION_OPEN_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case NOTIFICATION_OPEN_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const notificationOpenAllReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case NOTIFICATION_OPEN_ALL_REQUEST:\r\n      return { loading: true, success: false };\r\n\r\n    case NOTIFICATION_OPEN_ALL_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case NOTIFICATION_OPEN_ALL_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const notificationLatestReducer = (state = {}, { type, payload }: IAction) => {\r\n  switch (type) {\r\n    case NOTIFICATION_LATEST_REQUEST:\r\n      return { loading: true, success: false };\r\n\r\n    case NOTIFICATION_LATEST_SUCCESS:\r\n      return { loading: false, success: true, notification: payload };\r\n\r\n    case NOTIFICATION_LATEST_FAIL:\r\n      return { loading: false, error: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}